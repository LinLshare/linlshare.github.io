{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/robots.txt","path":"robots.txt","modified":0,"renderable":0},{"_id":"source/favicon.ico","path":"favicon.ico","modified":0,"renderable":0},{"_id":"source/README.md","path":"README.md","modified":0,"renderable":0},{"_id":"source/music.png","path":"music.png","modified":0,"renderable":0},{"_id":"themes/kiss/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/kiss/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/kiss/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/kiss/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/kiss/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/kiss/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/kiss/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/kiss/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/kiss/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/kiss/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/kiss/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/kiss/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/kiss/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/kiss/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/kiss/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/kiss/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/kiss/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/kiss/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/kiss/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/kiss/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/kiss/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/kiss/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/kiss/source/css/images/moon.jpg","path":"css/images/moon.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"54aafbf6e9eeb7180fe57f4e9932ac5c7949553d","modified":1606919401896},{"_id":"source/robots.txt","hash":"be8d5ab7132ac74a9375439e438b00b8c91e50b4","modified":1601797714830},{"_id":"source/favicon.ico","hash":"8ea7fb25464a2608b774153fe6731fd8fd82c1b0","modified":1606893851096},{"_id":"themes/kiss/.git","hash":"3235b2752a63cce552c06289853fc013c13f4ca6","modified":1601799641065},{"_id":"source/README.md","hash":"933b824f5bee4a6d4f81fc25d0a683aec450918b","modified":1601800018918},{"_id":"themes/kiss/.gitignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1601799641133},{"_id":"source/music.png","hash":"3ca73e04c922de92ffb44d6fe4c698720f85b041","modified":1601998288571},{"_id":"themes/kiss/README.md","hash":"a6c41fdac85d719362210c24c85d41a3fe001d01","modified":1601799641133},{"_id":"themes/kiss/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1601799641133},{"_id":"themes/kiss/LICENSE","hash":"62aacb980e619f9d4f3d1a99fd314536ae3333d8","modified":1601799641133},{"_id":"themes/kiss/_config.yml","hash":"8d1fc121ebbe6fcbb560cc638a2e5d3820384e0c","modified":1606899007317},{"_id":"themes/kiss/package-lock.json","hash":"d5294dbb618f8add88f91ec1188a2663d14fc95d","modified":1606920544890},{"_id":"themes/kiss/package.json","hash":"49a8d15cd77d01561a67cc1b04d765b71570ef69","modified":1606920544811},{"_id":"source/_posts/.DS_Store","hash":"d61d1098bec1490318d6f802a03b8c2d4700fde9","modified":1606890079949},{"_id":"source/_posts/Hello.md","hash":"04e8f02d1fa4488e2cbb0ddcea3e52487f10a5bb","modified":1601799937030},{"_id":"themes/kiss/languages/ja.yml","hash":"ac658b45922c105771c689244a4cf9514cb843bb","modified":1606925076873},{"_id":"themes/kiss/languages/default.yml","hash":"d6287ac55e30ed4571d4a2dafd8953dac7266b51","modified":1606925040360},{"_id":"themes/kiss/languages/zh-CN.yml","hash":"0899b1b22fd31ec26151203614e364f1b0badddf","modified":1606924832966},{"_id":"themes/kiss/languages/zh-TW.yml","hash":"bbd90e5e7bcebe67140172aea3df574f76266eb4","modified":1606924809007},{"_id":"themes/kiss/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1601799641139},{"_id":"themes/kiss/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1601799641138},{"_id":"themes/kiss/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1601799641139},{"_id":"themes/kiss/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1601799641139},{"_id":"themes/kiss/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1601799641139},{"_id":"themes/kiss/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1601799641139},{"_id":"themes/kiss/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1601799641139},{"_id":"themes/kiss/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1606921295056},{"_id":"source/_posts/music/listen-chopin-raindrop.md","hash":"7fb35e7aa7b25c8e84ccb612e932c13765702406","modified":1602431193810},{"_id":"source/_posts/it/.DS_Store","hash":"c03c0c240bf5c1f8ad0e26b885edaa748d1b410b","modified":1606890093695},{"_id":"themes/kiss/node_modules/exit/.npmignore","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1379691245000},{"_id":"themes/kiss/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1601799641138},{"_id":"themes/kiss/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1601799641138},{"_id":"themes/kiss/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1601799641138},{"_id":"themes/kiss/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1601799641138},{"_id":"themes/kiss/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1601799641138},{"_id":"themes/kiss/layout/_partial/after-footer.ejs","hash":"c8a0b16aa29466bf4c288b48a4b458b2ac69ada7","modified":1601799641135},{"_id":"themes/kiss/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1601799641135},{"_id":"themes/kiss/layout/_partial/article.ejs","hash":"f76d3d99a870eb272e02f7d4e6cb286728d65b4d","modified":1606925385046},{"_id":"themes/kiss/layout/_partial/archive.ejs","hash":"950ddd91db8718153b329b96dc14439ab8463ba5","modified":1601799641136},{"_id":"themes/kiss/layout/_partial/footer.ejs","hash":"59cbefbcc43105354c89d64a69c85d318299bb05","modified":1606924677648},{"_id":"themes/kiss/layout/_partial/gauges-analytics.ejs","hash":"aad6312ac197d6c5aaf2104ac863d7eba46b772a","modified":1601799641136},{"_id":"themes/kiss/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1601799641136},{"_id":"themes/kiss/layout/_partial/header.ejs","hash":"29dc712318c3d64ea9d7603300738d23f5b9e5cc","modified":1601799641136},{"_id":"themes/kiss/layout/_partial/head.ejs","hash":"7421e44e34672c6e5232ea3e322584065e3ada9b","modified":1601799641136},{"_id":"themes/kiss/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1601799641136},{"_id":"themes/kiss/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1601799641138},{"_id":"themes/kiss/source/css/_extend.styl","hash":"3d0095dfc6c3aaf7028de1aace2599bcb99ede82","modified":1601815652647},{"_id":"themes/kiss/source/css/_variables.styl","hash":"85e17c5ca19f637cec560471c40df8afefc95d77","modified":1606892006651},{"_id":"themes/kiss/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1601799641146},{"_id":"themes/kiss/source/css/style.styl","hash":"d480f717465970cf6dfccdb6d1af18fba16cbdd0","modified":1602752265510},{"_id":"themes/kiss/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1601799641146},{"_id":"themes/kiss/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1601799641147},{"_id":"themes/kiss/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1601799641147},{"_id":"themes/kiss/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1601799641147},{"_id":"themes/kiss/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1601799641147},{"_id":"themes/kiss/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1601799641148},{"_id":"themes/kiss/source/js/script.js","hash":"63c21efc77abda2eec546d66ee832fc9776edabd","modified":1606921215516},{"_id":"themes/kiss/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1601799641148},{"_id":"themes/kiss/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1601799641148},{"_id":"themes/kiss/node_modules/.bin/cake","hash":"800093682cd061078b68634a2940222459f7fbc6","modified":1487734948000},{"_id":"themes/kiss/node_modules/.bin/coffee","hash":"53426d453e8518879d69c1d8925b91434ebf8f80","modified":1487734948000},{"_id":"themes/kiss/node_modules/.bin/dateformat","hash":"74dbf2e8c6bbc317d1a64d8eea3aa3ae694cac94","modified":1417082792000},{"_id":"themes/kiss/node_modules/.bin/esparse","hash":"3d6b8fda44ca6d8f347c35d442c6dd838646f8f1","modified":1483593779000},{"_id":"themes/kiss/node_modules/.bin/esvalidate","hash":"fccb8aaa5e29849a2f8b368b24a3a33030252e75","modified":1531470784000},{"_id":"themes/kiss/node_modules/.bin/grunt","hash":"c1dae199aabfffc1d5d588d03d2229372c8d03ab","modified":499162500000},{"_id":"themes/kiss/node_modules/.bin/js-yaml","hash":"d8d9dd979cb7920bc3cb49825dbca749754c0ca6","modified":499162500000},{"_id":"themes/kiss/node_modules/.bin/nopt","hash":"f2a561712df0e004c712bfd6c9b0fdc70cc26e8e","modified":1447359143000},{"_id":"themes/kiss/node_modules/.bin/mkdirp","hash":"0dbed17e23d62e8dc9893f9459768531b300c95c","modified":1419626841000},{"_id":"themes/kiss/node_modules/.bin/rimraf","hash":"f6e74628b82bbd551e11947abad295c1b87cf6df","modified":1371826156000},{"_id":"themes/kiss/node_modules/.bin/strip-indent","hash":"aef33a307f851bb25b1bb7efbe24089df85cf7c8","modified":1407937346000},{"_id":"themes/kiss/node_modules/.bin/which","hash":"5b6b3e1838316fb3f1b3b4194cdf49db0674eb17","modified":499162500000},{"_id":"themes/kiss/node_modules/.bin/semver","hash":"4fc67e3f71aba3021cf05c8c0513f75d094f9cbd","modified":499162500000},{"_id":"themes/kiss/node_modules/abbrev/abbrev.js","hash":"e33940719dacc3ea04a0fb3efd7f5a57987b6257","modified":1487053799000},{"_id":"themes/kiss/node_modules/abbrev/LICENSE","hash":"34d4249a8ef23970810fd3018b9399b1268dc052","modified":1506566796000},{"_id":"themes/kiss/node_modules/abbrev/README.md","hash":"c520bc857ec612ed88e13d794c47882d5aed3286","modified":1286218346000},{"_id":"themes/kiss/node_modules/ansi-styles/license","hash":"5aaf48196ddd4d007a3067aa7f30303ca8e4b29c","modified":1496344655000},{"_id":"themes/kiss/node_modules/ansi-styles/index.js","hash":"b61182f5204ff5f4f64a7c666569975205a9e3c0","modified":1519983217000},{"_id":"themes/kiss/node_modules/abbrev/package.json","hash":"2fe43de64e0db12f58b2f2fa06ce7f6cb37b73d1","modified":1606920508961},{"_id":"themes/kiss/node_modules/ansi-styles/readme.md","hash":"3673eb4048729e8286ddb3566f361d01bad50682","modified":1518353760000},{"_id":"themes/kiss/node_modules/ansi-styles/package.json","hash":"4acc726f654e19b1c9be3ff1a39483aa7a6264c1","modified":1606920508962},{"_id":"themes/kiss/node_modules/argparse/LICENSE","hash":"dbbafd9d668fb6b582e4b4e3c5f3e893a353f5ef","modified":1424151350000},{"_id":"themes/kiss/node_modules/argparse/CHANGELOG.md","hash":"81920ac7d617ac9d74690fbf88ebf8bc9e549038","modified":1518704487000},{"_id":"themes/kiss/node_modules/argparse/README.md","hash":"12e97647c8783ac5a9cc1a57b8b5a53c1d152f4d","modified":1518704419000},{"_id":"themes/kiss/node_modules/argparse/index.js","hash":"a1498d012d4a7db85555a18606487d4a7ec379d0","modified":1453017408000},{"_id":"themes/kiss/node_modules/argparse/package.json","hash":"cf19f45be13def59ee9c1629ad2412fe320ba67e","modified":1606920508961},{"_id":"themes/kiss/node_modules/array-differ/index.d.ts","hash":"27af79c2aebb4400951f9754cc1615382476d0bf","modified":499162500000},{"_id":"themes/kiss/node_modules/array-differ/index.js","hash":"f422aadc54274fb04274097413790ad2fb632b00","modified":499162500000},{"_id":"themes/kiss/node_modules/array-differ/license","hash":"5aaf48196ddd4d007a3067aa7f30303ca8e4b29c","modified":499162500000},{"_id":"themes/kiss/node_modules/array-differ/package.json","hash":"09d05e145799359f119164e751a11ee318bb320e","modified":1606920508961},{"_id":"themes/kiss/node_modules/array-union/index.d.ts","hash":"fbc79b3a29211a574d0c5fbfb4b370c4f73d6218","modified":499162500000},{"_id":"themes/kiss/node_modules/array-union/index.js","hash":"724b8c46f000a118dcb13f05458d5dbfd88fa1bb","modified":499162500000},{"_id":"themes/kiss/node_modules/array-union/license","hash":"5aaf48196ddd4d007a3067aa7f30303ca8e4b29c","modified":499162500000},{"_id":"themes/kiss/node_modules/array-differ/readme.md","hash":"cddcf7ba81eb8a6ccfcc449bdb4c250143be1c4e","modified":499162500000},{"_id":"themes/kiss/node_modules/array-union/package.json","hash":"483258d6824ed3fbae4d777468d221f2d473fc55","modified":1606920508961},{"_id":"themes/kiss/node_modules/array-union/readme.md","hash":"c6c4ca3e928962d69ff8b9ca0945c9c451e56286","modified":499162500000},{"_id":"themes/kiss/node_modules/arrify/index.js","hash":"707a4cfd4920daa720357071e02ee9d97b37fb7b","modified":499162500000},{"_id":"themes/kiss/node_modules/arrify/index.d.ts","hash":"75defbcb559448365a2de9f544bc9cecd8393f4a","modified":499162500000},{"_id":"themes/kiss/node_modules/arrify/license","hash":"5aaf48196ddd4d007a3067aa7f30303ca8e4b29c","modified":499162500000},{"_id":"themes/kiss/node_modules/arrify/package.json","hash":"5c001a264e402d025d5d2e96435181db8a050f38","modified":1606920508962},{"_id":"themes/kiss/node_modules/array-find-index/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":1396798991000},{"_id":"themes/kiss/node_modules/arrify/readme.md","hash":"fa2a916036b1b8518f69d10b4166c4c9f76fac55","modified":499162500000},{"_id":"themes/kiss/node_modules/array-find-index/index.js","hash":"efd290fcda74bc499ada359abb6f06e7d0ea29f2","modified":1451410643000},{"_id":"themes/kiss/node_modules/array-find-index/package.json","hash":"8af470e06811b27ee78766c19095652c2117d3b8","modified":1606920508962},{"_id":"themes/kiss/node_modules/array-find-index/readme.md","hash":"b6c094ce304eac2a92a9139f491fdff4f2d951f2","modified":1475224475000},{"_id":"themes/kiss/node_modules/async/LICENSE","hash":"e452de6c5360ba269a3bda17cca33f0bf51035f5","modified":1432069407000},{"_id":"themes/kiss/node_modules/async/CHANGELOG.md","hash":"f6dbdbec1d4babb8661eae69a9d35700ca89bfb1","modified":1452211409000},{"_id":"themes/kiss/node_modules/async/package.json","hash":"134ce343b312dbdaa36f1e7da14636161e92bd3a","modified":1606920508962},{"_id":"themes/kiss/node_modules/async/README.md","hash":"1e5c0380861222c007090d0c0a1d8ca4f5272dc5","modified":1452208687000},{"_id":"themes/kiss/node_modules/balanced-match/LICENSE.md","hash":"09013c002fbdd686da2ec13c5a6d014f0a294ba9","modified":1497251889000},{"_id":"themes/kiss/node_modules/balanced-match/.npmignore","hash":"bf3481c896126bd5395e5095c994fb82c9e4fa8a","modified":1497251889000},{"_id":"themes/kiss/node_modules/balanced-match/index.js","hash":"2715b99298649413a681212f3220b1fd0bee0309","modified":1497251889000},{"_id":"themes/kiss/node_modules/balanced-match/README.md","hash":"1386baac658274264e12701b085143357d817bb1","modified":1497251889000},{"_id":"themes/kiss/node_modules/brace-expansion/README.md","hash":"61dcf7b367d852a36fbb50de9824ec92edfa2a5a","modified":1518248525000},{"_id":"themes/kiss/node_modules/brace-expansion/LICENSE","hash":"433c2b9c71bad0957f4831068c2f5d973cef98a9","modified":1518210795000},{"_id":"themes/kiss/node_modules/balanced-match/package.json","hash":"e208887b7597246f9545ee7171ca69d2e857d904","modified":1606920508962},{"_id":"themes/kiss/node_modules/brace-expansion/index.js","hash":"a2f937621d39c20ce582f697c3e4273d1e14b2e0","modified":1518169988000},{"_id":"themes/kiss/node_modules/camelcase/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":1396798991000},{"_id":"themes/kiss/node_modules/camelcase/index.js","hash":"2b8c116fea89376fba3557ffb11fa0e3328846d5","modified":1457803830000},{"_id":"themes/kiss/node_modules/camelcase/package.json","hash":"2035a9bf7061029e005c35a68b3b2468d3f1a2a4","modified":1606920508962},{"_id":"themes/kiss/node_modules/brace-expansion/package.json","hash":"15761fc7b4b203468df827cc5a1debf3d5a1119c","modified":1606920508963},{"_id":"themes/kiss/node_modules/coffeescript/.npmignore","hash":"81ce9d5e8a41d8c108b73e6f3e06020b732658c1","modified":1487734937000},{"_id":"themes/kiss/node_modules/camelcase/readme.md","hash":"c90528b5f1cea2de255651c9daab5b0aea013737","modified":1447354467000},{"_id":"themes/kiss/node_modules/coffeescript/CONTRIBUTING.md","hash":"015e0c625c383ebce0d8fad8c3c521d26fe00527","modified":1487736899000},{"_id":"themes/kiss/node_modules/coffeescript/CNAME","hash":"68c58ea14f5d4a99aedabb4dcb8d4f3bc03467a7","modified":1487734982000},{"_id":"themes/kiss/node_modules/coffeescript/README.md","hash":"1dc4782b8eef044fcb798be7c19399335158d7f5","modified":1487737030000},{"_id":"themes/kiss/node_modules/coffeescript/bower.json","hash":"c4d0cdf53a23340c464931cd95dbf0f1b487e257","modified":1487737073000},{"_id":"themes/kiss/node_modules/coffeescript/LICENSE","hash":"6ddc4d5f2dc360b2c703544fc400fd73ea79808c","modified":1487737018000},{"_id":"themes/kiss/node_modules/camelcase-keys/index.js","hash":"1dfea152d4c0081f9a2b43ca8b060d04874e0021","modified":1458051710000},{"_id":"themes/kiss/node_modules/coffeescript/package.json","hash":"46c92869015d1e1005d278682002d8bffafcf7c0","modified":1606920508974},{"_id":"themes/kiss/node_modules/coffeescript/register.js","hash":"ee75c4852496496bd099f6a04d4eac32f6b245eb","modified":1487735556000},{"_id":"themes/kiss/node_modules/coffeescript/repl.js","hash":"867a591e629b4456953fa0ae9f057cd0dad7a6d8","modified":1487736900000},{"_id":"themes/kiss/node_modules/camelcase-keys/package.json","hash":"ab574a6cef37a2e385ecc8406c6121d92495a347","modified":1606920508966},{"_id":"themes/kiss/node_modules/camelcase-keys/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":1396798991000},{"_id":"themes/kiss/node_modules/camelcase-keys/readme.md","hash":"2e8d2e70154ef46f7f2d3118ccff382bd4f7b549","modified":1458051609000},{"_id":"themes/kiss/node_modules/chalk/index.js.flow","hash":"be474353d9d6921b1609a209d39c297a7d7c13d1","modified":499162500000},{"_id":"themes/kiss/node_modules/chalk/index.js","hash":"612bca2861fd84ccca956db0cf7a528fda99e4d4","modified":499162500000},{"_id":"themes/kiss/node_modules/chalk/license","hash":"5aaf48196ddd4d007a3067aa7f30303ca8e4b29c","modified":499162500000},{"_id":"themes/kiss/node_modules/color-convert/CHANGELOG.md","hash":"888f63060f1f4e78696f49f97d2c7bbe59f6a1bd","modified":499162500000},{"_id":"themes/kiss/node_modules/chalk/readme.md","hash":"3cca523d2882142c7124422f1eee7496eabfb01c","modified":499162500000},{"_id":"themes/kiss/node_modules/chalk/templates.js","hash":"ae6bfdd37656f7ae4e35e4b4f56e0053af538fd8","modified":499162500000},{"_id":"themes/kiss/node_modules/chalk/package.json","hash":"009fd44e464561ab043f0d312433cb2cdfc495ed","modified":1606920509144},{"_id":"themes/kiss/node_modules/color-convert/LICENSE","hash":"2cb896d3773acc17b0f87dbb47759dfde011841b","modified":499162500000},{"_id":"themes/kiss/node_modules/color-convert/README.md","hash":"60d5a2a4f28b9ee6c04efb9f27c351496bccd58e","modified":499162500000},{"_id":"themes/kiss/node_modules/color-convert/package.json","hash":"e4555ef018e447308444d7046651287fdf4c7f70","modified":1606920508962},{"_id":"themes/kiss/node_modules/color-convert/route.js","hash":"80a3801b287442561a469d3abe069418adb4d716","modified":499162500000},{"_id":"themes/kiss/node_modules/color-convert/index.js","hash":"2bec1f2a897147555365623fbc1fe5b971585815","modified":499162500000},{"_id":"themes/kiss/node_modules/color-convert/conversions.js","hash":"5a1e84da09182d3861a6332349370f52dfded83e","modified":499162500000},{"_id":"themes/kiss/node_modules/color-name/.eslintrc.json","hash":"91698743c35b503b5e275bc25096c260d07b07ec","modified":1472935725000},{"_id":"themes/kiss/node_modules/color-name/LICENSE","hash":"e8bc789b6dc24e4c3fc4d208364dd6b029a81eb1","modified":1450922393000},{"_id":"themes/kiss/node_modules/color-name/.npmignore","hash":"daedfa8ad7252fd4fb533bae1d675701f8db11ac","modified":1435528315000},{"_id":"themes/kiss/node_modules/color-name/README.md","hash":"0d4f110fcb4efc18928065d9ffa878c851052d5c","modified":1489460043000},{"_id":"themes/kiss/node_modules/color-name/package.json","hash":"7150aef0039117ae4a54da7b6ffc656c2b98f870","modified":1606920508962},{"_id":"themes/kiss/node_modules/color-name/test.js","hash":"660e7f26e42b82f5e89fe98c2781a542ae8a850d","modified":1500156819000},{"_id":"themes/kiss/node_modules/color-name/index.js","hash":"db20105dc898fa8aa6706492502431c680c0dc94","modified":1500156807000},{"_id":"themes/kiss/node_modules/colors/LICENSE","hash":"341480159e4c6e291a492a441fe69081d671e85d","modified":1430290937000},{"_id":"themes/kiss/node_modules/colors/ReadMe.md","hash":"3e22ae665134396b6dcd45ec5c2c750ad98c00d9","modified":1434545826000},{"_id":"themes/kiss/node_modules/colors/safe.js","hash":"65698ffe95c229962bb1c212eb971401eaeb0b62","modified":1416873262000},{"_id":"themes/kiss/node_modules/concat-map/LICENSE","hash":"b2e68ce937c1f851926f7e10280cc93221d4f53c","modified":1391050985000},{"_id":"themes/kiss/node_modules/concat-map/.travis.yml","hash":"994e65474ac75a6687de118e175526bc106cef57","modified":1339129737000},{"_id":"themes/kiss/node_modules/colors/package.json","hash":"3001ba35154925b866aadaf8849dc2f0db5af7a8","modified":1606920508962},{"_id":"themes/kiss/node_modules/concat-map/index.js","hash":"a3063f014cc693b320dbd64de3243a79247c1e05","modified":1354939769000},{"_id":"themes/kiss/node_modules/concat-map/package.json","hash":"dadbfd5f7ad6d0c572e2b0d7c284b5c8e3a62088","modified":1606920508962},{"_id":"themes/kiss/node_modules/currently-unhandled/browser.js","hash":"233ff2ee2584747df9a03363e1e6279a37cbd975","modified":1464863052000},{"_id":"themes/kiss/node_modules/currently-unhandled/core.js","hash":"7fdacb0bc9192bf6151701612df40e8e44a3dd4e","modified":1464842694000},{"_id":"themes/kiss/node_modules/currently-unhandled/index.js","hash":"274467fba7e013f8c6a48f3763023ca1b2d8610f","modified":1464848650000},{"_id":"themes/kiss/node_modules/currently-unhandled/license","hash":"76a1abf5ae34f3a0ccdeff35879f4b42c24c333e","modified":1464837341000},{"_id":"themes/kiss/node_modules/concat-map/README.markdown","hash":"132e6e8fd1d19ec2422fdcde00840d8237e44094","modified":1354099276000},{"_id":"themes/kiss/node_modules/currently-unhandled/package.json","hash":"a58e061c6deeca68db6466ca71becf2de7a20209","modified":1606920508963},{"_id":"themes/kiss/node_modules/decamelize/index.js","hash":"b2b327355fce3e54d2a2c542beb41ae803c33285","modified":1457167643000},{"_id":"themes/kiss/node_modules/currently-unhandled/readme.md","hash":"90b084bd130f094dc0f467f5fa8dd6c3ca0c5faf","modified":1464863904000},{"_id":"themes/kiss/node_modules/decamelize/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":1396798991000},{"_id":"themes/kiss/node_modules/dateformat/.npmignore","hash":"e06c95b04983129eea55d19ff2376ff69078443e","modified":1417082792000},{"_id":"themes/kiss/node_modules/decamelize/readme.md","hash":"ab75be4d249b40443b662f2cd920be0cf657c6e0","modified":1457167687000},{"_id":"themes/kiss/node_modules/dateformat/.travis.yml","hash":"8335647eddbeeab76f07be405e926c0406e2bfd1","modified":1447915155000},{"_id":"themes/kiss/node_modules/decamelize/package.json","hash":"84801fcd921adfaa701a40c401e8f3bfa14bb94b","modified":1606920508963},{"_id":"themes/kiss/node_modules/dateformat/Readme.md","hash":"67a9ecf5d2b5bbfd18b6ae0c78536df6c6c0e9d3","modified":1447915155000},{"_id":"themes/kiss/node_modules/dateformat/LICENSE","hash":"bbdbafe95c7e86caa022d7012805e8f06532b3e1","modified":1410851296000},{"_id":"themes/kiss/node_modules/dateformat/package.json","hash":"58014e5e4725a683d034e73231bd660961480d59","modified":1606920509145},{"_id":"themes/kiss/node_modules/escape-string-regexp/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":1403645654000},{"_id":"themes/kiss/node_modules/escape-string-regexp/readme.md","hash":"b693d3ddaf0a2edac02f8dc9b60382f7a818083e","modified":1456057032000},{"_id":"themes/kiss/node_modules/escape-string-regexp/index.js","hash":"17b40cc4dc8a455277994ab351c0650215394042","modified":1456057032000},{"_id":"themes/kiss/node_modules/escape-string-regexp/package.json","hash":"4e88284053bc15e6939211b4b900bef015d93375","modified":1606920508963},{"_id":"themes/kiss/node_modules/error-ex/LICENSE","hash":"92605120ca7f929c96354540307a059bafe2e78a","modified":1528764712000},{"_id":"themes/kiss/node_modules/error-ex/README.md","hash":"835fcba18a8825187127541e7502610e2dcfa5b0","modified":1528764712000},{"_id":"themes/kiss/node_modules/error-ex/index.js","hash":"2c9f804ca561680284eca33ab39c3de463428d9d","modified":1529389188000},{"_id":"themes/kiss/node_modules/error-ex/package.json","hash":"0c413d4b0a80619f9255b00c3ed11295ada8086d","modified":1606920508965},{"_id":"themes/kiss/node_modules/esprima/ChangeLog","hash":"003787b7f499feaf8fafa02c1f48b295708a0357","modified":1531470784000},{"_id":"themes/kiss/node_modules/esprima/LICENSE.BSD","hash":"26dd70b52c7c7111ca8913fc0bc240dc28ca15c0","modified":1483593779000},{"_id":"themes/kiss/node_modules/esprima/README.md","hash":"4abeb43aeba7cef0da8fafcda6bb5c109bc9d750","modified":1531470784000},{"_id":"themes/kiss/node_modules/esprima/package.json","hash":"dfbad481650ea554260743ca20505a5b88922f23","modified":1606920508974},{"_id":"themes/kiss/node_modules/eventemitter2/index.js","hash":"a38bca78b416dccd824b14d360e4a4c3593b6673","modified":1403539644000},{"_id":"themes/kiss/node_modules/eventemitter2/README.md","hash":"fb7c8c8ad5cdfd6b9d9e23942f9ac447a8672c65","modified":1403539644000},{"_id":"themes/kiss/node_modules/eventemitter2/package.json","hash":"43a37891059301ad7520c5910bce2a77bf6ef240","modified":1606920508963},{"_id":"themes/kiss/node_modules/exit/.jshintrc","hash":"0587e11e5cb53577f178a5ec54e8291f7c8803b3","modified":1379691245000},{"_id":"themes/kiss/node_modules/exit/LICENSE-MIT","hash":"b418ef01b1aa695789ec0237509d4c54bbec98ee","modified":1379691245000},{"_id":"themes/kiss/node_modules/exit/Gruntfile.js","hash":"7af27352d82472a9cea4f14b5756a759ce98df96","modified":1379691245000},{"_id":"themes/kiss/node_modules/exit/README.md","hash":"02e47ddbc94f472863846785579f7cce96226600","modified":1385493795000},{"_id":"themes/kiss/node_modules/exit/.travis.yml","hash":"dd90533610ce61425fd0a3d2ad81a8c32b77bdf3","modified":1379691245000},{"_id":"themes/kiss/node_modules/exit/package.json","hash":"61997ce37a21c498d1e74c9773b0fbeaab3e8003","modified":1606920508964},{"_id":"themes/kiss/node_modules/fs.realpath/README.md","hash":"325af4f63ad42821a34e8df60f6e3b502f1a3f64","modified":1466015245000},{"_id":"themes/kiss/node_modules/fs.realpath/LICENSE","hash":"cdf711a72ab90a1b193aea27e96cccf491e157e2","modified":1466015087000},{"_id":"themes/kiss/node_modules/fs.realpath/index.js","hash":"9b5cdf4ef79264959ed0a23e4c35efbe6d64b0df","modified":1466015723000},{"_id":"themes/kiss/node_modules/fs.realpath/package.json","hash":"740333883fdeb7628177ce0a1d8bd29d9ca47555","modified":1606920508963},{"_id":"themes/kiss/node_modules/findup-sync/.npmignore","hash":"056e6aa202e4a1d6d8a415c2f42e6442e2e92b09","modified":1442281864000},{"_id":"themes/kiss/node_modules/fs.realpath/old.js","hash":"d2d656e98e4d0735902068408824f8d08aaea84c","modified":1466011904000},{"_id":"themes/kiss/node_modules/findup-sync/README.md","hash":"c8e6da43b03868de1d05c142b416d85a6294fbe3","modified":1442281948000},{"_id":"themes/kiss/node_modules/findup-sync/LICENSE-MIT","hash":"b418ef01b1aa695789ec0237509d4c54bbec98ee","modified":1442281864000},{"_id":"themes/kiss/node_modules/get-stdin/index.js","hash":"d2a3722d41b11b6c0783046b1657b5aa0c56e536","modified":1421760909000},{"_id":"themes/kiss/node_modules/get-stdin/package.json","hash":"b63a789e573a2bb0b72f5e99e627ae7b999be469","modified":1606920508964},{"_id":"themes/kiss/node_modules/getobject/.jshintrc","hash":"29433d358ee71a9b57a8059eaa4a01a227c3e664","modified":1385064107000},{"_id":"themes/kiss/node_modules/findup-sync/package.json","hash":"76c4281372b59d16a761f3aa06b213bfb2c793b8","modified":1606920509143},{"_id":"themes/kiss/node_modules/get-stdin/readme.md","hash":"463253693f496ad1b7e3d7504489d24625a33859","modified":1408302976000},{"_id":"themes/kiss/node_modules/getobject/Gruntfile.js","hash":"f69e615ca9653096cdaf8d3c18ba10e0dfa9118c","modified":1385064107000},{"_id":"themes/kiss/node_modules/getobject/.travis.yml","hash":"75d47644e03b370399b1c187df69c8f10f780b65","modified":1385064107000},{"_id":"themes/kiss/node_modules/getobject/LICENSE-MIT","hash":"b418ef01b1aa695789ec0237509d4c54bbec98ee","modified":1385064107000},{"_id":"themes/kiss/node_modules/getobject/.npmignore","hash":"4908b67461dad9714fb835308800efdeea795c62","modified":1385064107000},{"_id":"themes/kiss/node_modules/getobject/README.md","hash":"391e18fa52be1d8e5adad4fbf6805b90fdbac14c","modified":1385064360000},{"_id":"themes/kiss/node_modules/getobject/package.json","hash":"8f0a3ba15780170e7d8c885989341e6f8226a6d7","modified":1606920508964},{"_id":"themes/kiss/node_modules/find-up/index.js","hash":"ca95796b11fe9c62570d1881f6c40603ffbd1f80","modified":1457198946000},{"_id":"themes/kiss/node_modules/find-up/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":1396798991000},{"_id":"themes/kiss/node_modules/find-up/readme.md","hash":"bea77ddbf765541e6bdc10eacabbe12548187cb8","modified":1453750929000},{"_id":"themes/kiss/node_modules/find-up/package.json","hash":"f7d5f9b81501d48943be221b2632557294806183","modified":1606920509181},{"_id":"themes/kiss/node_modules/graceful-fs/LICENSE","hash":"6560c016f1644ce652d83d039d8ba9e64795fd49","modified":499162500000},{"_id":"themes/kiss/node_modules/graceful-fs/clone.js","hash":"675f90846258fc892068a5ac038323dffec033d2","modified":499162500000},{"_id":"themes/kiss/node_modules/graceful-fs/README.md","hash":"649ce10ecea3a470be5c2d07ddeae45c7e7b3482","modified":499162500000},{"_id":"themes/kiss/node_modules/graceful-fs/package.json","hash":"3c934ab4415fa0f7184b4103b06402bc5a8331fb","modified":1606920508964},{"_id":"themes/kiss/node_modules/graceful-fs/legacy-streams.js","hash":"f4a3583d4c3e8b0c407ab8406bdafb02b4055b7f","modified":499162500000},{"_id":"themes/kiss/node_modules/graceful-fs/polyfills.js","hash":"fbeedeaa45e284fcc5a766cb3f70e0e62d3e246d","modified":499162500000},{"_id":"themes/kiss/node_modules/graceful-fs/graceful-fs.js","hash":"4af0b20e4c04efa829794b386390ef77717b8e0e","modified":499162500000},{"_id":"themes/kiss/node_modules/glob/common.js","hash":"05025adbb5e84ef5aed1bb7029d1ac7178bcf174","modified":1457241546000},{"_id":"themes/kiss/node_modules/glob/changelog.md","hash":"97bfa68176e50777c07a7ba58f98ff7a1730ac00","modified":1455171806000},{"_id":"themes/kiss/node_modules/glob/README.md","hash":"0085fbce10be11548134260e6ced6583a032f19a","modified":1455132571000},{"_id":"themes/kiss/node_modules/glob/LICENSE","hash":"bb408e929caeb1731945b2ba54bc337edb87cc66","modified":1406583065000},{"_id":"themes/kiss/node_modules/glob/package.json","hash":"f603d7570e683dc35d074ff4764fe9fc98c1e548","modified":1606920509142},{"_id":"themes/kiss/node_modules/glob/sync.js","hash":"9197b768cd7b245346fc3550f25353c1d259c312","modified":1466098010000},{"_id":"themes/kiss/node_modules/grunt/CHANGELOG","hash":"3bd8990c5aecc55cc2ebd3c400e23299693108ff","modified":499162500000},{"_id":"themes/kiss/node_modules/glob/glob.js","hash":"da833c319c9b5ce74e730d98db96ba83283ac183","modified":1472074751000},{"_id":"themes/kiss/node_modules/grunt/README.md","hash":"730b2a89cb3833268c37d1d4b6915236e783af39","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt/LICENSE","hash":"a62c851ed16f04a944fff1607ea6f2278d72192e","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt-contrib-clean/.jshintrc","hash":"4607a7a6282542b3e6f8c2e5c23e5aac4c4b17c0","modified":1373491608000},{"_id":"themes/kiss/node_modules/grunt/package.json","hash":"7c136e43fd65b48a4d3e33e0e1980f436be1d219","modified":1606920509144},{"_id":"themes/kiss/node_modules/grunt-contrib-clean/.npmignore","hash":"e3fe973725530c2c143d4f694d00e8da8c4a9020","modified":1373491608000},{"_id":"themes/kiss/node_modules/grunt-contrib-clean/.travis.yml","hash":"ea6496c27b706e607a310ffa0045dfa2cb84b9d3","modified":1373491608000},{"_id":"themes/kiss/node_modules/grunt-contrib-clean/CONTRIBUTING.md","hash":"3c9d11bd6c0a87cbd8dfab255ace8ba90d18d042","modified":1373946346000},{"_id":"themes/kiss/node_modules/grunt-contrib-clean/Gruntfile.js","hash":"3c43e06ce663894041434f5c1444c2777c786a7d","modified":1373945841000},{"_id":"themes/kiss/node_modules/grunt-contrib-clean/CHANGELOG","hash":"eead732d943ac402ae9f1631d6fccad6273ac300","modified":1373946341000},{"_id":"themes/kiss/node_modules/grunt-contrib-clean/AUTHORS","hash":"522c1045e170238d1cd108e5c502b5c3924b7305","modified":1373659716000},{"_id":"themes/kiss/node_modules/grunt-contrib-clean/README.md","hash":"f4589462183ccf0bb8c5103fe141436556b32902","modified":1373946346000},{"_id":"themes/kiss/node_modules/grunt-contrib-clean/LICENSE-MIT","hash":"8165bcd987a6b5b40e0354484293626894c470e6","modified":1373659716000},{"_id":"themes/kiss/node_modules/grunt-contrib-clean/package.json","hash":"d79c2a5e683ddd3487bf5d88dce47d33fc50923b","modified":1606920509142},{"_id":"themes/kiss/node_modules/grunt-contrib-copy/.jshintrc","hash":"1581b45e1162fee0738b9e6500cb6fa609c569d2","modified":1363299392000},{"_id":"themes/kiss/node_modules/grunt-contrib-copy/.npmignore","hash":"f375daee415ce9f338f742da9b0cfd727b99e7f6","modified":1363299392000},{"_id":"themes/kiss/node_modules/grunt-contrib-copy/.travis.yml","hash":"7632dc2d94109f51d334b9d2e8843c381510f56b","modified":1363328672000},{"_id":"themes/kiss/node_modules/grunt-contrib-copy/AUTHORS","hash":"a1e2f109a2a738b6e6cd65a9fb41454a59cc01df","modified":1364328401000},{"_id":"themes/kiss/node_modules/grunt-contrib-copy/CHANGELOG","hash":"51f6639ba8ec6e9b4a9c624388a0d0648304b20e","modified":1364328383000},{"_id":"themes/kiss/node_modules/grunt-contrib-copy/CONTRIBUTING.md","hash":"3c9d11bd6c0a87cbd8dfab255ace8ba90d18d042","modified":1364328469000},{"_id":"themes/kiss/node_modules/grunt-contrib-copy/Gruntfile.js","hash":"d1cd2a27d832b58b788a06baa8a6da5f5a38158e","modified":1364328263000},{"_id":"themes/kiss/node_modules/grunt-contrib-copy/LICENSE-MIT","hash":"dd60195a9ee58f7d255a13736ef0e6f276c76c3c","modified":1363299392000},{"_id":"themes/kiss/node_modules/grunt-contrib-copy/README.md","hash":"e51c82a4ecb53e0aa3e116123b2d346e84653450","modified":1364328241000},{"_id":"themes/kiss/node_modules/grunt-contrib-copy/package.json","hash":"a88e1ab591ffc669380fce5841c68e8b16ffc8fb","modified":1606920509142},{"_id":"themes/kiss/node_modules/grunt-git/.jscs.json","hash":"73428bec9ada2425c87d1822e9bfc113c4e77b7b","modified":1398687678000},{"_id":"themes/kiss/node_modules/grunt-git/.travis.yml","hash":"c331d27bf987dae046c753dccd09d4e467234217","modified":1401271749000},{"_id":"themes/kiss/node_modules/grunt-git/LICENSE","hash":"b27124bde571104832b276ef0b11453ee3e98c14","modified":1362663155000},{"_id":"themes/kiss/node_modules/grunt-git/README.md","hash":"01c435cb3cc13177b82678f9279ce60ed0a5a030","modified":1403525250000},{"_id":"themes/kiss/node_modules/grunt-git/package.json","hash":"f494b1d975d5fd47fcaf13ad711989c7181a2d8f","modified":1606920509142},{"_id":"themes/kiss/node_modules/grunt-known-options/LICENSE","hash":"eabfa3077e5ba5cfff0945c0270c01d54c1cae54","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt-known-options/index.js","hash":"cecaabe93087c37a10791e583f23024c73fc1b6b","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt-known-options/README.md","hash":"575883240e9f32de375aae4780230003f3bfa658","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt-legacy-log-utils/README.md","hash":"e6f863a36a497cb53ca90a2f197d7ad0c034c1b1","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt-known-options/package.json","hash":"7ae2040a0f73e4163753be01156e3059034ccef2","modified":1606920508964},{"_id":"themes/kiss/node_modules/grunt-legacy-log-utils/index.js","hash":"11823ccc55948cf03d41e87d46a154a3ddd97707","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt-legacy-log/.jshintrc","hash":"0587e11e5cb53577f178a5ec54e8291f7c8803b3","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt-legacy-log-utils/package.json","hash":"3565e21ffc0753249415855ee6b4f9b2850f4a0f","modified":1606920509144},{"_id":"themes/kiss/node_modules/grunt-legacy-log/.travis.yml","hash":"a9e51d5cc59a7cbc6dfbb8d450f924dafcb11664","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt-legacy-log/Gruntfile.js","hash":"5133165815b086f36f4bbf01f62483343c34d8eb","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt-legacy-log/README.md","hash":"e6c886b43ff8e41adb85a3ef87200bafde5b4a98","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt-legacy-log/CHANGELOG","hash":"bfe72caaa762c1e2d14fc5bf8cf025ea158a4cb3","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt-legacy-log/LICENSE-MIT","hash":"4476e33e470dae8141856c2daaa5f97f77c6d894","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt-legacy-log/appveyor.yml","hash":"8228ecbc387365b3a575af9df0c62e73b2f93855","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt-legacy-log/examples.js","hash":"d8ec800b2e3d99bf5ad84886445b056b667f89f7","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt-legacy-log/index.js","hash":"19bee0c5251f7a1e8ae9d41da8ab3d092c0ea616","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt-legacy-log/package.json","hash":"3c3185786448d7b32b058c3f5ab7907b19396b51","modified":1606920509144},{"_id":"themes/kiss/node_modules/grunt-legacy-util/.jshintrc","hash":"0587e11e5cb53577f178a5ec54e8291f7c8803b3","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt-legacy-util/CHANGELOG","hash":"19a3fd6f9131b67a670ececb83af7c34d276df3e","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt-legacy-util/.travis.yml","hash":"a00d758194ef0fd0854abe09180e639467099cda","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt-legacy-util/LICENSE-MIT","hash":"1757ae6f66234f429514faf74d6aab06841a9bbf","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt-legacy-util/Gruntfile.js","hash":"5133165815b086f36f4bbf01f62483343c34d8eb","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt-legacy-util/README.md","hash":"710f33de25086681f441af227f0fbd07c50d5dfa","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt-legacy-util/appveyor.yml","hash":"8a4595142462f2cc8c00c7615bc45ed1c41fe2b4","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt-legacy-util/index.js","hash":"9f74c7aefdc3bfd8f787ce02d81f706e1481150d","modified":499162500000},{"_id":"themes/kiss/node_modules/has-flag/index.js","hash":"73ee55646b931a37ef3b38fd6d22cd56332d6724","modified":1514920575000},{"_id":"themes/kiss/node_modules/has-flag/license","hash":"5aaf48196ddd4d007a3067aa7f30303ca8e4b29c","modified":1496344655000},{"_id":"themes/kiss/node_modules/grunt-legacy-util/package.json","hash":"28f87765d0c65a4d8240bedd7ba8a3ded04f5fcd","modified":1606920509143},{"_id":"themes/kiss/node_modules/has-flag/package.json","hash":"723d953283b3f95ad12e742413271d9d7d4bf613","modified":1606920508964},{"_id":"themes/kiss/node_modules/has-flag/readme.md","hash":"99207d2675befe9c32c412112fc038e9fe14d9cf","modified":1514920679000},{"_id":"themes/kiss/node_modules/hooker/README.md","hash":"e7ac8e4968f6912bde51540738154ef328e37561","modified":1327282452000},{"_id":"themes/kiss/node_modules/hooker/LICENSE-MIT","hash":"28153506c787aa9af20faa1139fb04244e9a9e69","modified":1327282452000},{"_id":"themes/kiss/node_modules/hooker/child.js","hash":"989bf3a67217c035ef911c334cb55f34f24f27b6","modified":1327432191000},{"_id":"themes/kiss/node_modules/hooker/grunt.js","hash":"6d8a487620c1bb798bfd07f18a0c5d9c50771c29","modified":1327282452000},{"_id":"themes/kiss/node_modules/hooker/parent.js","hash":"bad636f06dc7aad1dbcc63f0b2255390b6cae8e4","modified":1327432396000},{"_id":"themes/kiss/node_modules/hooker/package.json","hash":"163c4c942a0c24c52f46427cefd3a407d6e554bc","modified":1606920508965},{"_id":"themes/kiss/node_modules/hosted-git-info/LICENSE","hash":"f87fe9863dc6d7d54117b1670ce07a85715dc465","modified":499162500000},{"_id":"themes/kiss/node_modules/hosted-git-info/CHANGELOG.md","hash":"1f0b71363a49161655823b56a645e6b998e036ca","modified":499162500000},{"_id":"themes/kiss/node_modules/hosted-git-info/README.md","hash":"7aa51f200ad18be794e1988af2c608b816724968","modified":499162500000},{"_id":"themes/kiss/node_modules/hosted-git-info/git-host-info.js","hash":"dd9bdc7ee1c9cd2d300d4b90c51b548085c5e3ac","modified":499162500000},{"_id":"themes/kiss/node_modules/hosted-git-info/git-host.js","hash":"1e81232714cc00492d5bb5a49e621d6b1d754dd4","modified":499162500000},{"_id":"themes/kiss/node_modules/hosted-git-info/index.js","hash":"764fe08440a8a48251135802b8b454ddca9d5e50","modified":499162500000},{"_id":"themes/kiss/node_modules/hosted-git-info/package.json","hash":"1e95f904f0aeeb1bc51708be89dd839dbf5eee82","modified":1606920508965},{"_id":"themes/kiss/node_modules/inflight/LICENSE","hash":"515ec4469197395143dd4bfe9b1bc4e0d9b6b12a","modified":1399258628000},{"_id":"themes/kiss/node_modules/inflight/README.md","hash":"cabcd4da1794331188da1f8f864ea1aa0ca68657","modified":1399260771000},{"_id":"themes/kiss/node_modules/inflight/package.json","hash":"8c470f7576ef7e06d9bd546b055d56a9361b95f7","modified":1606920509143},{"_id":"themes/kiss/node_modules/inflight/inflight.js","hash":"84aed0b47c15de35a85a5aa6c641342ba4dd5a88","modified":1476330767000},{"_id":"themes/kiss/node_modules/iconv-lite/LICENSE","hash":"4f3ca49a793f6bb8465a3731fd965a128757b8ce","modified":1453159331000},{"_id":"themes/kiss/node_modules/iconv-lite/README.md","hash":"8069bc17bdd2fa876e304baeb37ba82a5046abc8","modified":1534968059000},{"_id":"themes/kiss/node_modules/iconv-lite/Changelog.md","hash":"dbb28cebb8ac5c1472d03df37f937ccac610bcc3","modified":1534968136000},{"_id":"themes/kiss/node_modules/iconv-lite/package.json","hash":"24d1e2425c29c8ce830ec7c349a8c0dd4963abdc","modified":1606920509145},{"_id":"themes/kiss/node_modules/indent-string/index.js","hash":"1a88e38403d5119488e8e3568efe1f7b5738f551","modified":1437352719000},{"_id":"themes/kiss/node_modules/indent-string/package.json","hash":"66c829fa864975abca759a5f125a99d4a47c6f01","modified":1606920509146},{"_id":"themes/kiss/node_modules/indent-string/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":1396798991000},{"_id":"themes/kiss/node_modules/indent-string/readme.md","hash":"5b78316edc5fffbe1c442407a96e2087d2c47db1","modified":1437851704000},{"_id":"themes/kiss/node_modules/inherits/README.md","hash":"f2f8d26f1cf5fb1e3a68aa225221b064f999fefb","modified":499162500000},{"_id":"themes/kiss/node_modules/inherits/inherits.js","hash":"222da288a07d8f65b2aed9b88815948cfe0b42d9","modified":499162500000},{"_id":"themes/kiss/node_modules/inherits/LICENSE","hash":"3b0e8d58a362b1787ef3504fba4f593b22f3cee4","modified":499162500000},{"_id":"themes/kiss/node_modules/inherits/package.json","hash":"9286edaf786798947d3e014a824fb8bfcf17d6dc","modified":1606920508964},{"_id":"themes/kiss/node_modules/inherits/inherits_browser.js","hash":"70fcf71f449139ecbf7a5d6c78ece069bbdf4dc3","modified":499162500000},{"_id":"themes/kiss/node_modules/is-arrayish/.editorconfig","hash":"1ab3c49e2db2133a92189f897310593ff089ecdf","modified":1440522010000},{"_id":"themes/kiss/node_modules/is-arrayish/.istanbul.yml","hash":"24082b12cb3200acec9ea0cb536ceebd5054da0d","modified":1440522010000},{"_id":"themes/kiss/node_modules/is-arrayish/.travis.yml","hash":"6f54a686b1b0f4531fbabc3409a86e150ea99f85","modified":1440625885000},{"_id":"themes/kiss/node_modules/is-arrayish/.npmignore","hash":"ed562b110b79d75f57d1731f08882d7020aac45a","modified":1440522010000},{"_id":"themes/kiss/node_modules/is-arrayish/LICENSE","hash":"92605120ca7f929c96354540307a059bafe2e78a","modified":1440522010000},{"_id":"themes/kiss/node_modules/is-arrayish/README.md","hash":"a3cd377afa76023f030cb6b0ac78e02240e3e476","modified":1440522104000},{"_id":"themes/kiss/node_modules/is-arrayish/index.js","hash":"6f9d636aff36876efe7d1cefbbdee98bfcc28c98","modified":1441062121000},{"_id":"themes/kiss/node_modules/is-utf8/LICENSE","hash":"c4d6d6cfd18041480abed5fef0e5e8b05a967b55","modified":1450496628000},{"_id":"themes/kiss/node_modules/is-arrayish/package.json","hash":"4f1c26cdd500116d33db4b440515c76913549558","modified":1606920508965},{"_id":"themes/kiss/node_modules/is-utf8/README.md","hash":"9d91db7e709bb926bcb715a51456512a6369a92b","modified":1450497590000},{"_id":"themes/kiss/node_modules/is-utf8/is-utf8.js","hash":"a2882b28b048e22eb16505e19206e6c1cbf34eec","modified":1347540258000},{"_id":"themes/kiss/node_modules/is-utf8/package.json","hash":"62cae86a19e7c34d6cc5fc95b585bf0c1a2ea4c0","modified":1606920508965},{"_id":"themes/kiss/node_modules/isexe/.npmignore","hash":"5c82cb364ccc42139031fc6519c138ef81f2df26","modified":1453008305000},{"_id":"themes/kiss/node_modules/isexe/LICENSE","hash":"bb408e929caeb1731945b2ba54bc337edb87cc66","modified":1454992766000},{"_id":"themes/kiss/node_modules/isexe/README.md","hash":"5245f0db9a9f95b37f4cac50e75dc66e2ea8e1a5","modified":1490230327000},{"_id":"themes/kiss/node_modules/isexe/index.js","hash":"9348ece80fd6208f0b8740d43cd652db4a5f06e6","modified":1490229856000},{"_id":"themes/kiss/node_modules/isexe/mode.js","hash":"5f33b53cc6b89f9ebe2ebd1dcfeb434cd96a3192","modified":1490230193000},{"_id":"themes/kiss/node_modules/isexe/package.json","hash":"8fa9edafe1c68d320d222a6a503663b46bf135fe","modified":1606920508965},{"_id":"themes/kiss/node_modules/is-finite/index.js","hash":"fd55fe3079504f4cdefb03d31382e336ac220156","modified":1432155356000},{"_id":"themes/kiss/node_modules/isexe/windows.js","hash":"1a6d0c635f67223d5e3890068f32f2da46e45151","modified":1490229931000},{"_id":"themes/kiss/node_modules/is-finite/package.json","hash":"e2061647a2b8665de9cd9aead678a3e07921ab3d","modified":1606920509182},{"_id":"themes/kiss/node_modules/is-finite/readme.md","hash":"afd959df4efb3f283d827110e0a1cbfc19fe97b3","modified":1475221368000},{"_id":"themes/kiss/node_modules/is-finite/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":1396798991000},{"_id":"themes/kiss/node_modules/js-yaml/CHANGELOG.md","hash":"f6570303bf27214ec9382ec7a40242d958fc50a8","modified":499162500000},{"_id":"themes/kiss/node_modules/js-yaml/LICENSE","hash":"cf1619aed46c3c608c54e1e4bdec5e7e38e436a7","modified":499162500000},{"_id":"themes/kiss/node_modules/js-yaml/README.md","hash":"bfbcd093ea1ab5edb9c608c7d81dcc2788073fff","modified":499162500000},{"_id":"themes/kiss/node_modules/js-yaml/index.js","hash":"1782c208617a1e4a087c61d82da6efd86d04cb82","modified":499162500000},{"_id":"themes/kiss/node_modules/load-json-file/index.js","hash":"1b4d637a3e58f11db9b07de7092b8c49869a49c2","modified":1441175798000},{"_id":"themes/kiss/node_modules/js-yaml/package.json","hash":"db8a9b7a15c676ed014acf072d42f85e028630fc","modified":1606920508976},{"_id":"themes/kiss/node_modules/load-json-file/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":1396798991000},{"_id":"themes/kiss/node_modules/load-json-file/package.json","hash":"9f754d1e0a341a68952a4f1e0cbea48766210e8c","modified":1606920509144},{"_id":"themes/kiss/node_modules/load-json-file/readme.md","hash":"c1c5d059deb4994007355f2daa2716c2fe20986b","modified":1446990383000},{"_id":"themes/kiss/node_modules/load-grunt-tasks/license","hash":"5aaf48196ddd4d007a3067aa7f30303ca8e4b29c","modified":499162500000},{"_id":"themes/kiss/node_modules/load-grunt-tasks/index.js","hash":"93a842bce236e4281bc46f4afbbd908f78e87f01","modified":499162500000},{"_id":"themes/kiss/node_modules/load-grunt-tasks/package.json","hash":"b3e47a6a859a7bee0d421a6475ca2ce00f44826d","modified":1606920509142},{"_id":"themes/kiss/node_modules/load-grunt-tasks/readme.md","hash":"ca2f2f7c24a62a66508ed24c002ce77edbf3b30b","modified":499162500000},{"_id":"themes/kiss/node_modules/locate-path/license","hash":"5aaf48196ddd4d007a3067aa7f30303ca8e4b29c","modified":1496344655000},{"_id":"themes/kiss/node_modules/locate-path/index.js","hash":"afd153e5a9d189cad0f13a7a43d0e69db907354f","modified":1529268895000},{"_id":"themes/kiss/node_modules/locate-path/package.json","hash":"5cf0bb8f58c5c5a30eb01f59bc6634cb781d26d5","modified":1606920509182},{"_id":"themes/kiss/node_modules/map-obj/index.js","hash":"fa95683437abe12eed3217e281bddf5f4938d72b","modified":1430589609000},{"_id":"themes/kiss/node_modules/map-obj/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":1396798991000},{"_id":"themes/kiss/node_modules/map-obj/readme.md","hash":"fc853dc94647dc7096b79ce4fe6954c647f1cacb","modified":1430589743000},{"_id":"themes/kiss/node_modules/locate-path/readme.md","hash":"da1803ff15d55383e7348fb9daa1c126c4b2c8db","modified":1529268943000},{"_id":"themes/kiss/node_modules/map-obj/package.json","hash":"c237e85818934729bedbc0f54d5bed93d6c318d5","modified":1606920508966},{"_id":"themes/kiss/node_modules/meow/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":1396798991000},{"_id":"themes/kiss/node_modules/meow/package.json","hash":"e17bb1dab0a7d9639539232af136c214b7f32c7c","modified":1606920509143},{"_id":"themes/kiss/node_modules/meow/index.js","hash":"11f3c3145f07d3c3a80a6e9daae80bfa5f8a4ee3","modified":1451916886000},{"_id":"themes/kiss/node_modules/meow/readme.md","hash":"834c1565a5d866afd4a6f54e8c0bbeceab89a768","modified":1451916666000},{"_id":"themes/kiss/node_modules/loud-rejection/index.js","hash":"9c1b92950b54b984039615fd4ffb2919bb1881dc","modified":1467583208000},{"_id":"themes/kiss/node_modules/loud-rejection/api.js","hash":"90ed1a0181577ec245b705fbc3648f46e9e327de","modified":1466073173000},{"_id":"themes/kiss/node_modules/loud-rejection/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":1441258257000},{"_id":"themes/kiss/node_modules/loud-rejection/readme.md","hash":"082bff7feffff24a952c773a5014ea17b943f6d0","modified":1467583208000},{"_id":"themes/kiss/node_modules/loud-rejection/package.json","hash":"6c83c4649fcefb43117c56d21b6c35aa0679d375","modified":1606920509144},{"_id":"themes/kiss/node_modules/minimatch/LICENSE","hash":"bb408e929caeb1731945b2ba54bc337edb87cc66","modified":1431999466000},{"_id":"themes/kiss/node_modules/loud-rejection/register.js","hash":"ca2873afd81188174d7ecd077b3a58267f25bde0","modified":1466101728000},{"_id":"themes/kiss/node_modules/minimatch/README.md","hash":"c5acb4041ec3730165d4d6ce835a6bd801c8ccec","modified":1456006221000},{"_id":"themes/kiss/node_modules/minimatch/package.json","hash":"16039a303ac5b41ca0cc6f10bf7cb4b1b5aacfb8","modified":1606920508966},{"_id":"themes/kiss/node_modules/minimatch/minimatch.js","hash":"c2ee9ea234b053f5177e703334036d505eaa0978","modified":1470774896000},{"_id":"themes/kiss/node_modules/minimist/.travis.yml","hash":"6f47845eac101b08d34b0cfb4cb6d0614b69b4b2","modified":1438902274000},{"_id":"themes/kiss/node_modules/minimist/index.js","hash":"cfede1ccd2ee41f74022c002b5c6d05e65c482c0","modified":1440424576000},{"_id":"themes/kiss/node_modules/minimist/LICENSE","hash":"b2e68ce937c1f851926f7e10280cc93221d4f53c","modified":1438902274000},{"_id":"themes/kiss/node_modules/mkdirp/.travis.yml","hash":"6f47845eac101b08d34b0cfb4cb6d0614b69b4b2","modified":1431568866000},{"_id":"themes/kiss/node_modules/minimist/package.json","hash":"ecb8c5e881da54938ffb25f642a77678f1bf35ba","modified":1606920508966},{"_id":"themes/kiss/node_modules/minimist/readme.markdown","hash":"067b8f01bd1fcf09a6418e3db4b323c8eb9ad479","modified":1438902274000},{"_id":"themes/kiss/node_modules/mkdirp/LICENSE","hash":"35d8442a9599f876c805b2c7d31178ecfa18c829","modified":1419626841000},{"_id":"themes/kiss/node_modules/mkdirp/index.js","hash":"e4aca996fb54ff20c3dad61f1fa7807fcb44409f","modified":1431570694000},{"_id":"themes/kiss/node_modules/mkdirp/package.json","hash":"a19dff52ef8386a82a48bc2cdae732bdd42c40f2","modified":1606920508976},{"_id":"themes/kiss/node_modules/mkdirp/readme.markdown","hash":"e4ffd1099773d1e612dc9ecea76dbb791ef355f5","modified":1419626841000},{"_id":"themes/kiss/node_modules/multimatch/index.d.ts","hash":"e9530eb5463f98145236ecf19cd6f463b15e0539","modified":499162500000},{"_id":"themes/kiss/node_modules/multimatch/index.js","hash":"7e9e45cddbe7f977e711084670f45b8b283641b8","modified":499162500000},{"_id":"themes/kiss/node_modules/multimatch/license","hash":"5aaf48196ddd4d007a3067aa7f30303ca8e4b29c","modified":499162500000},{"_id":"themes/kiss/node_modules/multimatch/package.json","hash":"726389f21f235cb03961cd635cb199c7dd1db6fc","modified":1606920508966},{"_id":"themes/kiss/node_modules/multimatch/readme.md","hash":"cfb3c6e06e5301cd45ec2cbc9af9d53fc8d52714","modified":499162500000},{"_id":"themes/kiss/node_modules/nopt/.npmignore","hash":"8b894ec0b3bbc33011392ad9bafeb1df2634db45","modified":1447359143000},{"_id":"themes/kiss/node_modules/nopt/.travis.yml","hash":"f21fc484fc60c2a9504f37882653857441767fdd","modified":1447359143000},{"_id":"themes/kiss/node_modules/nopt/LICENSE","hash":"bb408e929caeb1731945b2ba54bc337edb87cc66","modified":1447359143000},{"_id":"themes/kiss/node_modules/nopt/README.md","hash":"dd491d80a00af3ba8c01730825f011eaf91c001b","modified":1447363130000},{"_id":"themes/kiss/node_modules/nopt/package.json","hash":"2113edd5f0fc644ccf01fad6322ae743b1cd442a","modified":1606920508976},{"_id":"themes/kiss/node_modules/normalize-package-data/AUTHORS","hash":"fb19ef5c3cb99237b4f8803845fd870253c284f2","modified":499162500000},{"_id":"themes/kiss/node_modules/normalize-package-data/LICENSE","hash":"a511659fdc731fb48b4b0125340918f59b7c1bf1","modified":499162500000},{"_id":"themes/kiss/node_modules/normalize-package-data/package.json","hash":"374ff3f077b3777b5e3bf9aa53edf6f32a83e449","modified":1606920509143},{"_id":"themes/kiss/node_modules/normalize-package-data/README.md","hash":"c7929a6285c3333af7be4f8bff00046a6f55882b","modified":499162500000},{"_id":"themes/kiss/node_modules/number-is-nan/index.js","hash":"f46fa63ddeeaf817837ade36c96a37045c36b5bf","modified":1432154213000},{"_id":"themes/kiss/node_modules/number-is-nan/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":1396798991000},{"_id":"themes/kiss/node_modules/number-is-nan/package.json","hash":"00d8628f459c1eff0b68cd895a4d25cd7c95f588","modified":1606920508966},{"_id":"themes/kiss/node_modules/number-is-nan/readme.md","hash":"d579efeab4be85082383108869ebd212ba56ab5a","modified":1475212234000},{"_id":"themes/kiss/node_modules/once/LICENSE","hash":"bb408e929caeb1731945b2ba54bc337edb87cc66","modified":1430780985000},{"_id":"themes/kiss/node_modules/once/README.md","hash":"69b0a9165715c6cd0e8de37ddb4abad94de2b102","modified":1473196024000},{"_id":"themes/kiss/node_modules/once/once.js","hash":"f78c8cb8d754261b59d03e867f329c2ffdefae45","modified":1473195971000},{"_id":"themes/kiss/node_modules/once/package.json","hash":"73b81128724bd792e3f56c14de7ee118d4399770","modified":1606920509142},{"_id":"themes/kiss/node_modules/object-assign/index.js","hash":"519ffd5a4c91b67302cc9947b794966d629860cd","modified":1484580833000},{"_id":"themes/kiss/node_modules/object-assign/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":1477421624000},{"_id":"themes/kiss/node_modules/object-assign/package.json","hash":"e90417170fe2a79f15fbe4ecef939b30a2e0ebe4","modified":1606920509181},{"_id":"themes/kiss/node_modules/object-assign/readme.md","hash":"572b4503897c85bbef9ba7d01839242a507acf7b","modified":1478225968000},{"_id":"themes/kiss/node_modules/p-limit/index.js","hash":"6aeb2512b0b7c43757ad8efa6d13410d760a619a","modified":499162500000},{"_id":"themes/kiss/node_modules/p-limit/index.d.ts","hash":"7e0ce3eedda5f88998228e46c8bc0ddf43da7f3d","modified":499162500000},{"_id":"themes/kiss/node_modules/p-limit/license","hash":"5aaf48196ddd4d007a3067aa7f30303ca8e4b29c","modified":499162500000},{"_id":"themes/kiss/node_modules/p-limit/package.json","hash":"316ff6f9e48c6558271450706c4217b720fa2257","modified":1606920509181},{"_id":"themes/kiss/node_modules/p-limit/readme.md","hash":"78a97d75df83e1a27653910a037968f3dc7798da","modified":499162500000},{"_id":"themes/kiss/node_modules/p-locate/index.js","hash":"fb45398285a3e43f7adffaeda9b2cc87797db9f1","modified":1529066760000},{"_id":"themes/kiss/node_modules/p-locate/license","hash":"5aaf48196ddd4d007a3067aa7f30303ca8e4b29c","modified":1496344655000},{"_id":"themes/kiss/node_modules/p-locate/package.json","hash":"0b9415ae5acb984b7c5b4790b107b35bb529b88d","modified":1606920509182},{"_id":"themes/kiss/node_modules/p-try/index.d.ts","hash":"e013a3bed2a41d0def5c2c453cd9f7d697d631c3","modified":499162500000},{"_id":"themes/kiss/node_modules/p-locate/readme.md","hash":"4cdc33f37d84c5108edbd4461ffceebb90fd1b4d","modified":1529066650000},{"_id":"themes/kiss/node_modules/p-try/index.js","hash":"885a5f2ed7229ecacb44d35396cd886fcec4e22a","modified":499162500000},{"_id":"themes/kiss/node_modules/p-try/license","hash":"5aaf48196ddd4d007a3067aa7f30303ca8e4b29c","modified":499162500000},{"_id":"themes/kiss/node_modules/p-try/package.json","hash":"a4801c7b0b0ddca8246b30a49ba5715b087d93c1","modified":1606920509181},{"_id":"themes/kiss/node_modules/p-try/readme.md","hash":"b511cc4731d2fa796b3f86cc2542ae7a65aecda3","modified":499162500000},{"_id":"themes/kiss/node_modules/path-exists/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":1396798991000},{"_id":"themes/kiss/node_modules/path-exists/index.js","hash":"f7ee42ce332afb4364f3314f35a3220f486a1f0a","modified":1441090809000},{"_id":"themes/kiss/node_modules/path-exists/package.json","hash":"07876561e2cab787c157e94d7b305976f029857b","modified":1606920509181},{"_id":"themes/kiss/node_modules/path-exists/readme.md","hash":"188afff0b81831022bb33b705591f6a8db457037","modified":1441091083000},{"_id":"themes/kiss/node_modules/parse-json/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":1396798991000},{"_id":"themes/kiss/node_modules/parse-json/package.json","hash":"492d7f9761a6e9b67853157b93786e582545d0d1","modified":1606920509181},{"_id":"themes/kiss/node_modules/parse-json/index.js","hash":"db6c92c06bcd198f70bb1ef100bfdb35eeb5931e","modified":1441038086000},{"_id":"themes/kiss/node_modules/path-is-absolute/index.js","hash":"6de38a82f68960de2bd07fd9114541f02bee2f62","modified":1475210370000},{"_id":"themes/kiss/node_modules/parse-json/readme.md","hash":"de54a7bbb55d02431c53a8d56c38a566d70cec09","modified":1441038086000},{"_id":"themes/kiss/node_modules/path-is-absolute/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":1396798991000},{"_id":"themes/kiss/node_modules/path-is-absolute/package.json","hash":"7e710b3f895feb83fc4c7af754195d7561bf9e10","modified":1606920509183},{"_id":"themes/kiss/node_modules/path-is-absolute/readme.md","hash":"b09eee74fdfb9195b8b81401654da2a403886d2d","modified":1475210477000},{"_id":"themes/kiss/node_modules/path-parse/.travis.yml","hash":"a635c96e3cc08e3e0a5b9d4a2c03c704a18e3355","modified":1533536649000},{"_id":"themes/kiss/node_modules/path-parse/LICENSE","hash":"d6a4e8a4dbb09f42e320c4a02b955108c2def70d","modified":1533536649000},{"_id":"themes/kiss/node_modules/path-parse/README.md","hash":"25c4fbe8e919e1bc4ef40428c8502d49648c47d8","modified":1533536649000},{"_id":"themes/kiss/node_modules/path-parse/index.js","hash":"01c272071daf2325f132d99080bc29c75594b937","modified":1533536649000},{"_id":"themes/kiss/node_modules/path-parse/package.json","hash":"f3847fcbba56b3688c296c7973e4079e950a64ac","modified":1606920509182},{"_id":"themes/kiss/node_modules/path-parse/test.js","hash":"6099f0fcb9cf26371938b35069d0943154b5ac85","modified":1533536649000},{"_id":"themes/kiss/node_modules/path-type/index.js","hash":"a61f13374d2775c261b9701928c670451deb4126","modified":1441355632000},{"_id":"themes/kiss/node_modules/path-type/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":1396798991000},{"_id":"themes/kiss/node_modules/path-type/package.json","hash":"9393aae47f13df3436df8b864979a34b56cfb8ee","modified":1606920509181},{"_id":"themes/kiss/node_modules/path-type/readme.md","hash":"84fc8c2a8b81b94ac48caf806760417f00259120","modified":1441355228000},{"_id":"themes/kiss/node_modules/pify/index.js","hash":"6565dcfd1aebfb8d13eb74b2ee9d6536cd4bcda2","modified":1445864677000},{"_id":"themes/kiss/node_modules/pify/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":1396798991000},{"_id":"themes/kiss/node_modules/pify/package.json","hash":"b59e3fb418158e870ffa1a5219dd1f0a371479be","modified":1606920509181},{"_id":"themes/kiss/node_modules/pify/readme.md","hash":"0a3dc5be43c41633baff9964712cc816c857b03d","modified":1445864979000},{"_id":"themes/kiss/node_modules/pinkie/index.js","hash":"4ed6d8988b13d2c29cfa99c99cedb43fa6b51ee7","modified":1454324862000},{"_id":"themes/kiss/node_modules/pinkie/package.json","hash":"5f8e318fb648fc272867e97cbfee214073016d8c","modified":1606920509182},{"_id":"themes/kiss/node_modules/pinkie/license","hash":"91c700b5dac5967632cf497f1f3316352b1b45ce","modified":1454217969000},{"_id":"themes/kiss/node_modules/pinkie/readme.md","hash":"1673aa52b8f81f6ebf1c2e5ca0184a6f63522f78","modified":1454322504000},{"_id":"themes/kiss/node_modules/lodash/LICENSE","hash":"99f74d4ffae1d1b98bc104c8ff125dd7e7bce729","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/README.md","hash":"8d6bbbb26ebb4c46af54058805d59318a8256960","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_DataView.js","hash":"f5780de8f4171ced0e5f4c52aba30e58660070e4","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_Hash.js","hash":"572ffd33bbac9360f2d2591f7b44f72077d52297","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_LazyWrapper.js","hash":"9fc0cec80e680d4fe00cf4e33672e7f06d4b9b79","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_ListCache.js","hash":"6df951af4fe1c2e428720e3fea6f7be3e6c64edc","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_Map.js","hash":"d58862090ce31a3295cb1dae73e44dcdba9b70bc","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_LodashWrapper.js","hash":"d1b595bd38e7764539f2cf99d2374f5c5aa72d70","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_MapCache.js","hash":"afed02775f092be6e7328f19b6991a419baac9c7","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_Promise.js","hash":"7c7b81e303018a3045ca269b1be551224b607790","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_Set.js","hash":"d55df157d59851d181aae5086ac2b703f41e422d","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_SetCache.js","hash":"20a1a687b681a839dec78ee9b1c07e0fcee4cdda","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_Stack.js","hash":"581507149d88de85ca4bed49ea0c22467d4e65e6","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_apply.js","hash":"cf8c13531bb2ebaaa912ed42cd51d35749780b49","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_Uint8Array.js","hash":"9aca80cbc7c3b25813dbeb9561324d3d6ff7700a","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_Symbol.js","hash":"1d38c59f19e1b038981b4f0093d5b504d647c694","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_WeakMap.js","hash":"f384e74a27955f5ab92345281a5fcb7d95111b58","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_arrayAggregator.js","hash":"4c46ec909fd72aca86fbba95f8042b39875a2fc2","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_arrayEach.js","hash":"904f07de69303a57591f6f012ae390d37af3f595","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_arrayEachRight.js","hash":"d9c9880639a791b9b7a50fa4b9d95987a9adb530","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_arrayEvery.js","hash":"1c52b5548127fec0d8e876e6612bc7579b64c88b","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_arrayFilter.js","hash":"de05ba1636ccd6f97f5527aaaa7bcd355ef96a3b","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_arrayIncludes.js","hash":"c1211511564c2074c24cd0a45e2fc63b94017d42","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_arrayIncludesWith.js","hash":"ae055079baa36a646be539921afb899598b99ade","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_arrayLikeKeys.js","hash":"3e0338e1cbbfb9c9f1b00adf873e176478b985c2","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_arrayMap.js","hash":"50a635afd8bfba130f5ec9cc693c06eb0ed57690","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_arrayPush.js","hash":"8b9d6d4bcd8f6661ee23634aecda75d5395db2cc","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_arrayReduce.js","hash":"87b47db2e2ffbf2d671e1a974eec644d16424412","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_arrayReduceRight.js","hash":"59ee39e14d1be368c9de8d06b8a62ba7a57f9c18","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_arraySample.js","hash":"8b9ade97c8c183d58e1bcfbdcdf4b77b44c38245","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_arraySampleSize.js","hash":"cfe8e3d04b52e678f1475ed3df969bc5eedea859","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_arrayShuffle.js","hash":"7023c88e8b1fd408755327bf70fe8d58c9496607","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_arraySome.js","hash":"b3e385ef53a7d44b49f705315ae30efc4b81d5b9","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_asciiWords.js","hash":"164db22da4ac8a77d75ff57a1d63d0c4b9e48388","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_asciiSize.js","hash":"befe650097f784878651dd1881da7efb3c0d0e73","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_assignMergeValue.js","hash":"7fd48396b2393692858a13cd1d9fee4f9f56c034","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_assignValue.js","hash":"8889cd8e010ef1ab8259b9401f1ace23164a676a","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_assocIndexOf.js","hash":"b557d0550d466f2e0a20697d953061c8198bc3f2","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseAggregator.js","hash":"a0f27fd540785f2f3d54913950fcd555ca789b4f","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseAssign.js","hash":"b12b76d29619f0fadf5c75c2b1f4d9c5a140af4d","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseAssignIn.js","hash":"1e9e2424746865f1ea7c278592329917a2d2ddd8","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseAssignValue.js","hash":"c09bc3ff6aa7082144eef5b7583f795f7d16ac19","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseAt.js","hash":"93dcc3d90a67de6c407d3f6ccda164d3fac140b9","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseClamp.js","hash":"ce109abcb1e12c30e97c79917e51520aa544db9a","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseClone.js","hash":"69b00b4294919176a661d32d879bd07dab1b1bf3","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseConforms.js","hash":"f518eceb5bf9e6dc4c9cf811e07c3ff8469c902b","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseConformsTo.js","hash":"f2f1431ffc02fb8ab64d86abecdcfe2685d2eb4b","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseCreate.js","hash":"202aced68f2ce65d35a3d9e7ee56e373de463233","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseDelay.js","hash":"2a9133e727e4b0a6a9ec776addec9c791c812a4f","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseDifference.js","hash":"b3dc957d88a325a9c4e11645134bc92eb807dec8","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseEach.js","hash":"8df288083999c6711cdddc83d3f62ee092e0bd35","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseEachRight.js","hash":"f8f31ce8197c50e01ffe073be5e329bb95c5dd7f","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseFilter.js","hash":"aa90047b0a1231f770807422c67a36a4c3524365","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseEvery.js","hash":"6e445241a2ceb58e400c619247c7f1d5a9ad76da","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseExtremum.js","hash":"931adb7b69f0e4683324797c8522f4f6c9ad6321","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseFill.js","hash":"474427d0d470b473ac37456e9ba151a966b2ade7","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseFindIndex.js","hash":"a6811f11035fd20ebedd10b014566614f1fee155","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseFindKey.js","hash":"dc99c1f56a9a4559ae3fc9f3dbd7f8cfac677949","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_asciiToArray.js","hash":"4331bba9d396c601f9ac9e676283bc3ac25ccf8d","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseFlatten.js","hash":"045ce95760998450c806995fd49db7ce8fd96982","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseFor.js","hash":"6d4e2744c99f75df073ca2e005317feea00533f6","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseForOwn.js","hash":"8977ba022a8d144093f35c729822e6161d5fd291","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseForRight.js","hash":"2d3155596f8e8420da54564a69dadfadbd84cd67","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseForOwnRight.js","hash":"29a6ce1c8ff0893a7a5021a5b54d3303dc7e9ef5","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseFunctions.js","hash":"17d2e75a62a380223a943a07c0726c2d101c59ff","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseGet.js","hash":"2c7bfaa44754b5302e3bd2137d95b4e045bc4c85","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseGetAllKeys.js","hash":"f7c042fc3a0e1f89ee6f0ab2765615983796b303","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseGetTag.js","hash":"b66f083cb3c9fac408a18fa8e104a20e64355d45","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseHas.js","hash":"0643a432e7d64d10615b4cd7092f2483c317cda7","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseGt.js","hash":"7368ca132e9b25b5f2ae74cfc01d619f284e84d3","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseHasIn.js","hash":"e11103f369bb4fef0cbd193622c7126c70e0fc8c","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseIntersection.js","hash":"deed35c6297d406b8f5e0672a4cc99cbc95fd0b1","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseInRange.js","hash":"5186220a6519de4a9b0882ccbe565b74caea68cf","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseIndexOf.js","hash":"554c47e0383ef62d126d9d66aeb416e8e75ebf3b","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseIndexOfWith.js","hash":"bf10b85520bfc5add8a38c341e95a985e1ab3626","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseInverter.js","hash":"84de1267be8b3b1973a696826a66247ff88e7c25","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseIsArguments.js","hash":"6c428b2e543a752140ee6b1223a659f45025a71c","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseInvoke.js","hash":"b287bbe200beaf0e4825bc7bccb7ff702e0eff74","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseIsDate.js","hash":"c21fd699a4d3d38d28770746f33992778c3e2e94","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseIsArrayBuffer.js","hash":"f154818234664296ec6c8496be8cbe77c6909c8e","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseIsEqual.js","hash":"7f9ae050c867190bf8379e97f1fd9d01cc2c96f3","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseIsMatch.js","hash":"68d520389a8b2d00f0b649787df02734bc00ad9f","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseIsEqualDeep.js","hash":"becc7c47d3ad5aaf2a6e5df7038595f21ff92bb3","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseIsMap.js","hash":"b28a7248f4a44300ecc8080ad259944d4bb9a356","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseIsNaN.js","hash":"01512b16931316dc87e670d11c3b3d7c354366a9","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseIsNative.js","hash":"1f36b939f5e5b0dc5f28ba7c47206d717b966c7e","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseIsRegExp.js","hash":"663e2101fd6aa3086bddedb08f0d2e7bbc30c0f9","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseIsSet.js","hash":"52795ae38cc0426dca2468342cf28dc2f78775f2","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseKeys.js","hash":"29d99b03db5dad4affa41a388470c89595e44991","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseIteratee.js","hash":"032e8e56ae36205075f11cef6a7e91890a8425bd","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseIsTypedArray.js","hash":"291f63ba52ab97764a33305efd699a2e394b2517","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseKeysIn.js","hash":"eb88d9e4d4f429c250f3ee2f22312b885ce7a75d","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseMatches.js","hash":"bb2332567191ebdf1e2414efb7279d989fa223ed","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseLodash.js","hash":"dfebf25a399f77aa4b416e1a92ba11ca59c2a8e9","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseMap.js","hash":"e4d4a4031106e999c0f44a81dd62afc0f84f3fe0","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseLt.js","hash":"92e621a7798bec567f79b006e1608a434b18d22c","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseMatchesProperty.js","hash":"0a4a914477d3d5a170f0c5bc7c5b2abd106bbfbf","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseMean.js","hash":"0e536b0da31875ca4a97989a76d851b5589cc867","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseMergeDeep.js","hash":"b20f414c41bf4446a4723ad001247e14568a91b7","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseMerge.js","hash":"7351665a72f5448392a3dce645946fd1368c5c87","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseNth.js","hash":"7afabca34c7963943eab1dc70a433231283cc8c5","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_basePickBy.js","hash":"2749eb539f38c35b694e6b8f74d20f5cdc37ca15","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseOrderBy.js","hash":"c76b0438a27df64a71220d2e819d9baa79d9641f","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_basePick.js","hash":"1eb8ddfe3a55363b22404e9cfe3723a56c9715cf","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseProperty.js","hash":"31d8d961f7383f581a360947b0b752e95d35cd14","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_basePropertyOf.js","hash":"33b60f71f3cbf5f26607a2b7356070f8f6953223","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_basePullAll.js","hash":"a140d4775d1ee69b9d6d434d5729f82b7e55bc8e","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_basePropertyDeep.js","hash":"b9329f5af409f1578f2fb9fd34ccbdf8cbe54070","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseRandom.js","hash":"86fe0bbec2bf3b242a8d861abd894f9281c2408a","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_basePullAt.js","hash":"7b291db76db38fc2850529f7e519f5a273dd1f5b","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseRange.js","hash":"8816c954f5f5c9c100a51ae5be416a4661e418ed","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseReduce.js","hash":"96e87d251b7bbf30707b39b529243e5d3a7f5c2f","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseRepeat.js","hash":"e5acd9c33e9026b8848de16db87d9ee1dfe293db","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseRest.js","hash":"e31a38bffa598aef97317e7b1970a212a4d44d00","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseSampleSize.js","hash":"b05eb913d80f60e274e00632d5499319bd0204f2","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseSample.js","hash":"bf50189b8b304ff4bafec174b108a7fe25a6a003","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseSet.js","hash":"0d99172a2005d7c0dfa71114b0cb0aca9cafd47a","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseSetData.js","hash":"fa3ddde4d03be0d225fb7e96d1b5f86f0e321453","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseShuffle.js","hash":"62b58e90df1ca7ee5d44cd923fd531f1964f37a7","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseSetToString.js","hash":"4fa840e62be63264b265b19fff3dbad4540a376b","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseSlice.js","hash":"959756556fea236343ff752adb6b869bcac82e4b","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseSortBy.js","hash":"77483347d5381f336bed3174c5b301f40dfc7a24","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseSortedIndex.js","hash":"6a353c6feb19a86665f9ea37ae0ff7f5ff5a1d9b","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseSome.js","hash":"4be43bfa949a8292f8f780eeeb83bb5da00f58b7","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseSortedIndexBy.js","hash":"23b9368bcfe7afb35249a3a2bf880a170cc72ccb","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseTimes.js","hash":"7f3edc2bfd65d843b592ff123759c9d616ce3a64","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseSortedUniq.js","hash":"c2ad97df99636c7977b6374e44cb61dedd64aece","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseSum.js","hash":"e96a801668916a3027558a8795a4957e11c791f1","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseToNumber.js","hash":"1d6f1a52fdbddf557ef5d870c3ad6fecb7089af9","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseToPairs.js","hash":"d6ad1c204c16fee82d17a5b4febca922a78cda47","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseUniq.js","hash":"ae7942f5facf5430171081eb0d2ee341f69c9fd2","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseToString.js","hash":"f2a75bd83872d649b56a1c0fe7b785ee13ac3cf5","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseUnary.js","hash":"5dbba7edab4fb0d361906358fa2d49dc35c1e603","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseUnset.js","hash":"d9a16888d3995c743789eb2003d8d5c438f00ca5","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseValues.js","hash":"a8cfeda4f95c958cb46ac71f77a631e57617c1f7","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseUpdate.js","hash":"12682de8a3a7f8d6e89f4872bbc2bf1c2b66f8b0","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseWhile.js","hash":"4fb4c4f09282c0e560a1bb289caaac7d58d64a10","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseWrapperValue.js","hash":"1b1d0a42b03e95693fc88d6a24e4a3473d15392c","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseZipObject.js","hash":"7995093c8f43666bf1f2dc15cc1d752dacc55e35","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_baseXor.js","hash":"0077b838e654fac3f5ebcc99ab1dafbd158e4e71","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_cacheHas.js","hash":"d676b44402e7e4ff04011e54a086f7efe819ef81","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_castArrayLikeObject.js","hash":"0a049ad2b5e466bb2173738787645d6aa97b9e03","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_castFunction.js","hash":"af88042305fb1cc58dde3bca997c206dd0359bf7","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_charsEndIndex.js","hash":"4164a27a922efe0dfb1dc15496d199152fd96599","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_castPath.js","hash":"a7a03888171be1aa22a92d12b9a02b8c8798375c","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_castRest.js","hash":"82020a1342ba8656765ac9141410d1af2b7730f0","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_castSlice.js","hash":"9b963fc73a75bdb6cde5c38b2ab1fac07835a800","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_charsStartIndex.js","hash":"c4db2a95b12b0a442f73d3ad3d27c0048193b216","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_cloneArrayBuffer.js","hash":"ffbada38bb191bc5290fc3ae51f6c01c3f8f6d7f","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_cloneBuffer.js","hash":"f0b54438e44d83118f342434cabe99dc438d19c3","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_cloneDataView.js","hash":"c8e9d1cd47aab00655a7ad7d3103cdddf2fd92a6","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_cloneRegExp.js","hash":"d0318f8d44ff0e8720cf498982e3183e23579919","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_cloneTypedArray.js","hash":"b50a151594d841fdb56e8cf04619529fed4891f7","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_cloneSymbol.js","hash":"8b27dca2415595e97e38d9fa7fb3f854c4051048","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_compareAscending.js","hash":"456fc00f7549c8ea36a3d2f3b818b50bfcf016e6","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_compareMultiple.js","hash":"798b323506b11fa866904e39771daf98df260bca","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_composeArgsRight.js","hash":"b826dac099cb5bdc350361b3fb6df6a3c743b49d","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_composeArgs.js","hash":"18e0c7dbd15ff30fb10ccaa4ef651751eea88ff7","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_copySymbols.js","hash":"871986e31fddf247cd65b93aa92b69392b9bde8d","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_copyArray.js","hash":"cec6a29544aa38261f7cfc1bf123f3289d22c377","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_copyObject.js","hash":"3bfeeec32b43433683d931621a2bf53dbc3db3d0","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_copySymbolsIn.js","hash":"92a72efc51ad106ed6bc2e4dc03d0f23751523fd","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_coreJsData.js","hash":"15e60e7a6363ae6df943c85e4b9e1078457b06e6","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_countHolders.js","hash":"9ff8f78133806ffbcc60d281c0152897aa7640bf","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_createAssigner.js","hash":"0125f6e53a2b16619993e408f3511862079717e5","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_createAggregator.js","hash":"261d83069fe95d76ef0dcf16aecf4d21af132baf","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_createBaseEach.js","hash":"ade31f23b8e144e8588af940219fc4c8bda2ce53","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_createBaseFor.js","hash":"77c64903d26461aaff6bb22d3e2739a5ac9a5e0e","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_createCompounder.js","hash":"195c16455366a158b8b855547fafdc602f0be9e9","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_createCtor.js","hash":"12be272e2dcd00624119d859d78459c9dae1baa0","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_createBind.js","hash":"56e3d29a4d8774c9709ba42dd15e204a693a8a42","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_createCaseFirst.js","hash":"4eda4cc9710593950268262489e79a507679356f","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_createCurry.js","hash":"30c237eecdcbbf00b48be6b716264799e0f32c1e","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_createFlow.js","hash":"c9408be96649f6431781578ada26509a567005a8","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_createHybrid.js","hash":"15282c26201bfcfdc26829ced58fa9785f1db1fe","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_createFind.js","hash":"3eb3975cd88173810656e3ab17de9c210773a1f4","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_createInverter.js","hash":"3b149fffb0fb7fe82cf00dbd794973ddc33f33e4","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_createMathOperation.js","hash":"d02710cbdbf76e2b2001750b355238b9a0e951c9","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_createOver.js","hash":"ba8f63fcb4755dc9023793118e5f8180e86c4c64","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_createPadding.js","hash":"0597ae4997016438b3d7629560c03d260f2b51a0","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_createPartial.js","hash":"2dc87c9d5a3fa04f144a85d4d90cfd55a4e4b208","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_createRecurry.js","hash":"fa869537d2d2bb656d1a7876435dc4c79f57575e","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_createRange.js","hash":"1c65b8adbfe1a38fb5827f584a454bc8218050ac","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_createRound.js","hash":"f4640823857ab5cc4a35b87df0b475c215e8147a","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_createRelationalOperation.js","hash":"428d4535498e0c63f8a998bca3403d36ddbf8004","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_createSet.js","hash":"c213de450f86338c23b81de1c99f8136a7538ba3","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_createToPairs.js","hash":"b16382972bd68fefa26ec9672c3935cfc1af1b7c","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_customDefaultsAssignIn.js","hash":"3cfaa6d8045c1f0217366218ad4340b50de5ceef","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_createWrap.js","hash":"3cf0222feec115f3d4b71c1adbfe4aca7555ebe6","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_customOmitClone.js","hash":"2bf571311b6785fd53ae57ec710ed05ebad80ab7","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_customDefaultsMerge.js","hash":"9378ba434e10108ffac43ded9d6d28e32fac527e","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_deburrLetter.js","hash":"65de6e749f5e37659ce5798a558a9aa1b50bec5c","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_equalByTag.js","hash":"bd57ba1568c522e436bd1af7ec860bcb1e274b85","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_equalObjects.js","hash":"6e408bc1b739bd195adea727a0f9dfdfb778a214","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_defineProperty.js","hash":"308f9b9c0f8822351b71d5801be25a8326bc5584","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_equalArrays.js","hash":"dd3a74350ab4d89beb889ba94510b3e5723b6209","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_escapeHtmlChar.js","hash":"d1da9dd2828cdd0071b82ffea56eab694bafbe37","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_flatRest.js","hash":"1a96086a9a21bff7890036498a1e161fe7955194","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_escapeStringChar.js","hash":"d011ca793a93e44d7e6928cced2055ea47f6c39e","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_getAllKeys.js","hash":"9fcb354c326cd308df841e6846d506165842f9a3","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_freeGlobal.js","hash":"df0709e144040efc52114c69b7977ab04f3a799d","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_getAllKeysIn.js","hash":"4c08d556179109df462c2ffdecef2d6486315062","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_getData.js","hash":"2fea3c244fa4625b978cea63124835c16aefe660","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_getFuncName.js","hash":"dd42afbc814c94e5bdd2fbef652efb7801403f6e","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_getHolder.js","hash":"86951aac23219e1a51267bf5fd7a38da110c877b","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_getMapData.js","hash":"f8986a4db2b55203a3237e5472a4620816306331","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_getMatchData.js","hash":"221908980050132b19c79c53c1b7d78ef5b93d59","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_getNative.js","hash":"a3c1a7f525a79c6216c2bd72810ccb1d8afefd9a","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_getSymbols.js","hash":"1c87ed98ef573b41c8a015c15857a0991603eaa6","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_getPrototype.js","hash":"150397078aa95ac1ace14e9547b7c28eba508353","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_getSymbolsIn.js","hash":"0bae489598ad76c4f2faaf33bcc1b3bf34e4772b","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_getRawTag.js","hash":"08573f8b464cf110d0873d475890f499a9620d80","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_getWrapDetails.js","hash":"ab6c90ec5be32187a6cfe2c9e798e7d298263dd4","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_getTag.js","hash":"e74c13874eca982f0fd30b1e35dd05e0664c6af3","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_getView.js","hash":"3a642a1adfccdac302261e31fadd3918e623d6f6","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_getValue.js","hash":"aaeaa4d7600367187650a1ef2d6949e2f788cf76","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_hasUnicodeWord.js","hash":"96f0a2876411b1fba3916ad58533f2dbc6970256","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_hasPath.js","hash":"f300ab1b5c17494a458e38d10eb815f5c1c95b76","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_hasUnicode.js","hash":"2ead86c95243b0dac220736e198e0a14e68c2982","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_hashClear.js","hash":"7a6f43944d3ff13552dcbe9ceb972ae5a83e8b1b","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_hashGet.js","hash":"5645b9091466891d4c892c6b3bd220ebbd3a3d00","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_hashDelete.js","hash":"5b552f18bab9b54a3192e193d44188e1656556d8","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_hashHas.js","hash":"aec7a8cd442a620d0073260ab7dc03960f6c85c5","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_hashSet.js","hash":"13d89d46c86111ca9941d0c35c29a84b2fb97a87","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_initCloneArray.js","hash":"7385f50c6d9fd89db402b725dfcd5b0d6b314c55","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_initCloneByTag.js","hash":"a38217b57e875466ed7d07578884c51a4e318560","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_initCloneObject.js","hash":"f2ee8035eaa7751ff081de5681c6603da177f8f6","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_insertWrapDetails.js","hash":"07c0c750900d12cf01ff9d99e429c6be76790f4b","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_isIndex.js","hash":"f08242d01da4236214f75e0221fe25c270f46dbf","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_isFlattenable.js","hash":"f2cfab82055d2ca693f33a874c57d8250467fc04","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_isIterateeCall.js","hash":"8116de0f8e735fb8c0a9d263a369be4b74f5f09c","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_isKey.js","hash":"e68a3f3cc1d7942c51ce0e8d927c0eb1896bc46e","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_isKeyable.js","hash":"89389f3a2f157c03608bcce01baf751018f25fa8","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_isLaziable.js","hash":"857a630edb35c21d76e6e2fd6daed3f3b51ea6a9","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_isMaskable.js","hash":"54963a24b696b2c57b2e8d2a873ed7db9abe6b11","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_isMasked.js","hash":"c001b1b4f9d3f7ece2e7263350f081da707804a5","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_isPrototype.js","hash":"6ebbd7e2661dbf8b6e35f36d680b7117fcc6b2c0","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_isStrictComparable.js","hash":"1db231f38b860e0a94e052c232829f8e8d31eb74","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_iteratorToArray.js","hash":"0512af6634544643fd2dacfb328aa8fca1770d72","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_lazyClone.js","hash":"528f2c4e0ddaadd246d07757608fafc02842508b","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_lazyReverse.js","hash":"a16d79ce7d467ebd00332162dafae250f726fe17","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_lazyValue.js","hash":"8e87e755c6f452304a814a29998fe145065aac74","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_listCacheDelete.js","hash":"1421610bad35fbee226a1a6bf8e7edb8958a4d6e","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_listCacheClear.js","hash":"cab24e3a5aa064726b71f761bac42e765a21517b","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_listCacheGet.js","hash":"266ac036effbb03c4a20397401900068f25ee510","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_listCacheHas.js","hash":"2070fe4515274fd0445b01ccbdad8acbc6b7c9a3","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_listCacheSet.js","hash":"cf902d42ba5e57849d08b0c03d2003c56bbc0dde","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_mapCacheClear.js","hash":"0eff5c92ebddbff48603ec60a32720c48fcdfd2a","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_mapCacheDelete.js","hash":"830ab65244dcd7c5a00fec9be355e9f713e6ea3f","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_mapCacheGet.js","hash":"2f580dedb6aa86e87c9931a6bb2275df8fe8608a","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_mapCacheHas.js","hash":"a0104808ea49ff57061f2b4a6ec4ef5f28e20601","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_mapCacheSet.js","hash":"745d2c8aab1a63cd28192eea4ac7bd86d5050b02","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_mapToArray.js","hash":"ba760ad87c596f8a038240cdb8eb21c8f441a288","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_matchesStrictComparable.js","hash":"886455dc09cdf350cadc57a4bb14cf8d700db358","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_memoizeCapped.js","hash":"6e577b3ba7b897f8a8e6277cee2a9c0d296608d9","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_mergeData.js","hash":"88ffb153b2cf2792dd67b70ef0f7ba1715c991fa","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_metaMap.js","hash":"6fe08e4a7c81c515eb34e464db1fe31d20bc8ff6","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_nativeCreate.js","hash":"d77d487728a34b77fe91c07ed4a2ca41a7265b43","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_nativeKeys.js","hash":"9cddc8c7f8efeffa319763be371897c861027d65","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_nativeKeysIn.js","hash":"d11eee972281d8eb8c93724d6a9088faf33e9679","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_nodeUtil.js","hash":"23c321c5b794557e944b47a10ccac8eb6a132f0c","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_objectToString.js","hash":"c489ccc8b47254177546b747476ca6b4a339437c","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_overArg.js","hash":"1fd1876980219dfd22c7ad86a49994f6ad1ffb0d","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_overRest.js","hash":"7020d98e117801d3a38b53367295588fe9574282","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_parent.js","hash":"a509f65490a88db6e1469ba7d8eacf86f11e7578","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_reEscape.js","hash":"1956c226d87ffb9bfb9d0b443e5e7c6665e222a9","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_reEvaluate.js","hash":"01062fe9dad608255c7e341c6d3e145c9ae6912b","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_reInterpolate.js","hash":"1f30c7932ca224ade79f3b50991da604fdc93c0f","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_realNames.js","hash":"1d70870e01638a3ba3e742bf871a5618ba866480","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_reorder.js","hash":"f9ebaaf8bddda0f54270363ed88d8eeb4b0acf95","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_replaceHolders.js","hash":"c24095b10ee93a2b1c4eabe187a37eb54a74b47c","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_root.js","hash":"da38a7e1c62b9dec425d3354b1ae5b2f1473ed41","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_safeGet.js","hash":"638d92d4782a94e948a266bcc257a824cb2182ba","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_setCacheAdd.js","hash":"3e8d192f136058af7953acb255f3452e25f9dbd5","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_setCacheHas.js","hash":"6b635d8cd68ddaf51b359bd7e89532dbbd5d259d","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_setData.js","hash":"27ba08bcf3045df1eb5bc20514f6532d51049445","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_setToArray.js","hash":"8aa29aac79d989a3642638ba90120860d6e7cfd0","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_setToPairs.js","hash":"8f144b728d7afc8059364769d27708f6f30f1bc9","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_setToString.js","hash":"525d4e7a92d2f5de834b7199c926bf05e5863e02","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_setWrapToString.js","hash":"e1129dc30bd9fe222dc11cf9d319f2d16cf02f82","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_shortOut.js","hash":"2b821fd23499f0583817e801c9ec1aa7fabac0b5","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_shuffleSelf.js","hash":"d384018a208bad370c0fa749fe1a7abdcf7d1550","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_stackClear.js","hash":"f10a4d85636bf0a0495cb7222575c139c2963466","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_stackDelete.js","hash":"0035fcf868dd14e85188c010466ead0b44caddc4","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_stackGet.js","hash":"edd10aa8b1688c112def671585164abd168f7dc7","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_stackHas.js","hash":"2c66efa2be2222610dae4edfe711b8b0d9a55a60","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_stackSet.js","hash":"54d1b0f6e92c9327efb7142d082bea43f49521a4","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_strictIndexOf.js","hash":"4d373aae516f6097b486413f2e0815c73aa37bdb","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_strictLastIndexOf.js","hash":"541978faa200571da921f5cee0c141cca0436237","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_stringSize.js","hash":"2c19f863e40752a52b8d3347e8b05c8afb61a4d6","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_stringToArray.js","hash":"051613c1b18c5156a676b197586fb0e2c1acd0ec","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_stringToPath.js","hash":"90f48337b274bc8475116e992fa8cad995a4029e","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_toKey.js","hash":"e24143e8602a9acd35301e6462b03c6ef0d94bc9","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_toSource.js","hash":"12282cc7f18c3c7446129f547741c3998b6caf18","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_unescapeHtmlChar.js","hash":"345300e6aa36d8b10133adfc3672efc630f77822","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_unicodeSize.js","hash":"4ef1b8b07c56ba22c273f20ce1f43c99d9e646af","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_unicodeToArray.js","hash":"a9378af7302c381a5f82467c32de3111ca597877","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_unicodeWords.js","hash":"70d7dad3b79c471cce28fb00f4d9491c6d14de30","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_updateWrapDetails.js","hash":"2ef2e983cdda0be8c850d7e59d570862ce6b64d7","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/_wrapperClone.js","hash":"c54b050119a2a1ad75146508a03ed4a78ab9b5fb","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/add.js","hash":"69ccfa17792261411f27bd7166a6760e3e6e653d","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/after.js","hash":"4d65d6ae8537ba01400d74e3540b52b463dc86eb","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/array.js","hash":"ac9338e3493fec2bb6d7a1dcef45ef9819b20649","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/ary.js","hash":"6db228f04677c2724e6b8438681c4c0fff0c998c","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/assignIn.js","hash":"166da8ae436b3ede129a5842457d68d6fdc9616a","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/assign.js","hash":"c80789cd7fd35c7190290526e466eed28caafa80","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/assignInWith.js","hash":"7e951bb44bd108e1024ea5c691d9bf9449c112fc","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/assignWith.js","hash":"98f683f41fd043bead258cfc6e61bd6765eea779","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/at.js","hash":"cf037c2d8d960fa96854f59381675ee196cf4069","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/before.js","hash":"bc0b86f3e03b7056b39193a03c5d39ee4fef4023","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/attempt.js","hash":"6b981c1f3ff53c572ebd08babf8799c8f118f6f6","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/bind.js","hash":"6b960133235c585a9b461e19df07cdd6edff118c","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/bindAll.js","hash":"cfd017286d7a7497547755272e1a55d39dc4beef","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/bindKey.js","hash":"b54c9311a7c9550ffceda021af5c995eee09f693","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/camelCase.js","hash":"1db1aa1a3c7a3a703a33c660526ef141c0bd3b94","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/ceil.js","hash":"13eff7a830076aeea2ffabd36b8d0d3254849953","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/capitalize.js","hash":"cf956ec612dfed45fdab26ab30cac6f46d738119","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/chain.js","hash":"e51b12d085b20c8676bf3297d9d0a8acb3871e4f","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/chunk.js","hash":"8e0f7e51303031640b539758ed6fa3e48e761783","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/clamp.js","hash":"0c356936d91c87fe7938faa3e1bb61b8334e7f0b","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/castArray.js","hash":"8dd901032216d00cf43986adaf961ad7422a64bd","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/clone.js","hash":"1268809f4924a5640d425e56eb4cb71df51ccb72","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/cloneDeep.js","hash":"fcbe65493c8f2c4fb574dbdafaab5ec22ad3ac42","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/cloneDeepWith.js","hash":"2be99cb83b8e6ac3f488963b433a8dd1829d3599","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/cloneWith.js","hash":"e9108f222791a26a83106488509053910d8460b5","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/collection.js","hash":"235db0c51d2fbba77c1c0ab2f25617e3c02d9e5d","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/commit.js","hash":"f2962f416c4427b7d5fd2fe8f752c41a8e6ee53f","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/concat.js","hash":"16777de6eeb0cb2828722e48c32e900256c21bd0","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/compact.js","hash":"f747cf703e5627de69652da7ef01299274cf48e7","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/cond.js","hash":"3df6aa9c3966438f382511f0b5ab7647ef5da87c","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/conforms.js","hash":"e226b49b5c96a85b5a1796b7a708c3e3fdd9fd9c","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/conformsTo.js","hash":"db8ff09750867c73d76ad1275a5cd8c2bc93b873","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/constant.js","hash":"0227ab051a5a8ca5e0fc7934bcea54ec25f90292","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/countBy.js","hash":"048867f03021430a606b699403133e2e234777a4","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/core.min.js","hash":"83f066b03527ae4b73fc3ec77e118c055b5349ae","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/create.js","hash":"41e8f34b4e9429b4b7ab26264bc570214164a5b4","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/curry.js","hash":"cd66258e0cf4fc625293d358d15a7bda051bfa67","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/curryRight.js","hash":"61586b4ac19da0224a3262027f2d280f25bd70e2","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/deburr.js","hash":"460705fd44df7613129dc58981966abcc45f9488","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/date.js","hash":"6466f5749384af915c2b6a449e74e14e320f4e11","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/defaults.js","hash":"1f12f29efd3d103440d5c2cf8895119205ec67eb","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/defaultsDeep.js","hash":"bf8d24913d8a34b40f1190a2d4fd01cadde49263","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/debounce.js","hash":"8c53b1737148a94705d5ff80e476916d2649d9cd","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/defaultTo.js","hash":"07e0f352f98a791be53a0a6eb43dedd756acbfbf","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/defer.js","hash":"471017a76ca3f3f71a111ccf7b487f89a50327db","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/delay.js","hash":"d7b8c52b90e17f9e42413ac7ea16d39a8e96bd4d","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/differenceBy.js","hash":"ff88a7541ee0b628ea3bbd923077facde3dbab36","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/difference.js","hash":"7a2a5465430dd730ff198a6ffcd5a3de8660c7b3","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/differenceWith.js","hash":"0f2a92e973c183bdcff6395d840f683f318c3424","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/divide.js","hash":"b21dc4cea11b1da27812a545fa75aa0d6b9a834c","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/dropRight.js","hash":"e77c7613539baf9a222fcc57142d5a808263688e","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/dropRightWhile.js","hash":"f9ccd85e2dc3364b0fdfbc824632e9f792b5a11d","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/dropWhile.js","hash":"f710aa52d7e2a9b128e647ec58b24e3c37660790","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/drop.js","hash":"6e25554b3f395b8e55d6b291451e7cac2149c7af","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/each.js","hash":"dbfc772ff0330e9d0bb2ee704242e67b0435929a","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/eachRight.js","hash":"c7a90b0a7bec56aea41c7569a652ebf17c20fde1","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/endsWith.js","hash":"0d8fd73985ee8c845b0c851704c8700f1055863d","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/entriesIn.js","hash":"995c6287a9c5f6641931c966de331b5521f63d3e","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/entries.js","hash":"8788b9edcf643acf20e434e5894d09fb18742112","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/eq.js","hash":"bc3769b5b5cb8262834ac0a28cc4cbe71257ce94","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/escape.js","hash":"60bec78e2fd63cbd52dc8f4f5f5b242bfc9449a5","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/every.js","hash":"6da415b41c0bae9c96fd40df253df2de7d965f4c","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/extend.js","hash":"79bb5928a674d6122686fc0df5a28f00b22d4d0e","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/escapeRegExp.js","hash":"91892447637ec6b53595e90a9817241b536f5fbe","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/extendWith.js","hash":"fe394cac415eb0a6518371d1b95e08144a682526","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/filter.js","hash":"5e630c86a2bd2a83a887241037b6d714401502d8","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fill.js","hash":"bb9b5af63b9b43626fc4db976072b045976ea77a","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/find.js","hash":"bb6c19af408438f6a0e19998a230880354afd814","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/findIndex.js","hash":"2fc5db1562e58221e0aafbbd317240704eb29985","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/findKey.js","hash":"eecde37bba06739228e5f93eac97aeaab4a91d4f","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/findLast.js","hash":"1f3be6d3e3eb97733c9a648872b4b3366d590257","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/findLastKey.js","hash":"9ba6afda847da380659ae98f0cb575566a0dc85c","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/first.js","hash":"a2eac20812e95b557a5bc11dab060163fe1133d0","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/findLastIndex.js","hash":"05743b963c7370d830ce76ddc5da4d85ba687935","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/flatMapDeep.js","hash":"76d3ae49d148850472922956935d294957f6f04f","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/flatMapDepth.js","hash":"fb4c4fc58c11b646dfdac83443e7495829da8f45","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/flatMap.js","hash":"78f9ce2566f143366b0998ef02dd8dc89e004133","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/flatten.js","hash":"72364918453483de6a71137a9a8003973c141fad","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/flattenDeep.js","hash":"422f037a6379f0db6258b9337261c1a9cc719faa","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/flip.js","hash":"67207c1ba95e6881968ff8fd5542f29e259aa3d7","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/flattenDepth.js","hash":"537a4e7196561ecae367985622872417cb19eabf","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/flow.js","hash":"7d9e4b712b68551d5b932bd4ed88d15b4aa1722f","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/flowRight.js","hash":"3e028361a9b090f8e4166d89fba374d65d52711f","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/floor.js","hash":"dcc9365721002de964aa2439793b7a10419d3dad","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/forEach.js","hash":"0f3074268fefe6db115334ca5dd1b89eb56a8a3d","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/forInRight.js","hash":"6a060f1b26a6be2a99c48eb56d104c4684b9bb30","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/forEachRight.js","hash":"654c60d4bb9737aa9fa3a7ac55e889f3dc2b50e3","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/forOwn.js","hash":"3e351a24c7fdf0593c116f361f59739cfb447950","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/forIn.js","hash":"61f83e8b63f97c099842046983acd61ac1b31ff2","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fromPairs.js","hash":"9a5f37cb42d2839c2637ca1792fcc1cd4333c56d","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/function.js","hash":"23850ac10d90d3b9eee8723beaa3af727330323e","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/forOwnRight.js","hash":"91e99b73af52bd6155bef7a259aa2e763aa4b885","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp.js","hash":"15a13940a645e776e00a229a7bec48f6af716505","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/functions.js","hash":"0ef50ad30d371a2b7ecf4363fd7862b5417130af","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/groupBy.js","hash":"18d1063f6af8b9cb6901c5ad3257db49027ab77b","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/get.js","hash":"fd2860fd39bfc6e8c44bae101e133effe6373734","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/functionsIn.js","hash":"29e78c6d69d36b48c62e4374c6cd1c02da73da40","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/has.js","hash":"c3c35131b701a60eb1f6bf9e530c78d123268cf9","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/gte.js","hash":"ec5d91c1d30601111dd6a41af35d55c2c27498ce","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/gt.js","hash":"8446ef3704d57dd44214e6513a6889f4d9db658a","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/hasIn.js","hash":"8a4bf01f81a8d508b322441659f9c74f38998c3b","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/identity.js","hash":"af8a8f8af76663a408cf9f29e5723d05f79eb236","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/head.js","hash":"374b879fa821ee60e31efa35f0b847ac5ba770af","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/includes.js","hash":"b5d81439dbbb9b6558c9148e37bf5db918a42d1e","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/inRange.js","hash":"38cdcc3285d54fcce6a7b362642c8c93305782f4","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/index.js","hash":"14d8b25e9e35c7f1b551d732fb814c982fc5301e","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/indexOf.js","hash":"eec5a54dc7285759af46028f7a7c1ec3479993f4","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/intersection.js","hash":"b51e7675e09c00ab99a632cdf1fac769f1a874ff","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/initial.js","hash":"c366df8c3c272bbc5fded392830b438d30d8c4a0","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/intersectionBy.js","hash":"969e82efd3befe0749085336f9568eb81f55d7b5","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/intersectionWith.js","hash":"1e1c0b6cf9c37aa60ea316a1540245bbff6f7a8a","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/invertBy.js","hash":"1d85aa7dd69490d38441a0206246460fd4c0f95d","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/invoke.js","hash":"5bdfcbcf073fddbf4f00903e4a8db0f1b868c8e8","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/invert.js","hash":"c9547b3840dfef6cb81c6507f35a5109798f1a7c","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/isArray.js","hash":"c6d5635dc764c9acf7395abde2230c43121641a0","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/isArguments.js","hash":"b9214a907e11a8e2321e6adf907ecde99b9920d8","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/isArrayBuffer.js","hash":"b682ff167ce2b34539afe73df93f2abe81b8aac5","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/isArrayLike.js","hash":"88d7cd3fc8a6075777cef6c16e1cc4931734159a","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/invokeMap.js","hash":"bfbac7243fe9a57276626d7090d473d9a3b2d796","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/isArrayLikeObject.js","hash":"300effec49e91a13bfaf9b6a9dda4ea2c4d45d92","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/isEmpty.js","hash":"935d1e74c2b8a3deb928af20d4440894368ccacb","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/isBoolean.js","hash":"ace779f61262f820f5f4ed39695bddaa7ebd08a3","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/isDate.js","hash":"3a7813e7ff48c9ac6ce3bbbc8584b1ce22c4ea1c","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/isBuffer.js","hash":"246d03a17c274bdcf3acb909f2337c695c9aea45","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/isElement.js","hash":"652c3967fe6b11419aaa8652a8d8d6e35f15a76e","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/isError.js","hash":"b184db78799044db3af29c3f6224d8e2213c9985","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/isEqual.js","hash":"370af44d612ddc96cdc52779fcc844fdf4ae00ae","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/isEqualWith.js","hash":"3e9d8f6214fbb2f859254ea9c4b8f9da58ac15a0","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/isFinite.js","hash":"388faf4e73347a1c0d77c98a3ac92be8902c5f36","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/isLength.js","hash":"45606d651b8071d8ef73beb03d31d6073ade0df4","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/isFunction.js","hash":"6cb0b30f9e48fc93016a3f34d124224af7901908","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/isInteger.js","hash":"ac93647df1dbe92f6358a992b1d5e7039cf85514","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/isMatch.js","hash":"29b9682a150068960adbf9ffa6b1da7f2a45477b","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/isNative.js","hash":"58dd206b6a97ede6c6c786ae029a36739c5efe7d","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/isMap.js","hash":"d19970b50ffa3f5e8345e84c635dc7b553bca992","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/isNaN.js","hash":"711cb119497d074148b07dda40eef0fa7519de8d","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/isMatchWith.js","hash":"60bf9f292afffa501f83381428457dc7567ee4cf","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/isNull.js","hash":"bd68451baaba662307893e3216b99ed20cf8a0d2","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/isNil.js","hash":"5780b6ca6e7dee6c2599a9ac77eb302812a373ca","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/isObject.js","hash":"38f00e3e4772d23d56550ef75959d10f92448e3f","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/isNumber.js","hash":"75152f3218ff6f88b1ad22a258b16c85ebbf9408","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/isSafeInteger.js","hash":"18473b31325225abe68ccaa69aa84635ab02b651","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/isPlainObject.js","hash":"104adb7c6dc9854cb91ac5995b17969c44614262","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/isRegExp.js","hash":"af11b03682761c1292525e290f0312da974c02c9","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/isObjectLike.js","hash":"7213913d764526ff2189c115d354bb940470bfde","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/isSet.js","hash":"8753a0c0f5a73feb22942035f87351120db0f402","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/isTypedArray.js","hash":"d92eaa92fa13419d2df184ff11f270c266590f66","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/isString.js","hash":"7eb7706298dea12e813be37db6cdc8ea92177630","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/isSymbol.js","hash":"aaa0f4e5003e5d33ed7d67b8a274a9a14c3cd64f","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/isWeakMap.js","hash":"d88fd7f6dab0bc1a14c8b7b9f5adabf3d5430ef6","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/isUndefined.js","hash":"4e087abc1b0997f71bbf33e2065b40d438511e2e","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/iteratee.js","hash":"5e22aa3f442a49c5061a7328b39c7ef197b9a249","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/isWeakSet.js","hash":"2582214ba7a25b23bebf2ef4ad8a799248a5e5f8","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/join.js","hash":"236f8abe4dfa446351d07525089fabee2e2d3f0b","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/keys.js","hash":"84fe8dcc57c7b368d5fbd3ccf0c194cde0c78515","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/keyBy.js","hash":"96e32f75404ee87c0fe8bf2d8b7a2c69cee308a7","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/kebabCase.js","hash":"ed770da5a2e3ada160f9dcd625a94d16ffa8fef0","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/lang.js","hash":"2e1998c6fa6bd4a5c691edd1eb1fffaea2a35b85","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/keysIn.js","hash":"e444c4b265f9f39968467a82c09935bfa1be501a","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/lastIndexOf.js","hash":"64b8f7981a889c14b785738da32da89ea7b06519","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/last.js","hash":"dcdc5c04379818603815dfc64e96bd5e2626fd29","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/lowerCase.js","hash":"6280f901a37fb21a9acc5df8678661c1dd47d425","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/lowerFirst.js","hash":"6b7a190cd8d1f01254d0556b7725ed8ad3ee9cb3","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/lt.js","hash":"244011c8209227a5d714f5843106b13de0f5fc15","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/lte.js","hash":"02b0d1b5d68ff6e8cabda05c1e5a4c9675b10479","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/map.js","hash":"484de2e64aa6e9cadbac92703bf79be5dbd53942","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/mapKeys.js","hash":"6c2885c6249ff8dbd5c18910338240ddcd441e48","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/mapValues.js","hash":"7d273ea92cb971d298e84137f49b89c5d7249336","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/matches.js","hash":"b760524ca6b6ba617641aa4353e7598c0cebe50a","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/matchesProperty.js","hash":"993988bbf9037d03aa3ec66e3d6ba3db185a58e9","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/math.js","hash":"09b7cdb94b0829a362572cd9eb490c6b86471f35","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/max.js","hash":"2c5910535b9bc06c066c57f71b5b02965b894cfe","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/maxBy.js","hash":"85f841238f0c60a3496eecb25a3bf7aec5fc36fc","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/mean.js","hash":"17efb674e29e2456f3b1e595210a9929480e14a3","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/meanBy.js","hash":"5a9d6be568a698c6ef430a07f3431c11bbba3dcb","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/memoize.js","hash":"507cd3e0ae52967b105d0452fd0f93fbbc69bfc9","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/mergeWith.js","hash":"18a5592394d4cf1a0772e6ff38bacb9b547105f6","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/merge.js","hash":"20f06dc73414778002395627c8d4316699ff947b","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/method.js","hash":"6dedac7c45efb248890558a8d42a2656623ce0a5","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/methodOf.js","hash":"6af752f45f4152f036fb378075d72f6ab82573ea","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/minBy.js","hash":"8fa3de3c1efcc246ee906a281757f905cb13507e","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/min.js","hash":"0ca11cbe1894931dd09246e001badc22eb734887","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/mixin.js","hash":"813b628b7fe94024fa308fbc6d06d1883dee9325","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/next.js","hash":"8504ac753cf6e3e19d811038503ee000b7829e8a","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/negate.js","hash":"a01d8c228ce6992ec79ee4146677e52dcc487254","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/multiply.js","hash":"47e4d5d6014da46305a0be1082d66d2f41928e82","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/noop.js","hash":"35300b7ebb741e7a54fe528a8a718b26c35bf698","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/now.js","hash":"ddba13c834824d9467e379769e67f414a6179d15","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/nth.js","hash":"4c0c437715ed4fb0942b8dee7273b9d0dc5f62e0","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/nthArg.js","hash":"47191997e9ebf3b2b8dd667ee362e48d381217fb","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/omit.js","hash":"874d0d4204aa0cd72c79d7b3a4c80a577f46b564","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/omitBy.js","hash":"4216fc454388cdba0292cc5199b2d28d7484ac7b","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/object.js","hash":"4b9c99e1cb054bfcb6777077f59a2a53a4759490","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/number.js","hash":"8c2564ca466fcb7f4f0decd5eb79f803f39983f9","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/orderBy.js","hash":"7665eee9891d204d48cdd799992dbd6a9678125a","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/once.js","hash":"5bb536b8c7f08f94ccc9019a51601cc97d9b24d3","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/over.js","hash":"e28a6b283217955bd749ce30edeba3e6b977273f","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/overArgs.js","hash":"e60acc78f35d412319457c41a3bcecc898f9653e","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/overEvery.js","hash":"03c5153a4c43d913a9162032f5041cc1f982250d","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/overSome.js","hash":"153452d7a4349ee32447e45f59e975f929de5c19","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/package.json","hash":"6a806a398142c256e73fd7dbe947262a6a615a2f","modified":1606920508966},{"_id":"themes/kiss/node_modules/lodash/pad.js","hash":"b6a0479a2ce0289d29214e8f7ff83a0074406d25","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/padStart.js","hash":"d6ea6887328ca596d505af7b181edcad862865f4","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/padEnd.js","hash":"5973017726462db292d41c2f28b53b8a4a24c507","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/parseInt.js","hash":"786b6be24ff93b68962925663708aca1236f2cc8","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/partition.js","hash":"36957b0323cbd50f5ec8e4be3b5cf571241407da","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/partial.js","hash":"5c9f9b1c6719f70ceaa7fa314193f7ed4ed5770e","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/pick.js","hash":"9c8c0c82b1db06c624523239aea143410c5258be","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/partialRight.js","hash":"7c551ed65cc1b160ab8a7abb78b9e37c3b426e5f","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/pickBy.js","hash":"99eb4eed1acb33f67be3b41f359601f0f6d75ae3","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/propertyOf.js","hash":"d23f88041fae20fcd9b92740fffd39016a6715ff","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/plant.js","hash":"2b370614388e8fc4a0e12d2eaa644c25622de026","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/property.js","hash":"276a7afddaacbac4fa184f0096a92f32ee517ced","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/pull.js","hash":"e40207e049af5517cc5cfd59ffd23b1c3a1406dc","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/pullAll.js","hash":"1bb4ac35a97475e16cfa8a10abfc5d911c58d743","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/pullAllBy.js","hash":"5dc628f7fe0c8e71edf931bebecdaeb0e30d6f2e","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/random.js","hash":"d64df688329131b297c269ce8e10b44cabe52e66","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/pullAllWith.js","hash":"f205f46a35a1b3d40f86c92dd9488e25c59cf5b9","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/pullAt.js","hash":"176790538e4f38124826d06462d089f8acfe1b0e","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/rangeRight.js","hash":"6640704aba8af652f6f8d13758946125dc324e08","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/rearg.js","hash":"ef1d75bb13e2f07e1737b028878775f67ed2b50a","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/range.js","hash":"6bc797b60a5f0b1fe8e93c0c4c41361c7f8f1189","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/reduceRight.js","hash":"8c8897c831800592470dc2fec9f1f575f844b2fe","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/reduce.js","hash":"a6da684222d6a2179aa409e3728758572961152f","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/remove.js","hash":"a91465f281fb69fc2cf3a9fa751acfe89c5d95fb","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/reject.js","hash":"6b18138c39a26986320b80d9748bf5385c2b0c71","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/rest.js","hash":"61b930cc021a8f03bb466ac833596d6d37416714","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/replace.js","hash":"a35231e4112316c03e6c65162affe9effee35922","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/repeat.js","hash":"8a5c222ac1514d5732374f165d8df9dc0274bd71","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/reverse.js","hash":"09f86bfe19d080bb52606967a9df5f017333e963","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/round.js","hash":"629b46fafec63f591a3c6b02ee03529ef43a8acf","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/result.js","hash":"7180962c1b72ea113dd6516d5c28d006080e97f5","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/sample.js","hash":"b861fdd759aa14bb6747b0e333df66b8995300b2","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/set.js","hash":"bd5aefade6c00bbf37fd21dcd79e0ffd085a6084","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/seq.js","hash":"e8dae0be3b8ece53ea5d6594d0b45d221f643576","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/sampleSize.js","hash":"7a14f0d38676fcf8ed64a12ac379c8203eda1e4a","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/setWith.js","hash":"012090d3598aeb4e36cadb5fb3ee7ecd9d184211","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/shuffle.js","hash":"1d035fe3d9776decf38cab2e19e2b2da99aa5dfe","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/snakeCase.js","hash":"b95290beac2d4eb4436d72bde0b191a8db147970","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/size.js","hash":"baeb54345201e06c8c096f9a4f62192c8584f982","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/slice.js","hash":"fffe0c44921ec28dd2fc1512493b912411d06628","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/sortBy.js","hash":"5f928288640eec63d9ce82e3c16750b4952f5aa1","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/sortedIndex.js","hash":"e31955eb8a9dcf9868e2df8f112a8ef873709970","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/some.js","hash":"b6d44fdefb9894407b8d48ff379c6288fec935ee","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/sortedIndexBy.js","hash":"785066b03fae1e7fa508b7380f95727d02284d7f","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/sortedLastIndex.js","hash":"b886560112d50f2aef5f1acdcc5cd9296ff6f8b7","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/sortedLastIndexOf.js","hash":"f4a56782a4a913c330d832d80000e0340093e020","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/sortedIndexOf.js","hash":"21e71189ed17c2769fcd2c91625af1a65b84591b","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/sortedLastIndexBy.js","hash":"4bf9117b8f1d0161a8369f127220b897819cd6a9","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/sortedUniq.js","hash":"612a221cb2088447b6510930f35f7140ecf41d1f","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/sortedUniqBy.js","hash":"e9ee6345a66fbef43ac161edd568feb2f197a2ce","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/spread.js","hash":"b5e45484e55917c836dfc464d1c1dfb5e016a53b","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/split.js","hash":"f33b9e68923d6bd511a37658a794104452f1bacd","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/startsWith.js","hash":"10e9857ce37a805453b6e1c5e0caac454d08ba89","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/startCase.js","hash":"5cae4afa2846579e8173a62ae27253a75fb57119","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/string.js","hash":"9da506e6420a685f56f77ccdcdd4dfe0ffe552b0","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/stubArray.js","hash":"bdc0e5ed494f2924ffd64e91620fbcd8161f7223","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/stubString.js","hash":"053b1bf13c37041494b3afed57eea26d24b46c59","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/stubFalse.js","hash":"e5b35ac8e1872e9c87f126c972891005c94e7d19","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/stubTrue.js","hash":"35d765e8ae55e010a1b5eda7aa6596a14a052ef6","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/stubObject.js","hash":"dc710610031cb2255019c0bd8465df0d6db0111e","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/sum.js","hash":"b468caad43dbd33443e584c510697155ec12a71c","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/sumBy.js","hash":"9a28d421380fb4347c651dd4935461c69a465251","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/tail.js","hash":"9f994bae44d6e96a75142cfdbfb362f1f8190d8b","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/subtract.js","hash":"6927a0ddb3037e644d7d49f7aadd99f45ac2226d","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/take.js","hash":"07615e176130761c61262b882598a6aab8bbbd48","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/takeRight.js","hash":"aecb30e9e3d49c9194b57e4c7988a11b4e911170","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/tap.js","hash":"a1f5e1966c3620b69def36154a27a8d9893d87f1","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/takeRightWhile.js","hash":"b4562aaf5ce999f9c4b68b1bb5296da5799e4e37","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/takeWhile.js","hash":"7ab5baee95d7a1aa64183a266176725180d74c8d","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/throttle.js","hash":"dc6c20077c14d5b184f3471924032e242c9ec3b9","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/templateSettings.js","hash":"fa92b30409e71f025035d7a47921a061b46f70df","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/template.js","hash":"aac2f4654f470c3c50c945dadf70062223ea7dbb","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/thru.js","hash":"d006fad2ab19f7bc90e0ec69eb5037f081d99bee","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/toArray.js","hash":"5cde4e05caa391716f89e179755c861677498c0c","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/times.js","hash":"ee9fd905cf9b189471102ac6b4a75b745085ce48","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/toFinite.js","hash":"44b15d3279c2f94ac2098503c427e1e0eb34c3f4","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/toInteger.js","hash":"06e857ac41a5b7056f7b522db601b4679f04f5ee","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/toIterator.js","hash":"f8fc807ff29125bb2dab968633ad964ec94194b0","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/toJSON.js","hash":"dcaa02fb24d8915128f62a50e2782e30d7d4fe8e","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/toLength.js","hash":"9a0a62cbf4f795ff3efba1fd3b1a84cd5ec94ee1","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/toNumber.js","hash":"2b6f75e579b5ec0e84426be3ce1fd0d3a1abec18","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/toPairs.js","hash":"48dbccab7f479c713471fa2378d5ffa402745f77","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/toLower.js","hash":"3cf1e67f3e193b9f982b8814fec29cdf99b6b038","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/toPairsIn.js","hash":"ddc2a974ba685da424c9de9e2f7949b662844273","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/toPath.js","hash":"973bea7fc9852f05f88b1e11a768b7b7ab786990","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/toPlainObject.js","hash":"4e96ce3252e389b1633a2c73fc9d68031a12df29","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/toSafeInteger.js","hash":"c49cb9237787895a00956b20b569bd384c684269","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/toString.js","hash":"6c4365360e107172a439c756d9be5db5470b1142","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/toUpper.js","hash":"5e6fa81c32735a5c142884a1da0b1d88b780d05d","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/transform.js","hash":"2cb75bbd3d23239daa2681abefea716e5f7e0bfe","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/trim.js","hash":"de870b0426ce1ef6506652312b8298aa7caa16fc","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/trimEnd.js","hash":"c18ce828f8e810a17d423d75705261ff77b34462","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/trimStart.js","hash":"fdf32db72208d65d988d3a7672d2d22a2bce89b3","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/truncate.js","hash":"24f4a9506442f2cafc20a024b9d79fb6e5df3326","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/unary.js","hash":"079326455dbdd90b20704f1a3abf73cfab59d088","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/unescape.js","hash":"89bc8a104147bab3b23f5e6f1f1c3819c6168293","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/union.js","hash":"2cd89b9ad0a574cfddd5daa4c5c95ad71db6b4ee","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/unionWith.js","hash":"16881474335022100f41832178f2109f7525061d","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/unionBy.js","hash":"0d110e48caa5b130f45e00bb7d65dcebe66e275c","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/uniq.js","hash":"2b735c46c626dba6b45907c8c70f17475366016f","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/uniqBy.js","hash":"5591128502a52624cfadfc2d4c7b20db4011267b","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/uniqWith.js","hash":"0a37f6a99454364d2683df713e678bc9669d6684","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/uniqueId.js","hash":"0809eace58255a033eb37e73ce581e2cc6fe26d1","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/unset.js","hash":"5f2a9664870f21d2b7dcf0255f50ad9b37a6c850","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/unzip.js","hash":"9adc3e8903f6134c27951f3a558286a7667656d9","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/unzipWith.js","hash":"13255720f48e23ba96205aa49fe5bb538b3c640c","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/update.js","hash":"abae1fa2fd4b937bb1cf1f4a0fb4a73eb9d4aaab","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/upperCase.js","hash":"4ce59b5839e848688ed76fc99d62f35168f9f46c","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/updateWith.js","hash":"dd63e7b716f897c2bc9f7d39884e0282ba81bccf","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/upperFirst.js","hash":"091005e45cf8b9ce4f51e1b2ff2da30558b40714","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/util.js","hash":"9e3bd39fa03689fa7d9897be9c2387e19646662f","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/value.js","hash":"dcaa02fb24d8915128f62a50e2782e30d7d4fe8e","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/valueOf.js","hash":"dcaa02fb24d8915128f62a50e2782e30d7d4fe8e","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/values.js","hash":"6304ca5a2c8a30cb1eef8cfb80aed716e29d3495","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/valuesIn.js","hash":"5d6cd8fa3358eafef39b236579720c3d6c4450c0","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/without.js","hash":"979bbb5dc3e1e17ea311c4d85a47b5b8b5c9c58a","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/words.js","hash":"74ebd3c81508567ca14f57f717488d4cf337101f","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/wrap.js","hash":"956d1896e8a55677cef08f879674d4de21d45184","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/wrapperAt.js","hash":"4974d8fad13c6913d78fe90db2de8cd83a811f47","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/wrapperChain.js","hash":"0b6afa60d6fedd5ae935c2127562ba2a590b5b14","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/wrapperLodash.js","hash":"b20f7aa45935b9d38b954bc7fc07b0a15298df77","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/wrapperReverse.js","hash":"2318334d83fc88acd2b7fa81c1a709b957719f4a","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/wrapperValue.js","hash":"dcf31c73fbacb8ab409179125d9ffe51e1ec8696","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/xor.js","hash":"77e7c70d299ec7430efd31d411e46bac4dd0450d","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/xorBy.js","hash":"5e7d74900860098de29d83658deb9eccc1f7b840","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/xorWith.js","hash":"ceb3b359ce93812b82f622e0c117585ba83b2996","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/zip.js","hash":"2df2c5d391c0c7fb710357e33d6a9f16425d66fa","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/zipObject.js","hash":"fa1c2ef419f663fe0b552effed4b64428cb52f15","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/zipObjectDeep.js","hash":"a4cd8a063e87152a2229d1493af4fdd0419d3ff0","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/zipWith.js","hash":"8cb8637b0b2b1174922ef35138408a777911267a","modified":499162500000},{"_id":"themes/kiss/node_modules/pinkie-promise/index.js","hash":"830ad9dad341dc74b12a7af106c9e97c07e44a02","modified":1460309821000},{"_id":"themes/kiss/node_modules/pinkie-promise/license","hash":"91c700b5dac5967632cf497f1f3316352b1b45ce","modified":1460309821000},{"_id":"themes/kiss/node_modules/pinkie-promise/package.json","hash":"206ee3d467314c12049df22e8b09ab55b2764a17","modified":1606920509181},{"_id":"themes/kiss/node_modules/pinkie-promise/readme.md","hash":"450859283a97df6ee0918789a485d26786329eb1","modified":1460309821000},{"_id":"themes/kiss/node_modules/read-pkg/index.js","hash":"c3b08ea0ff9cb3008e88a67763b7979875a2fdf3","modified":1441446665000},{"_id":"themes/kiss/node_modules/read-pkg/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":1396798991000},{"_id":"themes/kiss/node_modules/read-pkg/package.json","hash":"61ac37bbb048ad2800be19ee7e894b2bce37e7eb","modified":1606920509143},{"_id":"themes/kiss/node_modules/read-pkg/readme.md","hash":"07a97a6f379c3f8b2fda78f2654d83e46667b554","modified":1441256093000},{"_id":"themes/kiss/node_modules/read-pkg-up/index.js","hash":"af97811952cede51c92a3d38752bc37df9496222","modified":1441257916000},{"_id":"themes/kiss/node_modules/read-pkg-up/package.json","hash":"6cd7428c7993c61dcb5fbbccf3008891babe93b1","modified":1606920509143},{"_id":"themes/kiss/node_modules/read-pkg-up/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":1396798991000},{"_id":"themes/kiss/node_modules/pkg-up/index.d.ts","hash":"44a4fff1167200d4b0a26b47236ff16a9246db4c","modified":499162500000},{"_id":"themes/kiss/node_modules/read-pkg-up/readme.md","hash":"f72451c180f747a98dfe5c774b4513152dd78410","modified":1441257728000},{"_id":"themes/kiss/node_modules/pkg-up/index.js","hash":"eca54fedd60935c5570d1aeeaa314e654a46820c","modified":499162500000},{"_id":"themes/kiss/node_modules/pkg-up/license","hash":"5aaf48196ddd4d007a3067aa7f30303ca8e4b29c","modified":499162500000},{"_id":"themes/kiss/node_modules/pkg-up/package.json","hash":"da3a0bc34fb9c9b1166cc3408ca34c434b7050a7","modified":1606920509146},{"_id":"themes/kiss/node_modules/repeating/index.js","hash":"9a5382a64c2d9f06fe2225a44fa56c8a5ce568e3","modified":1450718372000},{"_id":"themes/kiss/node_modules/pkg-up/readme.md","hash":"0993b3eab65bab74c75034c796deda7f0c9d8359","modified":499162500000},{"_id":"themes/kiss/node_modules/repeating/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":1396798991000},{"_id":"themes/kiss/node_modules/repeating/package.json","hash":"a00016c5f7a548e08e30bf3af607ef738a1ff4e9","modified":1606920509146},{"_id":"themes/kiss/node_modules/repeating/readme.md","hash":"c7496fb90e5f8e3e32d2faed3548ceec825df089","modified":1460395907000},{"_id":"themes/kiss/node_modules/resolve/.editorconfig","hash":"b613101963356bfaf6118fc55cf67bd5f5567303","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/.eslintrc","hash":"0d3fb8ae38343c90f9ac74e1f134c0697cf41231","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/.eslintignore","hash":"8b894ec0b3bbc33011392ad9bafeb1df2634db45","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/LICENSE","hash":"6fe44ff6cf4fd9a9fba82fbbed41a011169c6dbe","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/.travis.yml","hash":"60ad8fec46b9064d3bf8f22cfce6ab75280350ef","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/appveyor.yml","hash":"d59d7f5a6888e615269e59ebfa55aace6d748c44","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/index.js","hash":"78eb8044b2ff3d7d35114392582a6061a029674e","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/package.json","hash":"bf87fc62c3349be8a818b5bfe920b4b42b8bf6e1","modified":1606920509145},{"_id":"themes/kiss/node_modules/resolve/readme.markdown","hash":"e57ad9640229eb8ec3120cb5175070c90a20d225","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve-from/index.d.ts","hash":"3998f4d31d57223e6243144bf6f667c4c45dfcca","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve-from/index.js","hash":"12204537847d8c5d27e3dbeb024c2def138bb3ae","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve-from/license","hash":"5aaf48196ddd4d007a3067aa7f30303ca8e4b29c","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve-from/package.json","hash":"d1466218031e368ab512eb6e331bca21fbb567b6","modified":1606920509145},{"_id":"themes/kiss/node_modules/resolve-from/readme.md","hash":"c0b86d0ce02bf72fba1f1ed29e8ff4b1948548f6","modified":499162500000},{"_id":"themes/kiss/node_modules/redent/index.js","hash":"9cc8db3f85eb6d2bbae14fb596b320f4cb0262b9","modified":1443523229000},{"_id":"themes/kiss/node_modules/redent/package.json","hash":"221651d097064fb5e49457cb15eee31e1ae2e127","modified":1606920509143},{"_id":"themes/kiss/node_modules/redent/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":1441258257000},{"_id":"themes/kiss/node_modules/redent/readme.md","hash":"94d53b271963b7a29c2638ae00f4a23d8a196578","modified":1443524028000},{"_id":"themes/kiss/node_modules/resolve-pkg/index.d.ts","hash":"4487ca73db08a69d6efb88b455dae368d8a93fa9","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve-pkg/index.js","hash":"5fac8fa2efbe419c2e64c465cd10d6aaafc1da26","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve-pkg/license","hash":"5aaf48196ddd4d007a3067aa7f30303ca8e4b29c","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve-pkg/package.json","hash":"986e4cb9c59df0f4ecc25b264cc1a995185592de","modified":1606920509145},{"_id":"themes/kiss/node_modules/resolve-pkg/readme.md","hash":"e137305261379c29573a82f7ca29657f7dfec882","modified":499162500000},{"_id":"themes/kiss/node_modules/safer-buffer/LICENSE","hash":"cfcb19ab237382e4ce1253c5f0e28ad153a3c77a","modified":499162500000},{"_id":"themes/kiss/node_modules/safer-buffer/Porting-Buffer.md","hash":"1f23a158dc57c02812baef3334ef96ba1c940e5c","modified":499162500000},{"_id":"themes/kiss/node_modules/safer-buffer/Readme.md","hash":"133890ecc4218d9c67890f0e5884e754e824c859","modified":499162500000},{"_id":"themes/kiss/node_modules/safer-buffer/dangerous.js","hash":"f5d11729706b0de3ed7d6f35060eb73680cce42f","modified":499162500000},{"_id":"themes/kiss/node_modules/safer-buffer/package.json","hash":"fcd23eca9cf3c0bd9d21255dfd3c67a69815a9ed","modified":1606920509144},{"_id":"themes/kiss/node_modules/safer-buffer/safer.js","hash":"ad919cad501061f663026f382334cc6ce5a8b381","modified":499162500000},{"_id":"themes/kiss/node_modules/rimraf/AUTHORS","hash":"18341b56fef79d520c3d862b737e91c6b24ea649","modified":1327889666000},{"_id":"themes/kiss/node_modules/safer-buffer/tests.js","hash":"dc7fd8ad11f6c0a7de689697afc870f58f7a2844","modified":499162500000},{"_id":"themes/kiss/node_modules/rimraf/bin.js","hash":"f6e74628b82bbd551e11947abad295c1b87cf6df","modified":1371826156000},{"_id":"themes/kiss/node_modules/rimraf/LICENSE","hash":"4a1927e74796f06ac7e7a687ca6b44d39c65d8f4","modified":1306777682000},{"_id":"themes/kiss/node_modules/rimraf/README.md","hash":"e579a194de49c69f6404ea8c8990a7b982d3e95c","modified":1385744303000},{"_id":"themes/kiss/node_modules/rimraf/package.json","hash":"5d13e9eca261d0ccab74425e87731bf9febf372f","modified":1606920509146},{"_id":"themes/kiss/node_modules/rimraf/rimraf.js","hash":"44659e827a4ceb7bfb8793b80af86c5f96f8dd8c","modified":1399391937000},{"_id":"themes/kiss/node_modules/semver/CHANGELOG.md","hash":"70b4a99be0447836856140004741649fd4ded7b1","modified":499162500000},{"_id":"themes/kiss/node_modules/semver/LICENSE","hash":"bb408e929caeb1731945b2ba54bc337edb87cc66","modified":499162500000},{"_id":"themes/kiss/node_modules/semver/package.json","hash":"7934c7bfb3b3bae5c2080f0fc04b85e9fb7d414a","modified":1606920509146},{"_id":"themes/kiss/node_modules/semver/README.md","hash":"496981207a34eb019688e8f2583ccc1abcbb5bce","modified":499162500000},{"_id":"themes/kiss/node_modules/semver/range.bnf","hash":"5c6f063e0ec60f2d04686f73a12ba5f389988a2b","modified":499162500000},{"_id":"themes/kiss/node_modules/signal-exit/CHANGELOG.md","hash":"84fecbe3e1a39423c5992a6eef6e27e4d847f317","modified":1480713047000},{"_id":"themes/kiss/node_modules/semver/semver.js","hash":"986e7a92959b3a278706369b0e5c97e78365bed3","modified":499162500000},{"_id":"themes/kiss/node_modules/signal-exit/LICENSE.txt","hash":"ffffda22e521943bc894935cfae5dd16aaf35897","modified":1480713047000},{"_id":"themes/kiss/node_modules/signal-exit/README.md","hash":"c34b15d11371d951320d5ad8518e69fcbd979639","modified":1480713047000},{"_id":"themes/kiss/node_modules/signal-exit/index.js","hash":"4c79d6ab52a7473a4e5e096142c619e4fbbac3a6","modified":1480821624000},{"_id":"themes/kiss/node_modules/signal-exit/package.json","hash":"386d186b3227819b86bea648e6f69b9fb13d8ec3","modified":1606920509144},{"_id":"themes/kiss/node_modules/signal-exit/signals.js","hash":"6e1c2ff72044c1901590ffd119245461fb85a6bc","modified":1480713047000},{"_id":"themes/kiss/node_modules/spdx-exceptions/README.md","hash":"9b0feb367ded5fcdbfcfb835771c615744fe59cc","modified":1538409811000},{"_id":"themes/kiss/node_modules/spdx-exceptions/index.json","hash":"2a2a8ad3bddaab7ed2bd432f94ae82a1a6637611","modified":1538410135000},{"_id":"themes/kiss/node_modules/spdx-exceptions/package.json","hash":"3aeac3ce3c8e45f0f0660a8f5fac771a7a1d0acf","modified":1606920509146},{"_id":"themes/kiss/node_modules/spdx-exceptions/test.log","hash":"1ef3263d4015b87b81fae73c02b2c2d29ad34137","modified":1538410128000},{"_id":"themes/kiss/node_modules/spdx-correct/LICENSE","hash":"2b8b815229aa8a61e483fb4ba0588b8b6c491890","modified":499162500000},{"_id":"themes/kiss/node_modules/spdx-correct/README.md","hash":"80c17451aed0e04101551a54bc526d8f64e24219","modified":499162500000},{"_id":"themes/kiss/node_modules/spdx-correct/index.js","hash":"2362d6ec32963254197fb424efe2d80c94aa4b46","modified":499162500000},{"_id":"themes/kiss/node_modules/spdx-correct/package.json","hash":"4b80da7f322915977ae058d97c34581342bbf744","modified":1606920509144},{"_id":"themes/kiss/node_modules/spdx-license-ids/README.md","hash":"b6bebe6f4f8dd909a5cce7095a25ca3834cfe9b1","modified":499162500000},{"_id":"themes/kiss/node_modules/spdx-license-ids/deprecated.json","hash":"257b8c856516b293b16867d99ad5267153865bb9","modified":499162500000},{"_id":"themes/kiss/node_modules/spdx-license-ids/index.json","hash":"392f4571b84e27fa866c91f389459711314d3656","modified":499162500000},{"_id":"themes/kiss/node_modules/spdx-license-ids/package.json","hash":"fab3b2974c2751b468a394483f0398d30690ddcb","modified":1606920509144},{"_id":"themes/kiss/node_modules/spdx-expression-parse/AUTHORS","hash":"448b07aac5b6de983fb89d4b686b3e708f34d844","modified":1519690199000},{"_id":"themes/kiss/node_modules/spdx-expression-parse/LICENSE","hash":"a9293189ddfd959ffb54ef7805b1eab21979d700","modified":1519690199000},{"_id":"themes/kiss/node_modules/spdx-expression-parse/README.md","hash":"bd780a8acd5eee2619732e23d40844952fbd0fac","modified":1519690376000},{"_id":"themes/kiss/node_modules/spdx-expression-parse/index.js","hash":"7d9b17e093b4706955e0b8991ed0d48f5739a40f","modified":1519690199000},{"_id":"themes/kiss/node_modules/spdx-expression-parse/package.json","hash":"a247cf362e9a5ebcad4e9982629d9c6019236324","modified":1606920509144},{"_id":"themes/kiss/node_modules/strip-indent/cli.js","hash":"aef33a307f851bb25b1bb7efbe24089df85cf7c8","modified":1407937346000},{"_id":"themes/kiss/node_modules/spdx-expression-parse/scan.js","hash":"767ed0082ec44d79a104922aebfcf171d2884c32","modified":1519690376000},{"_id":"themes/kiss/node_modules/spdx-expression-parse/parse.js","hash":"65edaf3d5d73e75eb837639d8ba325ce81af9308","modified":1519690199000},{"_id":"themes/kiss/node_modules/strip-indent/index.js","hash":"dc4f6ac692f8c755e3beb4672e43745c7f453bca","modified":1407937164000},{"_id":"themes/kiss/node_modules/strip-indent/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":1396798991000},{"_id":"themes/kiss/node_modules/strip-indent/package.json","hash":"97b303c2d16dc79656593ad015ba5c249348ad0e","modified":1606920509145},{"_id":"themes/kiss/node_modules/strip-indent/readme.md","hash":"1e953769e18b5a3315b916cc7bd4131539b99917","modified":1407937477000},{"_id":"themes/kiss/node_modules/supports-color/browser.js","hash":"9800d972941ea5bf3e0838f8686dbe9ff97ba98b","modified":1521908559000},{"_id":"themes/kiss/node_modules/supports-color/index.js","hash":"ee9a711c9a006df8905afb8f0b7ebf4faa6a2c7e","modified":1534739346000},{"_id":"themes/kiss/node_modules/supports-color/package.json","hash":"8e2a91a07cb3d5571e54d5164722cc454e1b9a5e","modified":1606920509143},{"_id":"themes/kiss/node_modules/supports-color/license","hash":"5aaf48196ddd4d007a3067aa7f30303ca8e4b29c","modified":1496344655000},{"_id":"themes/kiss/node_modules/supports-color/readme.md","hash":"90d71263768deafa581e770a71913323c0c52ab4","modified":1521908559000},{"_id":"themes/kiss/node_modules/sprintf-js/CHANGELOG.md","hash":"9810db401d1ccc305b406d8e9987aaabc7a0a440","modified":499162500000},{"_id":"themes/kiss/node_modules/sprintf-js/CONTRIBUTORS.md","hash":"81e24ebef5ad39dad8c31f68bf455b24ed990354","modified":499162500000},{"_id":"themes/kiss/node_modules/sprintf-js/LICENSE","hash":"e2f130e840e22d04eced7f46d00dd281e7c546a2","modified":499162500000},{"_id":"themes/kiss/node_modules/sprintf-js/README.md","hash":"fd762d055e479acc6579ef32a513dba007ebc173","modified":499162500000},{"_id":"themes/kiss/node_modules/sprintf-js/package.json","hash":"2ccf1216db418cfc02ac96be7e69923335402768","modified":1606920509144},{"_id":"themes/kiss/node_modules/strip-bom/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":1396798991000},{"_id":"themes/kiss/node_modules/strip-bom/package.json","hash":"0e4e1c61c5fa0df59e443cab99d466478792bb3d","modified":1606920509144},{"_id":"themes/kiss/node_modules/strip-bom/index.js","hash":"a51c5fa1cdfa6534d6a2873b5f2f0994574af6f7","modified":1435582949000},{"_id":"themes/kiss/node_modules/strip-bom/readme.md","hash":"f7fe88ef200b48769bcbf27e47eec8968f62ff74","modified":1435583499000},{"_id":"themes/kiss/node_modules/trim-newlines/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":1441258257000},{"_id":"themes/kiss/node_modules/trim-newlines/index.js","hash":"96a6d5ab5921b363425c3006f163b5e7c1febdd8","modified":1443517660000},{"_id":"themes/kiss/node_modules/trim-newlines/package.json","hash":"afb5b2b7b69f7aefdcceb81aeffeb52a1dfb7166","modified":1606920509143},{"_id":"themes/kiss/node_modules/trim-newlines/readme.md","hash":"b892a9a5efc16665a659e3dcc8a97b3f018ce22e","modified":1443518567000},{"_id":"themes/kiss/node_modules/util-deprecate/History.md","hash":"1fc5b9cf603a0b6abeb852b35bec607a411e5b9b","modified":1444243047000},{"_id":"themes/kiss/node_modules/util-deprecate/LICENSE","hash":"cbde92577cb69b3b45dd33f8dc600732cf9e14cb","modified":1416945941000},{"_id":"themes/kiss/node_modules/util-deprecate/README.md","hash":"8e590b24df7b037031e571b7b2b9600217b83ae0","modified":1416945941000},{"_id":"themes/kiss/node_modules/util-deprecate/browser.js","hash":"335965112d6117af8926dce4497a1fb9fca022eb","modified":1444242970000},{"_id":"themes/kiss/node_modules/util-deprecate/node.js","hash":"26bb9fcabaf57f0bb50e5e026c13de394bc0c478","modified":1416945941000},{"_id":"themes/kiss/node_modules/util-deprecate/package.json","hash":"5659d4bedca1a96556bbb0f57995220b253f1979","modified":1606920509143},{"_id":"themes/kiss/node_modules/which/CHANGELOG.md","hash":"182c7a32e7b74f4c6097c893031a88dd8897ecc6","modified":499162500000},{"_id":"themes/kiss/node_modules/which/LICENSE","hash":"bb408e929caeb1731945b2ba54bc337edb87cc66","modified":499162500000},{"_id":"themes/kiss/node_modules/which/README.md","hash":"880b21360637c36418d55dd08211f1017c881df1","modified":499162500000},{"_id":"themes/kiss/node_modules/which/package.json","hash":"4c65ce4cdc7657aac8872953b4cb4073418194c0","modified":1606920509145},{"_id":"themes/kiss/node_modules/which/which.js","hash":"f39455d215c8d397782f1efbc6e52254d0f9a4ab","modified":499162500000},{"_id":"themes/kiss/node_modules/validate-npm-package-license/LICENSE","hash":"2b8b815229aa8a61e483fb4ba0588b8b6c491890","modified":1533486608000},{"_id":"themes/kiss/node_modules/validate-npm-package-license/README.md","hash":"511c2424eda7709699b143551a6ab47183f3e0e2","modified":1533486608000},{"_id":"themes/kiss/node_modules/validate-npm-package-license/package.json","hash":"d4c1ed40367064826e6ebe3f6498fc35b00d3d0b","modified":1606920509143},{"_id":"themes/kiss/node_modules/validate-npm-package-license/index.js","hash":"f3b4c4411d93c2314997bcb06791fb22a39b0ce2","modified":1533488220000},{"_id":"themes/kiss/node_modules/underscore.string/.editorconfig","hash":"a2690286242a72017cfc6baf74bd7be84e1df235","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/.eslintignore","hash":"c86fe78ae5d668c29b40eda5673fb5976b844a37","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/.eslintrc","hash":"7a63c569d09642db048f83d0f6f4a50dc8a782d0","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/.travis.yml","hash":"2a3478fa7515d730b0522044059cab44425f5635","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/CONTRIBUTING.markdown","hash":"b20f3744a10166d57288d3f060ec1262b529b1ee","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/CHANGELOG.markdown","hash":"c216e22fe87e74537f0ab389ba3c9e3495863d9f","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/README.markdown","hash":"209b8bac87765fdfa2e4fea7d884a52a5c32714e","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/bower.json","hash":"cf10e157b5dcd301fa52ba36999e1363ca61eba9","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/camelize.js","hash":"22a0f72894263418711b515b811386d42d0784ad","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/capitalize.js","hash":"0d614793fcee63d9ceeb76e98953e9b6f2d9e62e","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/chars.js","hash":"8ea54597496f42c44a414e5c16583647c153d9be","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/chop.js","hash":"4801cd8cb132171bb4b5930634abf28a289dc064","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/classify.js","hash":"9dd050fc605518de2363b725b83eaa6f30a71402","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/cleanDiacritics.js","hash":"6928f8621467098ddaaf9ae6bef6f606e0983016","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/clean.js","hash":"48892352349d8fa82608a007990c2969a7cbabc3","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/component.json","hash":"49df7bc8ada02b28706400e8788f8e2dbbdc7b2b","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/count.js","hash":"25df27a413e6dc8afb1272e7ee1747c3f262e068","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/dasherize.js","hash":"1ed10aeca721a31ca187976ea58c26cbdfe0e8d9","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/decapitalize.js","hash":"9b61d74e1ff13d9d65f4f0249ff1ca95d715886b","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/dedent.js","hash":"064546f5c14404b28feb96f3e940c1bd2378590b","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/endsWith.js","hash":"0e65a3991a87e281168d0df182cc64f4d553df90","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/escapeHTML.js","hash":"e2626e81259a2e3618e4fa19342701ef5cee5a8f","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/exports.js","hash":"6ef4a80738f1985f6b38e7074f8deb569ff07c7a","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/humanize.js","hash":"41a1b876024faa2e35249aacb9aecef35bd81a1c","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/include.js","hash":"566aa931854612243c90c39bf14093482fed9af7","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/isBlank.js","hash":"ee01f4b7bed93585273513eb2a7b3e8a5ec94718","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/insert.js","hash":"0729a4ee4ec08e59016abb3ed882445dcbfff09a","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/index.js","hash":"d380e99aee94c11e7ba1a5e4bb2913b77b30366f","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/join.js","hash":"ddd307fdfb67b078805e39dd14b6536866a02032","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/levenshtein.js","hash":"2d81ef078c1ebe3817dc02a3d0240390be47e418","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/lrpad.js","hash":"598d810037118f7dac51dd32b92d505cd470effb","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/lines.js","hash":"283f796b9dee843875a6814f97c9f2b76a11a464","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/ltrim.js","hash":"d6bdccc6991b247aaa3c14740a1c8de811d3ef71","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/lpad.js","hash":"be0e8c2271b65a741970870faf471f131f6406c1","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/meteor-pre.js","hash":"f2785091be30407374db6311984e7f3dcc6ec703","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/naturalCmp.js","hash":"e2273a9d6ab0570de410bebad8a196f487c3c666","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/map.js","hash":"5c97d1393aafe49ea9c1a5652d41718d116d64ec","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/meteor-post.js","hash":"5c9d5efd8ff49685a427006930eaa7bb7680f039","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/pad.js","hash":"16fc7098165330bb6dfc8c0b13de9ab4f1b587a6","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/package.json","hash":"851514d679d20975cf48481103820ab949602980","modified":1606920509143},{"_id":"themes/kiss/node_modules/underscore.string/package.js","hash":"5cebdf12a4b23f2c6616b953f7fc8390542ee0f0","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/numberFormat.js","hash":"5d93ade3dcafbec4739ce2395562ee76a3bdc233","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/pred.js","hash":"a760a6a2d221a1ab5d12d4616660573d083ea806","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/prune.js","hash":"51a285f3852245f7bb6587b876115a6986d07a56","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/quote.js","hash":"40a5b27f002f1fea4d960083f54f3eb57ccba506","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/repeat.js","hash":"2440b8c943d05e6cd8a201feac45b3a6e37ed60d","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/reverse.js","hash":"d1811b0c996e473af824c9758148594093554492","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/rpad.js","hash":"77f907d3bea7783e4f42d844cae5bc8ed807e39e","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/rtrim.js","hash":"abfa8298c584bd6a7b02e082bfa6753013f220ba","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/replaceAll.js","hash":"87bf8d3196a48adc71214e41c7d0f7399746d4fd","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/slugify.js","hash":"9e1a24cf2bd5e3601694484a528c337c708a1a9f","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/splice.js","hash":"105651255b6f9c618bc84e35afd3b6bd5c572841","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/sprintf.js","hash":"5916eca2d89e18e3628f68a1801710d7f4eae0ce","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/startsWith.js","hash":"2f8c06ea360efbf5f2f73675751b7ef559606df5","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/strLeftBack.js","hash":"370a232a97257ca600cc5cb67fe4e8eaa450d421","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/strRight.js","hash":"e70f8a3d7d3cfc563e41a0e113e38b6089addd95","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/strRightBack.js","hash":"b84725b99108967bd01abf0faf9f8d8433329071","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/strLeft.js","hash":"0d1a1d6403082a48b91b6d41b1f02060a6825177","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/surround.js","hash":"caa781cd68ed693a6de476430b8c4d03a622bab7","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/succ.js","hash":"6be8d56cdd56ba17e48a7fca4ae19317ffb0e2ac","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/stripTags.js","hash":"1b61e1df85e742c3fc5520ac404b91898f5a0243","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/swapCase.js","hash":"7d23d69295c47c5d4d62d72d07e5447c795cff44","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/titleize.js","hash":"490e2a3b7ba263943bb23c951e51b7eb74a3de81","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/toSentence.js","hash":"5181a4db77107b87dfa0b9bac6b764d629729e61","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/toBoolean.js","hash":"347fb3f0be6f66b039cf9d8fd8181fe8d798087d","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/toNumber.js","hash":"2bb46fda4f8e632c0384f8ced5da462f28af1545","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/toSentenceSerial.js","hash":"c46fe22761bc3fe8827da705045ba1f2de8ff978","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/truncate.js","hash":"901b0e05fc0392a2658829a138610f9dc061977e","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/underscored.js","hash":"91715096853bf1402bae63cf9259ed5b8899991b","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/trim.js","hash":"36913279677870bc06be6ca083f36cfdcab33a3b","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/vsprintf.js","hash":"172ecdb841e980eed77d811c7aa141e7295300cc","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/unescapeHTML.js","hash":"918c375aca5d0c170285c4033502495f976a3b52","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/unquote.js","hash":"31b601f9c2026b0aa0efe9425a4f1423f0e5fec0","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/words.js","hash":"275e68c7c351eb79bdf75883393490153c9562a9","modified":499162500000},{"_id":"themes/kiss/node_modules/wrappy/LICENSE","hash":"bb408e929caeb1731945b2ba54bc337edb87cc66","modified":1463526927000},{"_id":"themes/kiss/node_modules/underscore.string/wrap.js","hash":"cf5b99f325f49e3d4df739664ac219eaac1a8c49","modified":499162500000},{"_id":"themes/kiss/node_modules/wrappy/package.json","hash":"c5ff5c8f7dc0c8173b3a607fdf9dfb5077b7045b","modified":1606920509143},{"_id":"themes/kiss/node_modules/wrappy/README.md","hash":"582d7139d169b0fc0b1014f2372a0aa26a52cfb8","modified":1463526927000},{"_id":"themes/kiss/node_modules/wrappy/wrappy.js","hash":"7d5c1c908664b3df4a9b72400a126652ba0dd905","modified":1463526927000},{"_id":"source/_posts/it/java/java-basic.md","hash":"e01d3690bacabf7e4314f99647f91247cf88b98a","modified":1606892732442},{"_id":"source/_posts/it/java/.DS_Store","hash":"cf43ba98da7e57687b18ad7363ad31df539c8c1b","modified":1606901625904},{"_id":"source/_posts/it/java/java-collection.md","hash":"b47e5e923d21f219c06ba637be94690344e2decf","modified":1606892616480},{"_id":"source/_posts/language/jp/keitai-de-nihongo.md","hash":"2994a4af2a4564ee62399b2d745f6325ddfb9f6e","modified":1601808183780},{"_id":"source/_posts/language/min/teochew-kahtsi-vowel.md","hash":"5a3919731e7eb4099de64471b0910bb9626fe7a4","modified":1606879961725},{"_id":"source/_posts/language/min/sigêng-giamgia.md","hash":"f188d37b6057097009967e65a93ffc6a5e6d8a37","modified":1602030872609},{"_id":"source/_posts/music/listen-chopin-raindrop/cdefgab.jpg","hash":"ce62e60f342c7565b3836eaeffe1bdcdb8e25fb1","modified":1602427784244},{"_id":"source/_posts/language/min/teochew-opera-ghêgdengcung.md","hash":"a0e7f18033c2875451a885af7263d903692123e5","modified":1602777096531},{"_id":"source/_posts/music/listen-chopin-raindrop/piano-keys.gif","hash":"db1a2b3d591cfb88fe67069f81b91746aa38039a","modified":1602427784286},{"_id":"themes/kiss/node_modules/lodash/core.js","hash":"5f7dc5bccf42598a5a38a0d761e340f3f708342f","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/lodash.min.js","hash":"32f09ec3ec0950f47a35fc0d656559d5b164dacd","modified":499162500000},{"_id":"themes/kiss/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1601799641137},{"_id":"themes/kiss/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1601799641137},{"_id":"themes/kiss/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1601799641137},{"_id":"themes/kiss/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1601799641137},{"_id":"themes/kiss/source/css/_partial/archive.styl","hash":"82f3417081c67faef39660762eef606a147c13b5","modified":1601799641140},{"_id":"themes/kiss/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1601799641137},{"_id":"themes/kiss/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1601799641137},{"_id":"themes/kiss/source/css/_partial/article.styl","hash":"e57d5e442d980d408393ea742a767ed1546f7d77","modified":1606881806252},{"_id":"themes/kiss/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1601799641140},{"_id":"themes/kiss/source/css/_partial/header.styl","hash":"69c914cefed9e3427802a8ea7332b2aebade2627","modified":1601799641141},{"_id":"themes/kiss/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1601799641141},{"_id":"themes/kiss/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1601799641141},{"_id":"themes/kiss/source/css/_partial/sidebar.styl","hash":"f5c4f4f9875693ff0f851838662639c01877450f","modified":1601799641141},{"_id":"themes/kiss/source/css/_partial/footer.styl","hash":"2fa87c61bd4f464276719a5361fc2b37c4c0762b","modified":1601799641140},{"_id":"themes/kiss/source/css/_partial/highlight.styl","hash":"519d0b0f1f34ca0b3aa1a92eae3202c27db55f60","modified":1601799641141},{"_id":"themes/kiss/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1601799641141},{"_id":"themes/kiss/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1601799641141},{"_id":"themes/kiss/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1601799641141},{"_id":"themes/kiss/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1601799641142},{"_id":"themes/kiss/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1601799641142},{"_id":"themes/kiss/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1601799641147},{"_id":"themes/kiss/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1601799641145},{"_id":"themes/kiss/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1601799641147},{"_id":"themes/kiss/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1601799641147},{"_id":"themes/kiss/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1601799641148},{"_id":"themes/kiss/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1601799641148},{"_id":"themes/kiss/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1601799641148},{"_id":"themes/kiss/node_modules/@types/minimatch/package.json","hash":"c2d6016e2a4402236aad9fe833244c08b8359a15","modified":1606920508967},{"_id":"themes/kiss/node_modules/@types/minimatch/index.d.ts","hash":"c38ef503e0b3e8bd0b77a82893a47ef0f3e98930","modified":1515108361000},{"_id":"themes/kiss/node_modules/@types/minimatch/README.md","hash":"765515a6b68383ad928091ca95c790512d480cc4","modified":1515108361000},{"_id":"themes/kiss/node_modules/@types/minimatch/LICENSE","hash":"03e1fe6fd0bc6d73c3cd3370d5f0a73c4fcb60d6","modified":1515108361000},{"_id":"themes/kiss/node_modules/argparse/lib/argparse.js","hash":"8c53af72750678f55eaabc57d5e26056081514fe","modified":1424151350000},{"_id":"themes/kiss/node_modules/argparse/lib/action.js","hash":"f456591b0880d26b0dc01874a4253258c4603f29","modified":1478692757000},{"_id":"themes/kiss/node_modules/argparse/lib/argument_parser.js","hash":"b88a227e43de45aac073dba42666d21fb7fe5d91","modified":1475151434000},{"_id":"themes/kiss/node_modules/argparse/lib/action_container.js","hash":"8a83edbd31fe82f0e9b7c11f6eac109afbdc20a0","modified":1475151091000},{"_id":"themes/kiss/node_modules/argparse/lib/const.js","hash":"77bdd566a871b894895aae626a4a5baada8b8001","modified":1453017408000},{"_id":"themes/kiss/node_modules/argparse/lib/utils.js","hash":"a5b7106ce25ba7feed190fd1a2474b0ec3421ffe","modified":1454676616000},{"_id":"themes/kiss/node_modules/argparse/lib/namespace.js","hash":"bafd49e54122c7da05f0458457878bda7018c937","modified":1454747846000},{"_id":"themes/kiss/node_modules/async/lib/async.js","hash":"a410bed1e8c6a19be68101c293ff66c4961076ae","modified":1452207555000},{"_id":"themes/kiss/node_modules/async/dist/async.js","hash":"a410bed1e8c6a19be68101c293ff66c4961076ae","modified":1452211451000},{"_id":"themes/kiss/node_modules/coffeescript/bin/cake","hash":"800093682cd061078b68634a2940222459f7fbc6","modified":1487734948000},{"_id":"themes/kiss/node_modules/coffeescript/bin/coffee","hash":"53426d453e8518879d69c1d8925b91434ebf8f80","modified":1487734948000},{"_id":"themes/kiss/node_modules/chalk/types/index.d.ts","hash":"0030b5543edf909cd27d406622f7b63717904c0f","modified":499162500000},{"_id":"themes/kiss/node_modules/colors/examples/normal-usage.js","hash":"8da0b32e0ce469a8fbadf4d3fe93c259447368e4","modified":1434545263000},{"_id":"themes/kiss/node_modules/colors/examples/safe-string.js","hash":"60552d817643905fde3839ae9d93f7c933f8af89","modified":1416873262000},{"_id":"themes/kiss/node_modules/colors/lib/extendStringPrototype.js","hash":"cbb6181b5cbccd38a97457cf58716781fa9f32d8","modified":1434545843000},{"_id":"themes/kiss/node_modules/colors/lib/colors.js","hash":"856e1a49d90ba1d9a53bbff307e27ecb677ecff9","modified":1434545520000},{"_id":"themes/kiss/node_modules/colors/lib/index.js","hash":"55f38c877985406790f063965cb600ae2a6f1492","modified":1434545520000},{"_id":"themes/kiss/node_modules/colors/lib/styles.js","hash":"a06697bab0a191e7961b855e767bbafacb25737a","modified":1416873262000},{"_id":"themes/kiss/node_modules/colors/themes/generic-logging.js","hash":"ea9fb8f704581e751d85767563a3dcd826ead0e6","modified":1416873262000},{"_id":"themes/kiss/node_modules/concat-map/example/map.js","hash":"022a614b8d9f5ccb67b6ce1f478b1efd7aff298e","modified":1339124034000},{"_id":"themes/kiss/node_modules/concat-map/test/map.js","hash":"162cce32c23628192cef64924a1ce768af399a4b","modified":1354099176000},{"_id":"themes/kiss/node_modules/dateformat/bin/cli.js","hash":"74dbf2e8c6bbc317d1a64d8eea3aa3ae694cac94","modified":1417082792000},{"_id":"themes/kiss/node_modules/dateformat/test/test_dayofweek.js","hash":"a0846cc0fd1f2bf40fcae2c9dbcc1a5f40fd9dc2","modified":1447915155000},{"_id":"themes/kiss/node_modules/dateformat/lib/dateformat.js","hash":"2dc621400a74d68b3d76d433e2a562a82178f1b0","modified":1447915155000},{"_id":"themes/kiss/node_modules/dateformat/test/test_isoutcdatetime.js","hash":"14b08455f24a7e29d8d832d7c5d1b626df20c6b8","modified":1447915155000},{"_id":"themes/kiss/node_modules/dateformat/test/test_formats.js","hash":"13c8077c6b2020f12bb1369bb0fc1a28af71ddc7","modified":1447915155000},{"_id":"themes/kiss/node_modules/esprima/bin/esparse.js","hash":"3d6b8fda44ca6d8f347c35d442c6dd838646f8f1","modified":1483593779000},{"_id":"themes/kiss/node_modules/esprima/bin/esvalidate.js","hash":"fccb8aaa5e29849a2f8b368b24a3a33030252e75","modified":1531470784000},{"_id":"themes/kiss/node_modules/eventemitter2/lib/eventemitter2.js","hash":"12e2481da72369e2887f47099362f84f81cf1048","modified":1403539644000},{"_id":"themes/kiss/node_modules/exit/test/exit_test.js","hash":"fea2036b048caf700f06ac02ee7e5c7f9d8b7e38","modified":1380115375000},{"_id":"themes/kiss/node_modules/exit/lib/exit.js","hash":"6252a9646834bf1332bd0c5659856877e445b030","modified":1385493708000},{"_id":"themes/kiss/node_modules/findup-sync/lib/findup-sync.js","hash":"df66bc1a3a731584882ef507e80b5a75fdf8c185","modified":1442281864000},{"_id":"themes/kiss/node_modules/getobject/test/namespace_test.js","hash":"18f6003d346b34358c31340007e5806f288cbe16","modified":1385064314000},{"_id":"themes/kiss/node_modules/getobject/lib/getobject.js","hash":"377c18115d45974a4b4bc08e2fd27f3256476f9b","modified":1385064254000},{"_id":"themes/kiss/node_modules/grunt/lib/grunt.js","hash":"61a1c6336cddf1026bf389b8c6b68be71fc57b72","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt/bin/grunt","hash":"c1dae199aabfffc1d5d588d03d2229372c8d03ab","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt-contrib-clean/test/clean_test.js","hash":"7c7328553c6cb124d6b5c10e0a085fb0d471b894","modified":1373659716000},{"_id":"themes/kiss/node_modules/grunt-contrib-clean/docs/clean-options.md","hash":"f448abca640f52214e679ba0198b1e3ab0e95ddd","modified":1373946235000},{"_id":"themes/kiss/node_modules/grunt-contrib-clean/docs/clean-examples.md","hash":"321f291ac7eb4953f74557876788e6e204d3123e","modified":1373659716000},{"_id":"themes/kiss/node_modules/grunt-contrib-clean/docs/clean-overview.md","hash":"87b33d3d7b8deabf64925094163af88dfd10be69","modified":1373659716000},{"_id":"themes/kiss/node_modules/grunt-contrib-clean/docs/overview.md","hash":"a7974f178895c9b227914c4c90d07775b100999c","modified":1373659716000},{"_id":"themes/kiss/node_modules/grunt-contrib-clean/tasks/clean.js","hash":"5fa079752d19443367a39e1e5bf4b16ebc16881f","modified":1373946235000},{"_id":"themes/kiss/node_modules/grunt-contrib-copy/docs/copy-examples.md","hash":"a43e07de5a9f49242c02803f0217f25c481fbffe","modified":1363299392000},{"_id":"themes/kiss/node_modules/grunt-contrib-copy/docs/copy-options.md","hash":"eb2247a7d7635f50c19edde354f03e0b271fa69f","modified":1363299392000},{"_id":"themes/kiss/node_modules/grunt-contrib-copy/docs/copy-overview.md","hash":"1773dc725ac12c0ea3e85326d0d1b3d9e7ad3fd2","modified":1363299392000},{"_id":"themes/kiss/node_modules/grunt-contrib-copy/tasks/copy.js","hash":"8db2e37633009a0bc3567f64d2b4f7a3e7a97f86","modified":1364328263000},{"_id":"themes/kiss/node_modules/grunt-contrib-copy/docs/overview.md","hash":"45a9f280ca24504dccdcb14ab79589d8cb71d59e","modified":1363299392000},{"_id":"themes/kiss/node_modules/grunt-contrib-copy/test/copy_test.js","hash":"82ddaa9fca306ec340635e6ebb3f919bfe2b4435","modified":1363299392000},{"_id":"themes/kiss/node_modules/grunt-git/tasks/git.js","hash":"5502de5a59ab9c12712633af74f15d12668e7e4d","modified":1403249632000},{"_id":"themes/kiss/node_modules/grunt-git/lib/command_archive.js","hash":"4f7987eda505e028f7d6a6e5209441e0ef85c2d0","modified":1400491527000},{"_id":"themes/kiss/node_modules/grunt-git/lib/command_checkout.js","hash":"68950ce4b334c226652ed6f448c78e99494e6338","modified":1400491998000},{"_id":"themes/kiss/node_modules/grunt-git/lib/command_clean.js","hash":"7880398fce630900dbb3f91753cb9b604e3a19ed","modified":1398687678000},{"_id":"themes/kiss/node_modules/grunt-git/lib/command_commit.js","hash":"4c1695bf3e0f3db5df6beb65b9a2c6c8982b5271","modified":1403154021000},{"_id":"themes/kiss/node_modules/grunt-git/lib/command_clone.js","hash":"1ae7facf595755859cf2a7c07b14ddfa7f3f49c6","modified":1403249632000},{"_id":"themes/kiss/node_modules/grunt-git/lib/command_merge.js","hash":"a74d60ede815dff0c4554ae68620734b1a797c3e","modified":1403525250000},{"_id":"themes/kiss/node_modules/grunt-git/lib/command_pull.js","hash":"9223bd9dcbcc57e955c04854abd1400c8aa54d5d","modified":1394606328000},{"_id":"themes/kiss/node_modules/grunt-git/lib/command_push.js","hash":"9a6066d24606308595505a47ed560315e0df420e","modified":1400491998000},{"_id":"themes/kiss/node_modules/grunt-git/lib/command_stash.js","hash":"90623ec7342c17757f70c3f6fc3caadb77afb6bc","modified":1398687678000},{"_id":"themes/kiss/node_modules/grunt-git/lib/command_rebase.js","hash":"aa955d88c9329e31e599eed2c92bdcd821f0265d","modified":1398687678000},{"_id":"themes/kiss/node_modules/grunt-git/lib/command_reset.js","hash":"8c0df80201959704b5e75f38776b02393aa8fdc1","modified":1398687678000},{"_id":"themes/kiss/node_modules/grunt-git/lib/command_tag.js","hash":"7db9c98af4419e54573dd21bbdf9af2acdc6ca61","modified":1398687678000},{"_id":"themes/kiss/node_modules/grunt-legacy-log/.idea/grunt-legacy-log.iml","hash":"4240dabdc746a36bae8a56eeec04a3a3fc59d842","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt-git/lib/commands.js","hash":"0e1c98db9e6a65f4f86e308eed70bca151bfb121","modified":1394606350000},{"_id":"themes/kiss/node_modules/grunt-legacy-log/.idea/misc.xml","hash":"7df46872d1421797d543d0323da2e81710cc573d","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt-legacy-log/.idea/modules.xml","hash":"e075a9b009f18a3b74c25005ae91c7651409f644","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt-legacy-log/.idea/workspace.xml","hash":"1fb43e300f3b43d38cc1c7f27e4b938bad958d68","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt-legacy-log/.idea/vcs.xml","hash":"c92f3eb0ad1c70371e177a4d7d741f90af3f902c","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt-legacy-util/.idea/vcs.xml","hash":"c92f3eb0ad1c70371e177a4d7d741f90af3f902c","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt-legacy-util/.idea/grunt-legacy-util.iml","hash":"4240dabdc746a36bae8a56eeec04a3a3fc59d842","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt-legacy-util/.idea/misc.xml","hash":"7df46872d1421797d543d0323da2e81710cc573d","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt-legacy-log/test/index.js","hash":"814509b8ba9bf413763ee7df8c37d1eae5f118ec","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt-legacy-util/.idea/modules.xml","hash":"6c4ddaf6365a94c5cec4b4bf862e2084f3f90a87","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt-legacy-util/.idea/workspace.xml","hash":"bc5a6c3a98471af010a8d7867a2e667b18370557","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt-legacy-util/test/index.js","hash":"2f95a16f6bdc7745a5ead0842fd053522cbf42eb","modified":499162500000},{"_id":"themes/kiss/node_modules/hooker/lib/hooker.js","hash":"8e27b6af4c39931dfca517a50dd3bd886ec746f0","modified":1327503204000},{"_id":"themes/kiss/node_modules/hooker/dist/ba-hooker.js","hash":"f9b5b48e88a1df429688882546a074aefb67ab23","modified":1327894459000},{"_id":"themes/kiss/node_modules/hooker/dist/ba-hooker.min.js","hash":"6cf4ad3546d824fbe25f66b1ee1fd51486c85ed4","modified":1327894459000},{"_id":"themes/kiss/node_modules/hooker/test/hooker_test.js","hash":"c7413abf91cd1006681829913ce07c13df82980b","modified":1327870698000},{"_id":"themes/kiss/node_modules/iconv-lite/encodings/dbcs-codec.js","hash":"4ea89eb73a2b3cc3c0ca945280ba2783fcf946bc","modified":1534968059000},{"_id":"themes/kiss/node_modules/iconv-lite/encodings/index.js","hash":"79e395b6dfafd0ae516e18c81b828ef3de0c76aa","modified":1534968059000},{"_id":"themes/kiss/node_modules/iconv-lite/encodings/internal.js","hash":"6b0e421bfd6fa701d0fdb42fbf5a512778774757","modified":1534968059000},{"_id":"themes/kiss/node_modules/iconv-lite/encodings/dbcs-data.js","hash":"1cccef8583ac6e070e9d911760633ca8d9f7ca8c","modified":1534968059000},{"_id":"themes/kiss/node_modules/iconv-lite/encodings/sbcs-codec.js","hash":"d0c2bde053dce8027eff00b2e172cbed45579e6c","modified":1534968059000},{"_id":"themes/kiss/node_modules/iconv-lite/encodings/sbcs-data.js","hash":"b22c786c5cc8a3b58f650e413f7ade37152cd173","modified":1534968059000},{"_id":"themes/kiss/node_modules/iconv-lite/encodings/utf16.js","hash":"d3c63ce106659f00d6f2dbb40ba4dc853fbc8703","modified":1534968059000},{"_id":"themes/kiss/node_modules/iconv-lite/encodings/sbcs-data-generated.js","hash":"8ceb7540842b7fb237391ec3c324035a3feb7336","modified":1534968059000},{"_id":"themes/kiss/node_modules/iconv-lite/encodings/utf7.js","hash":"5dacc76c685aeda5c4890d5f8d8e7aabdd852161","modified":1534968059000},{"_id":"themes/kiss/node_modules/iconv-lite/lib/bom-handling.js","hash":"5c6518ce3acc35c3e1da961bc02c110e08f81db2","modified":1534968059000},{"_id":"themes/kiss/node_modules/iconv-lite/lib/index.d.ts","hash":"05c03c5e8eddf1cde570754d84084c33912bc40a","modified":1534968059000},{"_id":"themes/kiss/node_modules/iconv-lite/lib/extend-node.js","hash":"850643aa226441c0d0d9913ea5362bb85543c26a","modified":1534968059000},{"_id":"themes/kiss/node_modules/iconv-lite/lib/index.js","hash":"68ccc5b53b1b7aa66dae594ad3150b0f66d158a5","modified":1534968059000},{"_id":"themes/kiss/node_modules/iconv-lite/lib/streams.js","hash":"3982c3e4c6abe5ec4064a8c5196395067d0c504b","modified":1534968059000},{"_id":"themes/kiss/node_modules/js-yaml/bin/js-yaml.js","hash":"d8d9dd979cb7920bc3cb49825dbca749754c0ca6","modified":499162500000},{"_id":"themes/kiss/node_modules/isexe/test/basic.js","hash":"5ecbf6a46a596324cb23fdca6df539be08a4f4ee","modified":1490230070000},{"_id":"themes/kiss/node_modules/js-yaml/lib/js-yaml.js","hash":"faf3ec71c84b29e43e20adc783933d3aaf2c03e0","modified":499162500000},{"_id":"themes/kiss/node_modules/js-yaml/dist/js-yaml.min.js","hash":"a943c434d97deaf1784f07d4d0e230f27b2757d8","modified":499162500000},{"_id":"themes/kiss/node_modules/minimist/test/bool.js","hash":"a0ef26a085e4d5530ea59880049cf7aeeaf9bead","modified":1438902415000},{"_id":"themes/kiss/node_modules/minimist/test/dash.js","hash":"0fe20783b683b525cb3ff6872474ac6fd89a8b63","modified":1438902274000},{"_id":"themes/kiss/node_modules/minimist/test/all_bool.js","hash":"d5f1721995050d6d9de35c56222e578d6a2a8b5e","modified":1438902274000},{"_id":"themes/kiss/node_modules/minimist/example/parse.js","hash":"7684d952ceaa32a8c9e3cd21ba26a62e7ee14387","modified":1438902274000},{"_id":"themes/kiss/node_modules/minimist/test/default_bool.js","hash":"71da47b49e90b77c88caccb077c1bcfb555399f1","modified":1438902274000},{"_id":"themes/kiss/node_modules/minimist/test/dotted.js","hash":"edbda6ea34cff9e7dc3fe1953b72eca2f955cda9","modified":1438902274000},{"_id":"themes/kiss/node_modules/minimist/test/kv_short.js","hash":"e87208f3f2695b7de0c27e234bc4810cd6d49b8e","modified":1440424577000},{"_id":"themes/kiss/node_modules/minimist/test/long.js","hash":"f0ccd5d55358f78efbc928753264e4a32f7724fc","modified":1438902274000},{"_id":"themes/kiss/node_modules/minimist/test/num.js","hash":"6a52983a855113284f2aa9633876c1adf3710463","modified":1438902274000},{"_id":"themes/kiss/node_modules/minimist/test/stop_early.js","hash":"dc728f383a53ce9e44c9c1c21360bb7ad71d6205","modified":1438902274000},{"_id":"themes/kiss/node_modules/minimist/test/parse_modified.js","hash":"310215056f588e8c04e92f0cf6337ca28a8e0d78","modified":1438902274000},{"_id":"themes/kiss/node_modules/minimist/test/parse.js","hash":"a9672d89e1623b05aed85a4b4afcfec7fbaa359c","modified":1438902274000},{"_id":"themes/kiss/node_modules/minimist/test/short.js","hash":"2ce00fdfe4906fc504286974c143c4ced6a11b12","modified":1438902274000},{"_id":"themes/kiss/node_modules/mkdirp/bin/cmd.js","hash":"0dbed17e23d62e8dc9893f9459768531b300c95c","modified":1419626841000},{"_id":"themes/kiss/node_modules/minimist/test/whitespace.js","hash":"ea3a87137fa34c00a7d84a4d0350770e8d85ed9c","modified":1438902274000},{"_id":"themes/kiss/node_modules/minimist/test/unknown.js","hash":"b55d1e1d6ff269730e4578a108f4c340e70da262","modified":1438902274000},{"_id":"themes/kiss/node_modules/mkdirp/bin/usage.txt","hash":"682ca66d4def0ba4af814be4e6363eff5fcede0d","modified":1419626841000},{"_id":"themes/kiss/node_modules/mkdirp/test/mkdirp.js","hash":"628f2dbd4137f64e69454708ba513870b85af4c8","modified":1431568795000},{"_id":"themes/kiss/node_modules/mkdirp/test/chmod.js","hash":"ee02690748279a5bad6179dd3feeb66a48d330c8","modified":1431568795000},{"_id":"themes/kiss/node_modules/mkdirp/examples/pow.js","hash":"6d34dfc0f5f17a971dee0f5ba40eba5219bdd803","modified":1419626841000},{"_id":"themes/kiss/node_modules/mkdirp/test/clobber.js","hash":"4d00dc55c23f21600adbceb6760587b3ca861626","modified":1431568795000},{"_id":"themes/kiss/node_modules/mkdirp/test/opts_fs.js","hash":"8dd756971f7443eb340b846acee0c17cbadbcb87","modified":1431568795000},{"_id":"themes/kiss/node_modules/mkdirp/test/perm_sync.js","hash":"1759536f89220a608a3987a3038cbaaa0e7458ac","modified":1431568795000},{"_id":"themes/kiss/node_modules/mkdirp/test/opts_fs_sync.js","hash":"0f949a29099c6206e617d6e9e39cb3a41d0daab4","modified":1431568795000},{"_id":"themes/kiss/node_modules/mkdirp/test/perm.js","hash":"11382491d90f70fce17e9d183765c343c7870c3c","modified":1431568795000},{"_id":"themes/kiss/node_modules/mkdirp/test/race.js","hash":"237f49a5262bc2c668653897e8cc1af8eaa5bd89","modified":1431568795000},{"_id":"themes/kiss/node_modules/mkdirp/test/return_sync.js","hash":"ef9a789aeb65bafbbb7bceb048dc33ec24a41e3b","modified":1419626841000},{"_id":"themes/kiss/node_modules/mkdirp/test/rel.js","hash":"2488c0b77bc0419a4646c7d0bcfaaef5651995a5","modified":1431568795000},{"_id":"themes/kiss/node_modules/mkdirp/test/return.js","hash":"dc2bf5dd5eff2e6a914fc1f731f50ac887ef9d31","modified":1419626841000},{"_id":"themes/kiss/node_modules/mkdirp/test/sync.js","hash":"22a3775a59d8994c368e5574ba8ffbe19c8b8648","modified":1431568795000},{"_id":"themes/kiss/node_modules/mkdirp/test/umask.js","hash":"d08a2f100ddc37e563e548fd9f7730599009824c","modified":1431568795000},{"_id":"themes/kiss/node_modules/mkdirp/test/root.js","hash":"b034b5fdf0da3932263437d9d52b53642a2b40ad","modified":1431568795000},{"_id":"themes/kiss/node_modules/nopt/bin/nopt.js","hash":"f2a561712df0e004c712bfd6c9b0fdc70cc26e8e","modified":1447359143000},{"_id":"themes/kiss/node_modules/mkdirp/test/umask_sync.js","hash":"917a95e95427eecd9a0cb7807e0ab6ab3c653fcc","modified":1431568795000},{"_id":"themes/kiss/node_modules/nopt/examples/my-program.js","hash":"de3d4a6a7f350fd6846d3ae06334d1fafffc7054","modified":1447359143000},{"_id":"themes/kiss/node_modules/nopt/lib/nopt.js","hash":"d3dcdbce19312c5473deb7e38672a2d5e034af79","modified":1447364058000},{"_id":"themes/kiss/node_modules/normalize-package-data/lib/make_warning.js","hash":"9ab5d64a118d79b9aff4fe138d1357a1642c7d1c","modified":499162500000},{"_id":"themes/kiss/node_modules/nopt/test/basic.js","hash":"83220640df8cb4211523fca22cdbf9d1094d07ee","modified":1447364293000},{"_id":"themes/kiss/node_modules/normalize-package-data/lib/fixer.js","hash":"f7eebdfb540e7a39e1c006112140675045e2dfb0","modified":499162500000},{"_id":"themes/kiss/node_modules/normalize-package-data/lib/extract_description.js","hash":"1461754e50fbc41a07c9901c0134dd0fcd5d23c5","modified":499162500000},{"_id":"themes/kiss/node_modules/normalize-package-data/lib/normalize.js","hash":"e35e7e40659151ebe4d397135dfc7ae3e9aa8170","modified":499162500000},{"_id":"themes/kiss/node_modules/normalize-package-data/lib/warning_messages.json","hash":"cbb7b6f08a36fe523e925e39a3aac5647b22d910","modified":499162500000},{"_id":"themes/kiss/node_modules/normalize-package-data/lib/typos.json","hash":"331a67072a95f1b581795dbc3d57bf7a8cd57384","modified":499162500000},{"_id":"themes/kiss/node_modules/normalize-package-data/lib/safe_format.js","hash":"7bffb712a1c6f6e400a5835d07ffbfc9c55320c3","modified":499162500000},{"_id":"themes/kiss/node_modules/parse-json/vendor/parse.js","hash":"b7f1be3c267dfd856fe8b3877cca1621c14bca27","modified":1440511563000},{"_id":"themes/kiss/node_modules/parse-json/vendor/unicode.js","hash":"4cb780a918311cbc4d1c7ab08b1611b29c51b4a7","modified":1423609182000},{"_id":"themes/kiss/node_modules/lodash/fp/T.js","hash":"f10191c08571d40fee301d26e97240125511bb31","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/F.js","hash":"18f568c6af0e139bc63d9943f5e798fd09bf01b6","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/_falseOptions.js","hash":"ad9c0db1f5df98f88d63bd70d729417a7eab2adf","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/_convertBrowser.js","hash":"b4cceca914f9af59a7c47c384127602dce2abf6a","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/_mapping.js","hash":"0fa88f5921a98c85fb6d3d2310e8869d5daf9e1a","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/add.js","hash":"9a7af31a7389d2b2b2ada006440c4cc5c2e42e14","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/after.js","hash":"b9b375ce8fc1a7d08495feac490844967e5c6ac0","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/all.js","hash":"ca7a311804ca0107de2a6f00602710f36160c765","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/allPass.js","hash":"d6accb07bf9f23b3d0f72ce21b787618d575da04","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/always.js","hash":"d3c13a79ddd4488702c96b285bbfe2556ee67e17","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/any.js","hash":"64f468269587c745e361d31e0d8b26cb8f67fb06","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/anyPass.js","hash":"4a3f89614864715dcc36c7ee5dbb9850f6ae2f95","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/apply.js","hash":"eb2c8c5f1efdd93f4d55605df4874bea9f831b54","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/array.js","hash":"6c3a1a438a1f341a9bfbf059da2d1efd4a582178","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/ary.js","hash":"b811ed8b5b34ff86e65589b38cf22f1d7699ed4d","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/assign.js","hash":"52e569f6c7d83714506850d8174be2c3a2992852","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/assignAll.js","hash":"57a1a620f001ae55ba98b560fa7a858cebc13023","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/assignAllWith.js","hash":"404f26b37a62ce5a1e9b6fb33672e69913d4efed","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/assignIn.js","hash":"71da9458e2fdabef9d716d9b48060a12c0185afe","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/assignInAll.js","hash":"3d99977ee0df2bc32edca5ceae451a08cb43bf76","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/__.js","hash":"9c805f4d417e7a952726f3cd1d0bfa7c30cfa7b8","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/assignInWith.js","hash":"b3b0adbd4b47e963b9f3ec93335b375deca2a320","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/_baseConvert.js","hash":"74ba4f62d0a348474acc189c83fceb6a760ce27c","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/assoc.js","hash":"3cd42a8269c6339b7a9eb3bfde6a404ac4a01dde","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/assocPath.js","hash":"3cd42a8269c6339b7a9eb3bfde6a404ac4a01dde","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/at.js","hash":"615c43358bc89d4eaed242300b9fd77631f72443","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/attempt.js","hash":"eb059364d0e518867b8fe2d4d9773ca481f80b15","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/bind.js","hash":"5620199ffaf7354deb17332bd96d023ef93a7563","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/bindAll.js","hash":"2e3944394c315756627aab74b8ce3cebab98662a","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/bindKey.js","hash":"8884ec3af184de8a5f20829f6eb5fb6ea459582b","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/before.js","hash":"c9fbf0e49c14385711d6335cb1dc0d6e09f3aea4","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/camelCase.js","hash":"8eb598ce4ff5d309c2ab8fb299f41df23c4cd308","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/capitalize.js","hash":"101f5c2148a579105036a5cdd25b4193812f64d3","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/castArray.js","hash":"ab5ea04ba48ee2920164fadb8b78d8a03f1cee6d","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/ceil.js","hash":"0539c156c827c85dd682ece5986b9f7bac19a097","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/chain.js","hash":"c85611a5e7da7d0aaf29a45bd34130b56315199c","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/chunk.js","hash":"63359d1585edc86fb70c74388c36e0a96e16b96c","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/clamp.js","hash":"d10d4fb46ea8518851b6578ef67dde23b2a9b013","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/clone.js","hash":"6cd53703b2949cbee86ce6d708942e248afb8b4d","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/cloneDeep.js","hash":"179860c9bdc495da2f5d8281fec35077b2f2b216","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/_util.js","hash":"5fbff66b69ff1dbdde5f1f64e9965ba5f63ecc94","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/cloneDeepWith.js","hash":"365d2b00fa2e722ce8c60b0605bf3af06c6ff454","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/cloneWith.js","hash":"a303da7355a2bcf3314b47558b57c8e3b235094f","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/collection.js","hash":"75a23149e229dc1435bbddc870542ac1ff298f91","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/commit.js","hash":"2b2f58504601fed318dd5f6ef943a873018195cd","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/compact.js","hash":"b6603e874a29627153368292851fe987f5462bcf","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/complement.js","hash":"db8673391fb52d0d4682d80065e5f82809a3292a","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/compose.js","hash":"ea122818ed87e1559af41edff0f2d2fa54319b9a","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/concat.js","hash":"64240c44714fa5369fc4092f00ef58caced12344","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/cond.js","hash":"c5bcad894a249463aeabed85ac3d3e7474455533","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/conforms.js","hash":"03fc81a616faf63ab5d5097dc6ec2580e8a32fe2","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/conformsTo.js","hash":"fa5e2fa22ac3442d8ad5b09e3a6c0959316431ed","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/constant.js","hash":"109c49b151baa999c023e7934b4223e0fe3d84c5","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/contains.js","hash":"cf59973c08cea72d4b25f223aa3c30e99fde8e55","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/convert.js","hash":"5e125cf746680131339a8ab7f41d917bdccdf356","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/countBy.js","hash":"52e5e9e4b6064c30131e7f678551f23f8120cf0d","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/create.js","hash":"7fdb4d9dfc8e2b4876ec6b47b9b32fa37eb1aa2c","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/curry.js","hash":"ded1e6452bc77478e51a4b9a7f8f2eb9c07d1b03","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/curryN.js","hash":"13f2d44be73b0df20161c72c0b77b69f8bfdba39","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/curryRightN.js","hash":"919ca15f73c98eb40bfddd2213edff6a8992e2e4","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/curryRight.js","hash":"333b1a096341c2552aae7af172dfc6b1aa2d68d2","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/date.js","hash":"bbf85ffcdfc83df6d5c24c84b03ca937f9796257","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/debounce.js","hash":"c702651f3d6844c12c8e7fb2d2d07ee898f3c78e","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/deburr.js","hash":"b4aba68c497e84459d6d9739d71b0f1a3bb7182e","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/defaults.js","hash":"0afcaa5650946e068d13f298bdcf3e185f5a1f07","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/defaultsAll.js","hash":"2006e77adc3f6e20fc16af80af1a26d166d14c07","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/defaultsDeep.js","hash":"6eea71a30ff427217403c02e6721e6bdaa0de604","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/assignInAllWith.js","hash":"47ae8b9efcba88af49e9a58fa2a5b7c35813cb7f","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/defaultsDeepAll.js","hash":"ee6d0af3f9942f2314c2b6fc2f283debd885fe36","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/delay.js","hash":"1f6a34ed80e76bcfa748c686fbc67488d0164d78","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/defer.js","hash":"49b70a2e28eca9a02a89437582cf42c165dd2d05","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/difference.js","hash":"13ba75b75ad25ad44bcfcc552dd0fe00114c13da","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/differenceWith.js","hash":"290648f706217284bb229fc0957d21578b89b0e2","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/dissoc.js","hash":"4daf52a97c16d6624e3e1abfa4d0b8d8d2362add","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/dissocPath.js","hash":"4daf52a97c16d6624e3e1abfa4d0b8d8d2362add","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/divide.js","hash":"86636acadd06d91f809acd2c1d31cf780caa8649","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/drop.js","hash":"2cf18a3172602551b9950bf4b21ef23b07f5c8e4","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/dropLast.js","hash":"297bd9ff4c5ed9fd6323d3ce10286936be549bfd","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/dropLastWhile.js","hash":"3901051acf9fea300dfe2961fcc31890adabe4da","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/dropRight.js","hash":"e8beb9bca520499fc14e793b6e8f7a428d197bb9","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/dropRightWhile.js","hash":"779915c003cbb1a9643965f284858729bc032b6a","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/dropWhile.js","hash":"3d82fced32a443d92d80485508cd79c34b0a0ac2","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/each.js","hash":"dbfc772ff0330e9d0bb2ee704242e67b0435929a","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/eachRight.js","hash":"c7a90b0a7bec56aea41c7569a652ebf17c20fde1","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/endsWith.js","hash":"1e2c542c82f7aefc5fad986136445a7a4425e145","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/entries.js","hash":"8788b9edcf643acf20e434e5894d09fb18742112","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/entriesIn.js","hash":"995c6287a9c5f6641931c966de331b5521f63d3e","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/eq.js","hash":"e22365568b08047e550d002e351cef842cddabbd","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/equals.js","hash":"735240597ea9393397bbd638934ebfaea4f6b2c8","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/escape.js","hash":"68a5b97faa5723827ef59f065101bbbe2556e6bd","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/escapeRegExp.js","hash":"2a88b89297d34797244d963f2323e59a7c3d4d31","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/every.js","hash":"0499e846512778b49de2da8574e81f21dbd3ca40","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/extend.js","hash":"79bb5928a674d6122686fc0df5a28f00b22d4d0e","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/extendAll.js","hash":"33d62f7192821133af2eb6ed064b6dcd173a13aa","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/extendAllWith.js","hash":"1d2dab39cc17f3beec2cbdf117837509ca72309d","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/extendWith.js","hash":"fe394cac415eb0a6518371d1b95e08144a682526","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/fill.js","hash":"783c4109619e522701ef2956d070ec6f94ebb258","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/filter.js","hash":"7f77256838b2435ebf7539e186cce009aa54c1a5","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/find.js","hash":"86e525b8931055cfd1dbed74e13e649b39e8fa6e","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/findFrom.js","hash":"7a92981afdd815aa0d39348b752306abd7697559","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/findIndex.js","hash":"6dae88bc0ea9a1c2ceb6bed27e6fcc1a993795cd","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/findIndexFrom.js","hash":"61e3f312582261bc44d36fac85ddbe6f11f26a30","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/findLast.js","hash":"a19b3954a423f675b6e556a4838d45a28eca25b1","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/findKey.js","hash":"7a3a8649e4119245549d42a71a20752a7a3258bc","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/findLastFrom.js","hash":"72d9c3ee81778f2f3be72594451a11c7ece2e35b","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/findLastIndex.js","hash":"25b3d6da9b75a73e37d908e0bd1c2c071eb81def","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/findLastIndexFrom.js","hash":"077ebe8808fe2fe62d216b354af30236aa471903","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/findLastKey.js","hash":"d71353c58b59d98cc7d909a543f8f49ace63bf10","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/first.js","hash":"a2eac20812e95b557a5bc11dab060163fe1133d0","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/flatMap.js","hash":"1b0399b113f8f036d69c78626ffb7fdbd531a452","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/flatMapDeep.js","hash":"68eb25628604462da50f41131335e5bdd79dd931","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/flatMapDepth.js","hash":"04d4e92f43b87d2f5504ebfd7d095c0421322e6e","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/flatten.js","hash":"93940d34c59306c75e8680b2f54a9535f1eb56fe","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/flattenDeep.js","hash":"3d4a37408b913e82d947aa842b984fca60b9dd0d","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/flattenDepth.js","hash":"c606dc88f1ff4ae80ccb61d0e293d46f53e687ba","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/flip.js","hash":"e13e97806d2757e3661b52657b0a81077bddddcf","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/floor.js","hash":"a7a4526f7ffcc6fd12b5805cc687f5e31fb41152","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/flow.js","hash":"b1fa8a6738958fb2b0f61f55670e80e72b37f3f6","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/flowRight.js","hash":"ba997b9952e847801199c2767ee07ffd64c4810a","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/forEach.js","hash":"fe364b04d37562751d1e68482ddf6a7808156916","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/forEachRight.js","hash":"fd98cd06ffb50506eacfab8999a3cc06d2c646b6","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/forIn.js","hash":"83e5d965ee8ff794867c6c8a2e01ca56fe76a15b","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/forInRight.js","hash":"3f48c8bb263b1eb71cbaf4ad9d2606b3656f8a83","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/forOwn.js","hash":"60ef3e46e036d39572320f2c6f7601881ca41955","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/forOwnRight.js","hash":"5e5befea43de625a990a571cabcf5545f7ce1ad2","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/fromPairs.js","hash":"1e7734eac86bf368e7d1bf63ca1657952b20f13f","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/function.js","hash":"c7d47f84639e315320f598f32c3a8f8dc8b0a724","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/functions.js","hash":"82f6797b95c815f8082611ca84cffad654ed7ee0","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/functionsIn.js","hash":"8b79a911c832b5683868fa56bc7c6cdaeb4d5e88","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/get.js","hash":"27edd6c7c585dcd0222c1cea97765e5eb1c52925","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/groupBy.js","hash":"28032f75b908231d97cfacc99fc04ff0a3f22e65","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/getOr.js","hash":"423682307e027ac900a0cc83948ad83b19c2fca1","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/gte.js","hash":"d6e1cf7bd2d03d198791afb3eedae8323b06c262","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/gt.js","hash":"36dfa14d07d98b751b8d37ba1ee1e64c64971161","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/has.js","hash":"20fd58ff42e0550eb9f94e183225458d52436836","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/hasIn.js","hash":"c9e75e41b1638417c4d1f9101c43469032522afd","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/head.js","hash":"886dc89b060616ea92340f7d68bc946f058e8c2c","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/identical.js","hash":"40efa57b258af781819e8bd050c32583837184b5","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/identity.js","hash":"59c993b05e7ec2f4653e4bc55b3025dcd5ca2f13","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/inRange.js","hash":"57145747d9c73137b76796e00ed79263c9049c14","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/includes.js","hash":"c5b5262c60578989e7569a4ec24c14c22af9d4be","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/includesFrom.js","hash":"13cb72c249c72145915615e75617f529d36ad4d6","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/indexOf.js","hash":"f296c1ad76022ce01e1f733136933820a2744cfa","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/indexBy.js","hash":"c4137629ebf66269744e84038e8a5c02084d931c","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/indexOfFrom.js","hash":"a9af522fbc2eb5a6727c604d91e8ffc21198f5d4","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/init.js","hash":"22ffae77010a1ac713f0326fa468621c3ab83a2c","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/initial.js","hash":"345cc5bbcd2fcb19a0d5e3ba7c44dc8d4bb85be9","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/intersection.js","hash":"1391dbb03a7ea4de5e8c8a937667c5b2f58d3b28","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/intersectionBy.js","hash":"c5f67ae844b3c57014cf4ca6878fd805e7a0c7d8","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/intersectionWith.js","hash":"f264dacabb5c65b41cdb9301fd281252ceefcd45","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/invert.js","hash":"fd7502e8c46743d84540d1f6e83e3e70e4190812","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/invertBy.js","hash":"f23b5d7017a48c8757e9e02f8e9198de8af6f181","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/invertObj.js","hash":"f2acc5a6d3985a3d717e180810fc8da4b70eda6c","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/invoke.js","hash":"af082b901fb05e5ca0b8c366f2d91c1a80a02fd1","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/invokeArgs.js","hash":"fae0d54f2a10c1da45de1894b3a854b2f42f88a7","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/invokeArgsMap.js","hash":"9cb53649858eb1e33827cc8513c16d9e7363d9da","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/isArguments.js","hash":"675c9c3ee2f01b2ecbbcaa9637bbccd65f89d943","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/invokeMap.js","hash":"e53c69c9c4a6be115fea0a3574c4d1255bfe5428","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/isArray.js","hash":"45376d39c70fb04bc0cea0bdda3b1998d0c76b3a","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/isArrayBuffer.js","hash":"6d6c14aae84e1662f0fbac87ff49d1dc0c568444","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/isArrayLike.js","hash":"f6ef38c98c8344533e90a2212650cf936ce808c1","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/isArrayLikeObject.js","hash":"4d053b5fbd0477fe770249346cbc0bcfb37a6219","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/isBoolean.js","hash":"b91a773b54bd4822f9c23bb88b139b67f4f1eafb","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/isBuffer.js","hash":"192efd2ec17cbeeadc1e68b893e504b8b14afcaa","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/isDate.js","hash":"ccd1b64eeefbb7d146ab6294c52aeec2ad1a93a5","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/isElement.js","hash":"41b8187c0a4dfb59cdc5c939f1b3a68d674e7048","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/isEmpty.js","hash":"517aca0c6b7b51087db094f4ff1ac06bc50c765c","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/isEqual.js","hash":"e143e5a19f1ceadc7a6d93d5bc95a4e62b6be530","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/isEqualWith.js","hash":"685a3ecf2190a5656547f3a62fd8fc0c4fefcad4","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/isError.js","hash":"03dabdbd0e30796a8bdc2a341394d329a461a9d2","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/isFinite.js","hash":"79c3ad8c8702d1aab54ae80ea400d5f73ae49dc1","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/isFunction.js","hash":"a5644120eabb397e67c38922ffb9b87d22aab5b7","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/isInteger.js","hash":"b30a8a902259cad6f2300f7b06d3f2bc3975f34e","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/isLength.js","hash":"6aabade08bfdd6e8bb07e28225629c419b5e8c97","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/isMap.js","hash":"c2421f5389375dd9697de826b777b3d99c8e833b","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/isMatch.js","hash":"ea5bb01a981706a79b547149e5aadb39369967ea","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/isMatchWith.js","hash":"0afec1beb71c2424691fd4b4dcb9100820374c26","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/isNaN.js","hash":"c607c72d2d7f67fd2da46ca370acf5e12a024e44","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/isNative.js","hash":"4dc770dd04ad9f97aad0b764d876375aad3c8a9e","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/isNil.js","hash":"00960af435b0e8ad04bb1fea65d6a30ae8a61d06","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/isNull.js","hash":"dc555ce657002d169ecd3f2af155b6ddd64fc6f7","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/isNumber.js","hash":"6caecaae0ff0b438dbe62b2a814b14db80c6afd1","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/isObject.js","hash":"ffe7fe0c07a623545dedbd0c45ec219e3745cc99","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/isObjectLike.js","hash":"49d650f710d56de004f9adb20ad8cf1b61f26554","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/isPlainObject.js","hash":"14b52f86eae7bcbe9d5f0400377d9315a588bfef","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/isRegExp.js","hash":"fc73a7faaf1e7ed7821d0600676678cd495326f0","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/isSafeInteger.js","hash":"e570e129d68bd49f8ba775f6b85ed596c4a96fbd","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/isSet.js","hash":"7c2c1be0d45c657157fe1ba88986a6b105c0318f","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/isString.js","hash":"512ad2c4610306d11bb3bb3491f53abd029e5ea2","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/isSymbol.js","hash":"d374ee1761cd7c88e18c0d89797249ad5848ddc1","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/isTypedArray.js","hash":"370900f84ff88e22af1153a209583c2bf6fc9415","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/isUndefined.js","hash":"0022a9050a33a2d65905711d005042506bc9abad","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/isWeakMap.js","hash":"2d9fb05f212d14e0ace898c6bab8563582d707cb","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/isWeakSet.js","hash":"00837472f9eff86d2ffecbc9b54ed3605b3c72da","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/iteratee.js","hash":"5a57ada3203e3a1b57b61923cda5737bc5bdf7ed","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/join.js","hash":"3ef2d8c47d359b75da09f77c3fe2266508d4f021","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/juxt.js","hash":"19b5b68440238c0945975ba74e5a43d633a4cb25","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/kebabCase.js","hash":"8c4c6c334759ea0ecf4b1529287aae9fb187e47d","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/keyBy.js","hash":"623811ac634d2ea4518def1661ebcf95b0201530","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/keys.js","hash":"5e7f14bc64715f1731977c278b871574eb7796dd","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/keysIn.js","hash":"8e6ccf89f46ff56b75f2b23f820112e0982845ed","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/lang.js","hash":"62dc2db0a784f758cb9347da261f8089d1df95b7","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/last.js","hash":"482343e9c2122718717131d20ff454537bc3452f","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/lastIndexOf.js","hash":"34238beb4a520fcdcd9c46854d6dc7bfbcc1b5f9","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/lastIndexOfFrom.js","hash":"2206dc50977fb1f15fb7ddbce38cd8adcefdc0fa","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/lowerCase.js","hash":"10a1cbec9a77d960a0c2b470450877fe4596bd02","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/lowerFirst.js","hash":"e496119d716f19967b0070c7ec9c03d28b919122","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/lte.js","hash":"4926168ae6c4fe1a9493b20ddceb81f5ffef82a9","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/lt.js","hash":"ebbdda9e5136aca682159edb9a951257370bc6f4","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/mapKeys.js","hash":"ecdd3cd7edca30157bbb0bc2a3cd91058dc75199","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/map.js","hash":"b353305d3741738e30ccc46b96421df43380d99a","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/mapValues.js","hash":"15803c364129828e85167dca814187bd2ac879c1","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/matches.js","hash":"95d70e584abab7e886e137823be0c719bb67ca2e","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/matchesProperty.js","hash":"73c7321e05c3a79d869afe876a64ae009d8d3da0","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/math.js","hash":"dd031d6043c326be2e5c3a8b3a4bd728bc74650f","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/max.js","hash":"72e93ed6cc51a6bb7ba5131cffbc4ed64b0d5148","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/maxBy.js","hash":"9a5c1f5cbbb6375b8f314d5c3508854a76541613","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/mean.js","hash":"73e71b6ebd607cc99741a6bd8a504f4b2d753cb3","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/meanBy.js","hash":"062613f280d0bed68bb11a9999721c0c90730c6a","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/memoize.js","hash":"d6bd34e0088a0f017e8c36785c6cb79450b2e0f3","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/merge.js","hash":"087b5cb62cf464d2154b378d4a79fceb5987966f","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/mergeAll.js","hash":"e9d2d85cbcc2a728e6baf932d05f053901f0a7e7","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/assignWith.js","hash":"d4a0c3092be5c92abca026002a322407a1e12f2d","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/mergeWith.js","hash":"061bbc4f62c653eb99021e78accc7ae915c3d8a0","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/defaultTo.js","hash":"39bad3a9a0314e20e1fcc52f2c7c1711a796754d","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/mergeAllWith.js","hash":"7ed92253b45294795a4bf5e6fe8d5f716ad27b99","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/method.js","hash":"9c12a91f85dc26106523d5662166b6ee0056dd14","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/min.js","hash":"e0a8670ec5ee7da49ea872f9eff2d5ec5bb5c1e6","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/minBy.js","hash":"7c81c5d5a852cb0ece8e3026820c1000d6ad10f5","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/mixin.js","hash":"bff01db6635beb3588b48b53aa0b83d92430f62d","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/differenceBy.js","hash":"55c72db5c42636b2f5824b45979834483161d817","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/nAry.js","hash":"bc98ebd544e4def682ac61ff204c16aba3b5a227","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/next.js","hash":"ff0900b4e5fdd889ec980c50e5e52d05d469b9f1","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/noop.js","hash":"dd608cb4eb01d202042edb374958ea37494d0ffc","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/now.js","hash":"e455b0b859454a7852eeef13a2a7e2a26ba00502","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/nth.js","hash":"3cea03c8cc79b44fe085d53b73c2160ccd302029","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/nthArg.js","hash":"14cf05b970cf3ce3f5878e4396db31f286dc1653","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/number.js","hash":"56db9afc452bfa9338b206bf092497b8652f61f0","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/object.js","hash":"1f4e289be4a66881114caa5198b881b1f16fd4de","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/omit.js","hash":"b9a90a8700d55718cb1a3d68b15223d0b9d7de61","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/omitBy.js","hash":"1ae512e4ff2af4984900b15292137fcc10161589","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/once.js","hash":"b6d33d5a9c4379ef7e1c46b09f9c865ecb8603bf","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/orderBy.js","hash":"7a17f923611248c0ea7086507bf568a043b98129","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/over.js","hash":"51db6346f35cb56c4ceff448ce83bb4b0529dd47","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/overArgs.js","hash":"adcf40dad62a1c856764978731537f30889b1c74","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/overEvery.js","hash":"3442bc9336ab31d30983323ab9e88f628085a1b1","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/overSome.js","hash":"7de036f2f58dc0faecaf54be9adea63226aad560","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/methodOf.js","hash":"d7ca6c11064364211c6b7f7fa8465377f2a07342","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/multiply.js","hash":"373b10cb68541026463c91d41901e052f3587044","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/negate.js","hash":"1503b32cfd9bc78f575f865ac3984bbb3dec2695","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/padChars.js","hash":"4c63a99952765c19e7858c17f18da7c6612c35a7","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/pad.js","hash":"383ad74a3c1d0de2b6ca0304eb1d1faa4bc5bd0a","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/omitAll.js","hash":"5c3a9227c6f9ddc785688becab205f8e912a9668","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/padStart.js","hash":"a312c6f78be12857bd315385eebcc8eabc67c1e2","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/padCharsEnd.js","hash":"07914fc0fb8ecc33d9611986519b7c6607fe455a","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/padCharsStart.js","hash":"5c7255195a70d48bba88ed00ac177d59c02e88e6","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/padEnd.js","hash":"4aebe4522188368f563e7e72b2549083b542331b","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/parseInt.js","hash":"9f69cbcb1ac43f1e3e7d6cc58efd7685fe4a00aa","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/partial.js","hash":"f2acb8a2cc54f7e90ae1cbca437be0f9c8bc4d68","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/partition.js","hash":"205607a8169b9faeb2b51b0974805fb3cef84b89","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/partialRight.js","hash":"bcf63208bf8072ae6e7ff226467ec45fe20b7ace","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/path.js","hash":"563c5eb1769785a3350bfd1cb2b4e090a650c994","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/pathEq.js","hash":"2449e34c17552d94cd719c23e1ffaee752b19a49","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/pathOr.js","hash":"8453669dae1bef8fb6e22746d8c5b09e21705dab","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/paths.js","hash":"6dc80a19f4b7e95104d76ad38cab58672e823c41","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/pick.js","hash":"7818ee7a56a4493a25f0262b42226a99b5ea4e74","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/pipe.js","hash":"9a9cf735bad407cdf098744f528e907de4b8f8bd","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/pickAll.js","hash":"a24ed77399bda55b6c76f52a7b2d0318e15e9d53","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/placeholder.js","hash":"d211b85c131bc2d7c0230fc611c2f88d1aa1ae62","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/pickBy.js","hash":"7e90e85df68c3e5ed8e18b36ef2f1033f9c192eb","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/pluck.js","hash":"56c45930b2236d7778657a85d48fb7c709e3010d","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/plant.js","hash":"909ca1575840a93993b0cac28834173e1474eb9f","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/prop.js","hash":"563c5eb1769785a3350bfd1cb2b4e090a650c994","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/propEq.js","hash":"2449e34c17552d94cd719c23e1ffaee752b19a49","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/propOr.js","hash":"8453669dae1bef8fb6e22746d8c5b09e21705dab","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/property.js","hash":"563c5eb1769785a3350bfd1cb2b4e090a650c994","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/propertyOf.js","hash":"a0309506e91e32300edd07989a6765ba76469785","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/props.js","hash":"6dc80a19f4b7e95104d76ad38cab58672e823c41","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/pullAll.js","hash":"9d43ec3e85737776d1cba4dd43dfe33dcb691213","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/pull.js","hash":"e212c433d15f9e4aae0c7b7472df7478dce59826","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/pullAllBy.js","hash":"82df6feed00d7586139b8d19babff6a119d12abc","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/pullAllWith.js","hash":"a4c03d7ae4b54c96e5050bbc7421bce119aed17e","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/random.js","hash":"c9cacb8c48422049484d1b43f3e10da43f54fcf0","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/range.js","hash":"c30a51ad9b00e95df9e8d84359393789adff6f70","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/pullAt.js","hash":"e64a22662e4110f3a7598bcbb20c3444ace05733","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/rangeRight.js","hash":"87d5bc191b63a837147e1a06ff573017932f9956","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/rangeStepRight.js","hash":"2706912addb4a0f3cde29fdbc07e8e6efbca5022","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/rangeStep.js","hash":"8bb13a69dce53d8cb160b155579da0e6167551f0","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/reduce.js","hash":"7607f41b09579aa65dca0224fae135f2a7bd90fe","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/rearg.js","hash":"d5b08395ea2c22d24207c8e80e19a62b8b68d49b","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/reject.js","hash":"f24c316dcf99cac19664e5f3cba90bcb7928ef1c","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/reduceRight.js","hash":"db8224e00025bde9179b073a6aa8aaef52cbaf6e","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/remove.js","hash":"f6c76702ae01ec215d972d87850624d302a45b9f","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/repeat.js","hash":"7af31ea1d388664c134aeff68f0d5cb72297004a","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/replace.js","hash":"f4cf1769a167cbafbca362598669cee3b2048b03","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/rest.js","hash":"a860492108f67bef2af79852208f2dfd4f541d7f","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/result.js","hash":"e805c5972b63deb60f49d1513e570ed116a864b5","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/restFrom.js","hash":"7658cbf9d7d17aa68e24ae89e087b1f1f82858ac","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/reverse.js","hash":"723596c407da9faeb8a6029ef74e42e97bdc6be9","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/round.js","hash":"39a12f5a5a3ec3058dec8aa5118425b16d070281","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/sampleSize.js","hash":"fcfe74bb18b06d6da53495935d23a7600f9b24f7","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/sample.js","hash":"2d93d3727f92362eeadcff288c3a8a733d023740","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/seq.js","hash":"4fd21585867c1b120e02b78852d98320ad8a38b2","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/set.js","hash":"35767c3a9b3e46a963c7fcec39391fa87136861a","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/size.js","hash":"3fb55f18bf4ff0daea2c053a54a53c2674499e45","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/setWith.js","hash":"c5fab5be851b87976674b1459d61b445d0d5be14","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/shuffle.js","hash":"2d110e1a05b0780b5ad4159ea18a807f7ea1e505","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/slice.js","hash":"ad400dcd46e81370daf0ad7c745ea1ab58df49a1","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/some.js","hash":"0ab071ab57a97cb20b860f9125f2d3f1f131f833","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/snakeCase.js","hash":"d233254a26e81ab2a81fac31c48215d4b0b44adc","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/sortBy.js","hash":"bbfdf129dc3ce45a017989b1b825542383812b73","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/sortedIndex.js","hash":"04be86485281acfc53118491293043d70e3a7f2e","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/sortedIndexOf.js","hash":"70b13a8537667e2fcfeba4993992875bdf8ff864","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/sortedIndexBy.js","hash":"47138204798bfa0b43928340b12bbdcff317f60d","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/sortedLastIndex.js","hash":"d6598c35bd7fb8887fd6fdbdcb8b18befa6632ad","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/sortedLastIndexBy.js","hash":"e53794520cd5b3ca6df2ffb977e0e6b7a5f9502c","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/sortedUniqBy.js","hash":"dc651f780172d66beef630e5c50c006d9fba50d3","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/sortedLastIndexOf.js","hash":"94fc33bdee1fdebb80f0b00d195eb4a13bb926f0","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/sortedUniq.js","hash":"8e361b43dd485f7aa5971e947939324cda143dd3","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/split.js","hash":"e785df2f7e7764f1bf518b872bc302679b505589","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/spreadFrom.js","hash":"30b843077c519cbe18ec47e2ba9685f3a37e19e2","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/startCase.js","hash":"aee3f36ca72d7fa30de64c0541e80b8ce2d729bd","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/spread.js","hash":"347036d4ea05dea39b09f20275d06e8594b55ccf","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/startsWith.js","hash":"73df7824ddaf5d8dbcbfb2894234f8e5f4214497","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/stubArray.js","hash":"dd9b5ab21a9e90c5c2d33af270b15bb3a0d5a160","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/stubFalse.js","hash":"74f54c09c21a95c6e2168df204016afb1da85c08","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/string.js","hash":"3a30865f86edf4dc3baff7567a894bc6f280a654","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/stubString.js","hash":"493b8cce32dd2d2f0915c335941afd8a2030c59f","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/stubTrue.js","hash":"7d69609e3844f8e596fbdd77e68be6352240ef7d","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/subtract.js","hash":"f76a659ba3d7724c8e4ff6049dfb6cb17627ae41","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/stubObject.js","hash":"3c5521da1935e4b266a480fb8c2240fc2e572ea9","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/sumBy.js","hash":"73e4807968a99437d8168517ac9fd13ceeac5886","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/sum.js","hash":"430189ab2c6a23195cb8ea5111921794b9175ebb","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/symmetricDifference.js","hash":"c1db644f2796082ce8c1445f0788558fbd4a6ce4","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/symmetricDifferenceBy.js","hash":"8cee02add02dca3ecabeeb07632dc8a2a1905e23","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/symmetricDifferenceWith.js","hash":"129d57b15724b6e3dbe5a83af781cf7e9a74bffa","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/tail.js","hash":"4515c52305fd72e45da2ac90042e05c2215178a2","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/take.js","hash":"f9dd7f687a04982ac7aad57c525d98b1c3ffd1fe","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/takeLast.js","hash":"ac465095bcff9ff29ae8337a6d86a7658bb67196","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/takeLastWhile.js","hash":"88248a7d663078cb48e2ecfc912a33ac3b097afa","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/takeRight.js","hash":"eed0e281c0ecf99c20f5668ce9e0dd154e45ca71","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/takeRightWhile.js","hash":"b090924faefdfd4a31e25c54931f3b46f61c8203","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/tap.js","hash":"26ebee1454a84078cc66c9acb6c4844a5dbb6223","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/template.js","hash":"ee7becfdb63a3d9ff3dda057f1a9caef3a814554","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/takeWhile.js","hash":"072405b57aebe0b9a274eb3709ecee82226092b9","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/templateSettings.js","hash":"b9a7dd2e08852490ea86ed35b1e7469482c2bb23","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/throttle.js","hash":"93c605d12d488e2ea9c6e6c63dbf42a538c66146","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/thru.js","hash":"e93cff48a14c89ca44d3cf7b14dd7ec275dd53ff","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/toArray.js","hash":"f47d0cfbc5a869b78087164b18237c5448f21851","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/times.js","hash":"216300e9d1f02445f1af5f8c8427f949133b75a1","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/toFinite.js","hash":"3a63c6c9616bda4574b31fe27ef369c01cafd6c8","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/toInteger.js","hash":"1a1797465c07599f7abc0f8430e46cff38d50986","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/toJSON.js","hash":"7ac9ef07def4a64b062a05e942d3d110e3492ec7","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/toLength.js","hash":"7d567f44a37d6a32bbd5a3856d011d71a9665f5e","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/toLower.js","hash":"e0fb8417621f54e54d3df261d1e873438502ed70","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/toIterator.js","hash":"961722cad23f72206b6f7d83e054c271b6a2add4","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/toNumber.js","hash":"3f6ed987b363575f5f35f6189b144ba3d907eb43","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/toPairsIn.js","hash":"407a3784056e15bba952ddd7d835aff27eecc673","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/toPath.js","hash":"d5cb075719634a9c336bea31d017ac20389c044d","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/toPairs.js","hash":"c28dd8a85dfaf032e5db9c1ae75da809d8527223","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/toSafeInteger.js","hash":"fa9edb660be230da19a83e120f48052d9ee5400b","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/transform.js","hash":"932c1b9f13d1e4892db0ea9eefd4902f843f74b4","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/toPlainObject.js","hash":"fa912ce1e006d37f4483a53391271acb71692997","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/toString.js","hash":"70b8676332f4ca060ba84f05a9bf101749fbf3f3","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/toUpper.js","hash":"4312523e48af3aadf918218214ab329523305334","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/trim.js","hash":"f57135b04ed9e9db794f75b6b47b328440f06922","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/trimChars.js","hash":"28eb05ea233dc6596ed3b17a3684c7225efa82be","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/trimCharsStart.js","hash":"8415cb22cbb73b5fd101e360400bf6182f4d488e","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/trimCharsEnd.js","hash":"c2d9c19c69c5e695022119baabadaa64ef02414c","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/truncate.js","hash":"af7ab1a8bcac66a7504359d2b2625b0b4bb6445c","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/unapply.js","hash":"936c484aca78852157be00e7b5cb71da6f747bfd","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/trimStart.js","hash":"50c328eddeec91b92f4eb516edcc78faaae87333","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/trimEnd.js","hash":"a9f669bd68b6fb04ca71e18d5f2c88805ec7d61a","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/unescape.js","hash":"e91a70341966dbafb94a8d6fc723f23f3c3a31a7","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/unary.js","hash":"22e12bb090f8f305fb360a2372d87fcd9467399d","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/union.js","hash":"8e1193fe25429e87a9cd2e4a29dbd279c5decd5f","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/unionWith.js","hash":"c48bcdd3435f2cf4a650d30608cc929712943578","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/uniqBy.js","hash":"4111e9001db74d691176ba3e02af5527a4a77ed6","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/uniq.js","hash":"54b58010d1988f7a6ec28dc4a2df2205e83029ae","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/unionBy.js","hash":"139742a9be22d7eb2195e7e7182d87a912936e2f","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/uniqueId.js","hash":"414c720c8d11aeeca6b05cccb6deb16a0f27c943","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/unnest.js","hash":"3d20beb0655413d13c2c55fdc3ac06013125edc6","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/uniqWith.js","hash":"af2818a584a4317e5148e52222afffa0c5fee59b","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/unset.js","hash":"401e919462b8e66630dfc74e18796fdfa62ba6a3","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/unzip.js","hash":"29cd397f4baa016f6e6d1c8fc4326219106896e9","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/unzipWith.js","hash":"afc880fef61b32bc409f3a9a7359d755cdddf83b","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/update.js","hash":"a7d197f6473f8a7a38c00acc709f53481c545474","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/updateWith.js","hash":"9dd189e80bb45da43b4076a1643a45c69f8cf1a7","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/util.js","hash":"0724cd943bdab0b6bac86e7ac14e815e5aa1d9ed","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/upperCase.js","hash":"612a73d5f39d6d5a6f3c3b80ec89a6377e2e3c4a","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/useWith.js","hash":"992d0f455bb3b824323580e322a9c79bd378d0c6","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/upperFirst.js","hash":"084545106fd93e9acff00c4401918ed9054d55e3","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/value.js","hash":"e2d89ba1db613274b31d1d0fb1acb503644ad2e2","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/values.js","hash":"97fd629e19d9740fbfc87a26f86a259bbe7ca7f9","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/valueOf.js","hash":"a2ea35c715e7b3b68051a38cbf6802b29370d975","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/valuesIn.js","hash":"b7b2dd2b81111cce5adfeeb45254a5372e6c28f5","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/without.js","hash":"2599adcc37dbd771a16ea4cc2a0c1d4513f38a9a","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/where.js","hash":"03fc81a616faf63ab5d5097dc6ec2580e8a32fe2","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/words.js","hash":"88c9e852c37f155c0dc429a401d44df09d9ca51c","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/whereEq.js","hash":"95d70e584abab7e886e137823be0c719bb67ca2e","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/wrapperAt.js","hash":"7d374b517c61846dba2ec2898d75181025fde1be","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/wrap.js","hash":"3631e867dfc78a67db38ffff790ee94022015a52","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/wrapperChain.js","hash":"1e4f82ce87696ad134450678d2fba27bb46cd123","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/wrapperLodash.js","hash":"ee531effe7e5e4472083f98b35497f858be33bb0","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/wrapperReverse.js","hash":"0e41311c145f305b07da8c06db6e8e7ebe5433ec","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/wrapperValue.js","hash":"51e6e912753e7d425a490e90c8205fe83dc435f1","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/xorBy.js","hash":"476caccbc9387505d0e110f814102335c77bb511","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/xor.js","hash":"bb7e8f6d42f3c73d3358ad081b4e00796d1cc771","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/xorWith.js","hash":"8d0c86364c19f9c2b17feac93b112781ff81b3c2","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/zip.js","hash":"3017d4235f2ff6d2658a88eb540246821e9dcf04","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/zipAll.js","hash":"e5e2a68f3c74299cb44da02653f7773d7f6ae554","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/zipObj.js","hash":"353dfff83f25574ff58209ae8656869ab5516e81","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/zipObject.js","hash":"8449412e15d18c596810ebfa34c5a0766f22b7e9","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/zipWith.js","hash":"641ede21898d379ba0b8b9038913fa0400a271b9","modified":499162500000},{"_id":"themes/kiss/node_modules/lodash/fp/zipObjectDeep.js","hash":"e27ad4a21f3e47d1a59b796566d3a4c5ffbe5ebb","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/example/sync.js","hash":"a81c28a9a2473e0f63d7feed93029349f7a447b9","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/example/async.js","hash":"cb6cbeb80a936ccdbdfabd0a79f065f4a026cf0b","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/.eslintrc","hash":"624ccd7fae794413b399fa7cb51da7378760cf8e","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/core.js","hash":"0dddf32834851e90ec73254d646ba978232885de","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/filter_sync.js","hash":"974e63d9786e87abb424181e43bbe7be928ec244","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/dotdot.js","hash":"77dc2a5165e08a5f38aeb991339102e392897fb6","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/filter.js","hash":"452998078786ea963de201838bebf5ab2cd43a48","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/faulty_basedir.js","hash":"66fb2d28511817a541446e8700f2c77931757c7a","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/mock.js","hash":"70626e7a2063439f7c2ea417299ab58d2ffc97eb","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/module_dir.js","hash":"258868a4f1fb2f50ea069a2a096f855aab5a66ad","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/mock_sync.js","hash":"54782fd647df2023aa43463516affc29cd60b917","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/node-modules-paths.js","hash":"af6da6b513aa40caaa06703cc2bc538c665b2f74","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/node_path.js","hash":"d80218b49c0c5114e276f245ef3265f261797687","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/nonstring.js","hash":"c1920b5d3e4d206e92cfaece68057d926a59fb78","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/pathfilter.js","hash":"37862f3bd556c474f2c2b6a8b20db3c6e65fc11a","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/precedence.js","hash":"faadf72c4682d8bf165a4d6f6379bb19883589b6","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/shadowed_core.js","hash":"572af291d3b01c1bfa593f1aaffc22071114c6d1","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/subdirs.js","hash":"26c49ceee80970be5828c870a7e3b4e3807572f5","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/resolver.js","hash":"2ca00e2734365df7c44a05d0c05f524378b05786","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/resolver_sync.js","hash":"144cd10a9505016abe5569e67f65fe4175c55279","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/symlinks.js","hash":"d7a5ee808fe0cd8b9bb359a7fc045519d2208942","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/lib/core.js","hash":"b7ea194ddcbe6c70d6e3b58b46ccc260ecdf4c5c","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/lib/caller.js","hash":"a57f670bf054692c44ba92d17dd78274eda5d73b","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/lib/async.js","hash":"410455dc5c9a2291703b59544d2efa2a70430e18","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/lib/core.json","hash":"2137b8f304b46c2ad8c1b6620872470fbd76549b","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/lib/node-modules-paths.js","hash":"e4096d713955530955d96ad07ab5ec9984aa7f62","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/lib/normalize-options.js","hash":"7e53322b0515bdbb435ab7e9623a7f5014ab2883","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/lib/sync.js","hash":"68cc05085d7958ba6845226840c87514c7b151cf","modified":499162500000},{"_id":"themes/kiss/node_modules/semver/bin/semver","hash":"4fc67e3f71aba3021cf05c8c0513f75d094f9cbd","modified":499162500000},{"_id":"themes/kiss/node_modules/rimraf/test/test-async.js","hash":"7f6b6decc67742212d67529de9a2ee150bde37d0","modified":1312833666000},{"_id":"themes/kiss/node_modules/rimraf/test/test-sync.js","hash":"c84d98b3e885de4a279527831539660cefa23cb3","modified":1312833666000},{"_id":"themes/kiss/node_modules/rimraf/test/run.sh","hash":"ad4825520114fcec855dae27491c0af1c61a22b8","modified":1399391468000},{"_id":"themes/kiss/node_modules/rimraf/test/setup.sh","hash":"a7dafdbc10717be56c98d42550c2bd85b8471c72","modified":1312833801000},{"_id":"themes/kiss/node_modules/sprintf-js/dist/.gitattributes","hash":"082f22187b4bba4be8794ad574c61a07dfa61bea","modified":499162500000},{"_id":"themes/kiss/node_modules/sprintf-js/dist/sprintf.min.js","hash":"4042f64f7fdcf4d330bae25530cd49b10f40926c","modified":499162500000},{"_id":"themes/kiss/node_modules/sprintf-js/dist/angular-sprintf.min.js.map","hash":"aba8716835cc8ac29d0c9bc713993bc0f4be196f","modified":499162500000},{"_id":"themes/kiss/node_modules/sprintf-js/dist/angular-sprintf.min.js","hash":"ec5aa1464ed01f40d1aadab72d7b5f7d1f0710a1","modified":499162500000},{"_id":"themes/kiss/node_modules/which/bin/which","hash":"5b6b3e1838316fb3f1b3b4194cdf49db0674eb17","modified":499162500000},{"_id":"themes/kiss/node_modules/sprintf-js/dist/sprintf.min.js.map","hash":"fdb9d6aa15a088d3361e34873fe1a191354574bb","modified":499162500000},{"_id":"themes/kiss/node_modules/sprintf-js/src/angular-sprintf.js","hash":"1d09f5b082a5d9c29f8f13a222fde454192ff02a","modified":499162500000},{"_id":"themes/kiss/node_modules/sprintf-js/src/sprintf.js","hash":"414327329e2779815c5190589b631ac0450b8d3e","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/helper/escapeChars.js","hash":"3aa50931045ec1e57618e6752993de1f951a09b1","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/helper/defaultToWhiteSpace.js","hash":"0501937f6d3acf5bef430dd9914a9b3550a38fe8","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/helper/adjacent.js","hash":"14aa1d7d8f50555061196bad5c93da6ca92c26b5","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/helper/escapeRegExp.js","hash":"3e0244d5c3fc8695164a71e31d385ff77f2851cc","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/helper/htmlEntities.js","hash":"3ae959cc35ee2bff2332d0da8fb8d535b4d05ab7","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/helper/strRepeat.js","hash":"b1a82262b0781367bdfc17cfa5b7fde4b27767a1","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/helper/makeString.js","hash":"aa706eca9c8763dc76b45338f6224a1a3be90713","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/helper/toPositive.js","hash":"b6066b048eca8cf8cb1c5567420374d8583d393b","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/dist/underscore.string.min.js","hash":"1bf2dbd47d688cae063fd41fcbae68321d0e17a8","modified":499162500000},{"_id":"themes/kiss/node_modules/underscore.string/dist/underscore.string.js","hash":"d44a358eed9a710bb73a59cf76bcc938e4fae5fc","modified":499162500000},{"_id":"themes/kiss/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1601799641144},{"_id":"source/_drafts/language/han/writing/chinese-honorific-for-work-mail.md","hash":"668053054f6ad62a131f7222abf563555398716c","modified":1601797714818},{"_id":"source/_posts/it/java/java-basic/20201114_101407.png","hash":"1cdd3a0dc66cb17e34926515dbd121738708761c","modified":1606891814779},{"_id":"source/_posts/it/java/java-collection/Untitled 1.png","hash":"bd4f8e27ff98fce5547f1f4b277ad4debc4f2ca9","modified":1606863364000},{"_id":"source/_posts/it/java/java-collection/Untitled 2.png","hash":"7ff8b589f12130fb2e71530aa5e43aff912ac2a6","modified":1606863364000},{"_id":"source/_posts/it/java/java-collection/Untitled 3.png","hash":"b032986e28a9202479cd743464809b53668cd6b4","modified":1606863364000},{"_id":"source/_posts/language/min/sigêng-giamgia/202010060948.jpg","hash":"abcd4e4bc5aeb9b8a1263329adae6b525101d7f6","modified":1602030864493},{"_id":"themes/kiss/node_modules/async/dist/async.min.js","hash":"487f1a1adb0bf6b00233edb64e64f2fb305ce5a3","modified":1452211452000},{"_id":"themes/kiss/node_modules/js-yaml/dist/js-yaml.js","hash":"96bd4f31b98245f53ff61123bb0d509cd13293a1","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/resolver/mug.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/resolver/mug.coffee","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":499162500000},{"_id":"source/_posts/it/java/java-collection/Untitled 6.png","hash":"e31adbdb1887144a8308143ae300d74e0eda4180","modified":1606863364000},{"_id":"source/_posts/it/java/java-collection/Untitled 4.png","hash":"2ddf731a2d67a0b5ff4ee6fbe7f77c5e0afcb484","modified":1606863364000},{"_id":"themes/kiss/node_modules/argparse/node_modules/sprintf-js/LICENSE","hash":"424761b2158dd216b5b38a4f45cc29e482eb772e","modified":1420800247000},{"_id":"themes/kiss/node_modules/argparse/node_modules/sprintf-js/.npmignore","hash":"ae4607005a13ef5aba5207eca8ea5b6e1eed011e","modified":1398936593000},{"_id":"themes/kiss/node_modules/argparse/node_modules/sprintf-js/README.md","hash":"176e4688643d0e760f001b1e97b17b37108999d2","modified":1436535223000},{"_id":"themes/kiss/node_modules/argparse/node_modules/sprintf-js/gruntfile.js","hash":"0bf6fc81a8c6480d3229e8730661260e132df3d0","modified":1412070560000},{"_id":"themes/kiss/node_modules/argparse/node_modules/sprintf-js/package.json","hash":"c5653d65015b5aaaf12e01b3e510bd9f3d1ca4e4","modified":1606920508980},{"_id":"themes/kiss/node_modules/argparse/lib/action/count.js","hash":"dcfbf45e6885e5bed742d231a14f8559ef353d33","modified":1424151350000},{"_id":"themes/kiss/node_modules/argparse/node_modules/sprintf-js/bower.json","hash":"5d6555cca822adce55b880d6432b7cb4e986dcb6","modified":1436535223000},{"_id":"themes/kiss/node_modules/argparse/lib/action/append.js","hash":"65faa0e421d708696f307bbdef47c0a32c90c587","modified":1454676134000},{"_id":"themes/kiss/node_modules/argparse/lib/action/help.js","hash":"341e8d059f186227dc437baf3e122215714d545b","modified":1454749653000},{"_id":"themes/kiss/node_modules/argparse/lib/action/store.js","hash":"4c8db63d16506bd8c2fe5cabb47e984436e6df49","modified":1454749671000},{"_id":"themes/kiss/node_modules/argparse/lib/action/subparsers.js","hash":"b44469c5f513138f10e077a29b0aa721248b0da9","modified":1454749861000},{"_id":"themes/kiss/node_modules/argparse/lib/help/added_formatters.js","hash":"f11d0e2721c248b6b1ebbda0ff1df4a22281b6b9","modified":1475151307000},{"_id":"themes/kiss/node_modules/argparse/lib/action/version.js","hash":"266cc320868c85e5ccd008f0c56b51c58b8b3565","modified":1454749881000},{"_id":"themes/kiss/node_modules/argparse/lib/help/formatter.js","hash":"adff6bd86c99f99ccf0b288776aa67357e4752c1","modified":1518704419000},{"_id":"themes/kiss/node_modules/argparse/lib/argument/exclusive.js","hash":"c38a1586d7e145698239ccfd20c1645858d8ca6f","modified":1424151350000},{"_id":"themes/kiss/node_modules/argparse/lib/argument/error.js","hash":"ebbd30aee8c24eca5643fa73dbf0963244d3bdb7","modified":1424151350000},{"_id":"themes/kiss/node_modules/argparse/lib/argument/group.js","hash":"ea26a609a1b4f0308b672c507880495689629ebd","modified":1424151350000},{"_id":"themes/kiss/node_modules/coffeescript/lib/coffee-script/cake.js","hash":"5c79d58d5f314c45b04d764bd422d6d468f76ddf","modified":1487737074000},{"_id":"themes/kiss/node_modules/coffeescript/lib/coffee-script/browser.js","hash":"5db419e740ac5d76a8e9a69218eaccae71502e71","modified":1487737074000},{"_id":"themes/kiss/node_modules/coffeescript/lib/coffee-script/coffee-script.js","hash":"c113e4cf205c0a0c79d61936f66a3f5277975dd5","modified":1487737074000},{"_id":"themes/kiss/node_modules/coffeescript/lib/coffee-script/helpers.js","hash":"188010049614c631bc90a3cb6eacb1d4129b8272","modified":1487737074000},{"_id":"themes/kiss/node_modules/coffeescript/lib/coffee-script/command.js","hash":"0a319eafff2991851c0f6badaae87540a6f846a5","modified":1487737074000},{"_id":"themes/kiss/node_modules/coffeescript/lib/coffee-script/grammar.js","hash":"ce722c5f2ea9f542fb537cdb6178b01737e26d09","modified":1487737074000},{"_id":"themes/kiss/node_modules/coffeescript/lib/coffee-script/index.js","hash":"e2a7d0248205144af1b69cfc27534c3ff0e70d96","modified":1487737074000},{"_id":"themes/kiss/node_modules/coffeescript/lib/coffee-script/optparse.js","hash":"a9d16f2ea7d10f5f0bc812598beb1942d7bd90e3","modified":1487737074000},{"_id":"themes/kiss/node_modules/coffeescript/lib/coffee-script/register.js","hash":"02f6f6b10ffd7a28901b2e930269118a7555bddb","modified":1487737074000},{"_id":"themes/kiss/node_modules/coffeescript/lib/coffee-script/repl.js","hash":"8f8f6d9f0583d96a649538d0664d9dd4971d34c4","modified":1487737074000},{"_id":"themes/kiss/node_modules/coffeescript/lib/coffee-script/scope.js","hash":"34bd3ef7b277e082746cdf2556758da410d1fefe","modified":1487737074000},{"_id":"themes/kiss/node_modules/coffeescript/lib/coffee-script/rewriter.js","hash":"be5120d24ae7680fbabc4e01093e2ad2fafc2560","modified":1487737074000},{"_id":"themes/kiss/node_modules/coffeescript/lib/coffee-script/sourcemap.js","hash":"fd7345df0911093829e376930264e2b0763f52ae","modified":1487737074000},{"_id":"themes/kiss/node_modules/colors/lib/custom/trap.js","hash":"391f769b8dd1a77b7c8ea1a76817b4e265cc6f38","modified":1416873262000},{"_id":"themes/kiss/node_modules/colors/lib/custom/zalgo.js","hash":"73b50e3646fb82e15b321067d3e0353529fbcc6c","modified":1434545520000},{"_id":"themes/kiss/node_modules/colors/lib/maps/america.js","hash":"45f3d39d744cc14040d4d62757b412b169cf2efc","modified":1416873262000},{"_id":"themes/kiss/node_modules/colors/lib/system/supports-colors.js","hash":"65ce27a33eccf3e698c49de9c94b6ffef349ca97","modified":1416873262000},{"_id":"themes/kiss/node_modules/colors/lib/maps/zebra.js","hash":"5f6caffb4012ae13e8f36302a03cf27a7e593d89","modified":1416873262000},{"_id":"themes/kiss/node_modules/colors/lib/maps/rainbow.js","hash":"014697741d559ea1dce3a5a27b9ba27b7241355c","modified":1416873262000},{"_id":"themes/kiss/node_modules/colors/lib/maps/random.js","hash":"50ac05ea88379162110f19cf3c441fa282956e73","modified":1416873262000},{"_id":"themes/kiss/node_modules/dateformat/test/weekofyear/test_weekofyear.js","hash":"349f414ec587f90e920fe8e9a11f55b188e5ff2e","modified":1447915155000},{"_id":"themes/kiss/node_modules/dateformat/test/weekofyear/test_weekofyear.sh","hash":"6438e2c97d0c17982bc3c191f71eeab1e47b36d9","modified":1447915155000},{"_id":"themes/kiss/node_modules/exit/test/fixtures/10-stderr.txt","hash":"09b203771aa78e22b0c59709a2f126aa8ab54114","modified":1385493531000},{"_id":"themes/kiss/node_modules/exit/test/fixtures/100-stdout-stderr.txt","hash":"ba4138ef0976213ac79172f9bc7f3ed840096922","modified":1385493531000},{"_id":"themes/kiss/node_modules/exit/test/fixtures/10-stdout-stderr.txt","hash":"993088f87819e31b1ce2ea5ac71300955343d305","modified":1385493531000},{"_id":"themes/kiss/node_modules/exit/test/fixtures/100-stdout.txt","hash":"29c497636b27eb6bd92856adac923abbaa5f2c58","modified":1385493531000},{"_id":"themes/kiss/node_modules/exit/test/fixtures/100-stderr.txt","hash":"0231d229f37c3ac7a83b1efbdcfb3eab956ca64f","modified":1385493531000},{"_id":"themes/kiss/node_modules/exit/test/fixtures/1000-stderr.txt","hash":"cad0c02e259a49bb1487aec3484cd23a77cd57f1","modified":1385493531000},{"_id":"themes/kiss/node_modules/exit/test/fixtures/1000-stdout.txt","hash":"862a205905c64a3b516d2cab0ca6dd2557046a83","modified":1385493531000},{"_id":"themes/kiss/node_modules/exit/test/fixtures/10-stdout.txt","hash":"c2d24f38ecae881032783bc2d45566b00bcd4bd0","modified":1385493531000},{"_id":"themes/kiss/node_modules/exit/test/fixtures/log-broken.js","hash":"496a5ab7514d6bf689e20e999ace65595795e47e","modified":1385493531000},{"_id":"themes/kiss/node_modules/exit/test/fixtures/1000-stdout-stderr.txt","hash":"6c53beb52a1974cc3be94ff23391885d27a09e49","modified":1385493531000},{"_id":"themes/kiss/node_modules/exit/test/fixtures/log.js","hash":"074a031032e9ea28c3e80195168e02be663f67e4","modified":1385493531000},{"_id":"themes/kiss/node_modules/findup-sync/node_modules/glob/README.md","hash":"07230aa38a2a68d30d9d56ab3658b5be2a480337","modified":1434666227000},{"_id":"themes/kiss/node_modules/exit/test/fixtures/create-files.sh","hash":"a54259d548395ff90501a6ce5af14329128b36b8","modified":1385493531000},{"_id":"themes/kiss/node_modules/findup-sync/node_modules/glob/LICENSE","hash":"bb408e929caeb1731945b2ba54bc337edb87cc66","modified":1406583065000},{"_id":"themes/kiss/node_modules/findup-sync/node_modules/glob/package.json","hash":"9139cd154a88ecd1f74f02e8d113ad106496a9fe","modified":1606920509145},{"_id":"themes/kiss/node_modules/findup-sync/node_modules/glob/sync.js","hash":"6585718061bdd1f27bec952486252c6ee46ea35e","modified":1436923593000},{"_id":"themes/kiss/node_modules/findup-sync/node_modules/glob/common.js","hash":"8eafaad2390b2916188550cb28ee4006490580ef","modified":1439497932000},{"_id":"themes/kiss/node_modules/findup-sync/node_modules/glob/glob.js","hash":"7eadb3bf29e1b6ed15cd11d2033b214b2e1a2e04","modified":1442360722000},{"_id":"themes/kiss/node_modules/grunt/lib/grunt/config.js","hash":"443a09aff2ec8639077c93b82de0c8a8b3a1d7e4","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt/lib/grunt/event.js","hash":"73158b8a63fb492fa9dcb40047df6ea8f4cde483","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt/lib/grunt/file.js","hash":"f21be2ff210dfa2ddcc0179297448cfd3014ab30","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt/lib/grunt/cli.js","hash":"681aca3c03f3932bc74cb42b9ea70b409ff57b19","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt/lib/grunt/option.js","hash":"a9966ad6feb226d577607caa808a30b4cff54750","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt/lib/grunt/fail.js","hash":"b777444dbdba8debeb34ffa3f0e8b2dc95368fe8","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt/lib/grunt/help.js","hash":"c846fa2c845f84c914bea1ce3e17340428826e06","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt/lib/grunt/task.js","hash":"060f915307ec54ab6cf5240e7d40e1283aae40ec","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt/lib/grunt/template.js","hash":"7d31889926c10d7b6a2739c9e19586bb64a8ea14","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/.travis.yml","hash":"475f49f2ac7ca71a18a511fe8549491952a94a71","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/index.js","hash":"be810586bfc1a359d636dc6608b9840fb9bf04b2","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/lib/util/task.js","hash":"d4f525ebd33bef0e1205eee6b7322f856803d6f4","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/package.json","hash":"6a849b15ff3e7b426d3fc8ab9b4ed77fad12b326","modified":1606920508990},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/LICENSE","hash":"b2e68ce937c1f851926f7e10280cc93221d4f53c","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/readme.markdown","hash":"5e2ba030c890821bdd36e9f92a9c6c7d265076fe","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/grunt-cli/package.json","hash":"08c4e7041006bfdc28db18613e486936f75a8c1c","modified":1606920509147},{"_id":"themes/kiss/node_modules/grunt/node_modules/rimraf/LICENSE","hash":"bb408e929caeb1731945b2ba54bc337edb87cc66","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt/node_modules/grunt-cli/CHANGELOG.md","hash":"352dca5f2f7f7366180608eabce41ee9d3b6e6bc","modified":1459558323000},{"_id":"themes/kiss/node_modules/grunt/node_modules/grunt-cli/README.md","hash":"7112f45212575e52b7eacb164c7bfafdd18a3526","modified":1458599272000},{"_id":"themes/kiss/node_modules/grunt/node_modules/rimraf/package.json","hash":"762d42e64663d16f9e9e932a623c93e69efb6b69","modified":1606920509147},{"_id":"themes/kiss/node_modules/grunt/node_modules/rimraf/README.md","hash":"fec5cb034f99088fb8ceec58b6de8ac5f5fc04e7","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt/node_modules/.bin/rimraf","hash":"8939084052306c67d1f121f06a2c3fd10579d0ff","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt/node_modules/rimraf/bin.js","hash":"8939084052306c67d1f121f06a2c3fd10579d0ff","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt/node_modules/rimraf/rimraf.js","hash":"7fbd16e8807e66393593311e03fa4928bbb103f9","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt/node_modules/.bin/grunt","hash":"7ff95f765f94eaa36d5b5701bd84f8b978888a28","modified":1459557702000},{"_id":"themes/kiss/node_modules/grunt-contrib-copy/test/fixtures/.hidden","hash":"bbc357cf5d8b12bc75cd6d697dc33db6d590ec43","modified":1363299392000},{"_id":"themes/kiss/node_modules/grunt-contrib-copy/test/fixtures/test2.js","hash":"1097e0f6d57f485cca733b93e02903e1969f9e86","modified":1363299392000},{"_id":"themes/kiss/node_modules/grunt-contrib-copy/test/fixtures/test.js","hash":"ae78d9691fd3c5cf6c14e0e6ad2bba3c09991545","modified":1363299392000},{"_id":"themes/kiss/node_modules/grunt-contrib-copy/test/expected/single.js","hash":"ae78d9691fd3c5cf6c14e0e6ad2bba3c09991545","modified":1363299392000},{"_id":"themes/kiss/node_modules/grunt-legacy-util/test/fixtures/Gruntfile-execArgv-child.js","hash":"43e52894de367ccc3054bc5a12b1943283ba04c5","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt-legacy-util/test/fixtures/Gruntfile-print-text.js","hash":"ff78c7a71ec640d97a322ef16d44a5a4342bd080","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt-legacy-util/test/fixtures/exec.cmd","hash":"bd98738b7612db9ff9f8c689f1e7976e7ef6d663","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt-legacy-util/test/fixtures/Gruntfile-execArgv.js","hash":"98722db3df31a868c82e53cd73fd7d238df236ad","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt-legacy-util/test/fixtures/exec.sh","hash":"4d07d64d1c436b521d17794bd219e4fde651d325","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt-legacy-util/test/fixtures/spawn.js","hash":"6bb82176253c874a5a973330e9a7e77941f476c2","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt-legacy-util/test/fixtures/spawn-multibyte.js","hash":"a9c874b79306cb4b16aaf33e0e74a425ca7c9987","modified":499162500000},{"_id":"themes/kiss/node_modules/iconv-lite/encodings/tables/cp950.json","hash":"33ad3790a0660cd2b7c0c599a7f5d3c147596bec","modified":1453159331000},{"_id":"themes/kiss/node_modules/iconv-lite/encodings/tables/gb18030-ranges.json","hash":"bfce88fc92e98c19910fbef1b02b85fb5d2cf2f9","modified":1453159331000},{"_id":"themes/kiss/node_modules/iconv-lite/encodings/tables/cp936.json","hash":"22b95ce3e9743dc8df815b8a6b9c13d1a9f7c229","modified":1453159331000},{"_id":"themes/kiss/node_modules/iconv-lite/encodings/tables/big5-added.json","hash":"e61b2d77a36bce976f563f659300e06a33c9e6e9","modified":1453159331000},{"_id":"themes/kiss/node_modules/iconv-lite/encodings/tables/gbk-added.json","hash":"918eecca2f76db2aa3fe0bf8634816584bf31d78","modified":1453159331000},{"_id":"themes/kiss/node_modules/iconv-lite/encodings/tables/eucjp.json","hash":"9beb6afa39229a044fd6935a92ca5e997f6fac78","modified":1453159331000},{"_id":"themes/kiss/node_modules/js-yaml/lib/js-yaml/common.js","hash":"f98f5657b7f32c09d39b720d18d07fab29b09c05","modified":499162500000},{"_id":"themes/kiss/node_modules/iconv-lite/encodings/tables/shiftjis.json","hash":"e02d26e47a7b295222c3ca70015024ca163e7381","modified":1453159331000},{"_id":"themes/kiss/node_modules/js-yaml/lib/js-yaml/dumper.js","hash":"df386ddc8e57d47468520a99c8283163b910d77f","modified":499162500000},{"_id":"themes/kiss/node_modules/js-yaml/lib/js-yaml/loader.js","hash":"55b30484116fb976224b8c54bc3dd8216753199b","modified":499162500000},{"_id":"themes/kiss/node_modules/js-yaml/lib/js-yaml/type.js","hash":"844dd1243c2b6a6cac723f50da8699c089ff14a5","modified":499162500000},{"_id":"themes/kiss/node_modules/js-yaml/lib/js-yaml/exception.js","hash":"311052458bd357250b6809e33f1bfc66871abe1b","modified":499162500000},{"_id":"themes/kiss/node_modules/js-yaml/lib/js-yaml/mark.js","hash":"9bf058de26980a50acf01c4d257f8c66060bbf99","modified":499162500000},{"_id":"themes/kiss/node_modules/locate-path/node_modules/path-exists/index.js","hash":"dd6403171a6a2132ad8e110adcfe6e633f6a2b1d","modified":1462102829000},{"_id":"themes/kiss/node_modules/js-yaml/lib/js-yaml/schema.js","hash":"3bb3cc230b10b355700a9f60a029cc58e960b25d","modified":499162500000},{"_id":"themes/kiss/node_modules/locate-path/node_modules/path-exists/package.json","hash":"22306701383e0377f00462fd9c5da351c882aaf3","modified":1606920508999},{"_id":"themes/kiss/node_modules/locate-path/node_modules/path-exists/license","hash":"0c94f137f6e0536db8cb2622a9dc84253b91b90c","modified":1396798991000},{"_id":"themes/kiss/node_modules/locate-path/node_modules/path-exists/readme.md","hash":"2ca86d5d03c78792e02adbfa7027a98940c66fc3","modified":1459604635000},{"_id":"themes/kiss/node_modules/mkdirp/node_modules/minimist/.travis.yml","hash":"a88152a7be9167603b19549ff75cd80d22501731","modified":1372148119000},{"_id":"themes/kiss/node_modules/mkdirp/node_modules/minimist/index.js","hash":"c69b3860fa8b40337db188fdfb201077df93ef5b","modified":1392957961000},{"_id":"themes/kiss/node_modules/mkdirp/node_modules/minimist/LICENSE","hash":"b2e68ce937c1f851926f7e10280cc93221d4f53c","modified":1372145420000},{"_id":"themes/kiss/node_modules/mkdirp/node_modules/minimist/package.json","hash":"aee4437345df57ecfb09eb56b0f8a3bba36951bb","modified":1606920509000},{"_id":"themes/kiss/node_modules/mkdirp/node_modules/minimist/readme.markdown","hash":"b037b8453fa008383cf7495b3736aa7cc217deb1","modified":1372148196000},{"_id":"themes/kiss/node_modules/pkg-up/node_modules/find-up/package.json","hash":"b398b5c070640e66efc589b3efd73dcdfa2a09d1","modified":1606920509182},{"_id":"themes/kiss/node_modules/pkg-up/node_modules/find-up/readme.md","hash":"6ecd4ab2e17793e449ffad6f3d40050d48a4ea1a","modified":1529313441000},{"_id":"themes/kiss/node_modules/pkg-up/node_modules/find-up/license","hash":"5aaf48196ddd4d007a3067aa7f30303ca8e4b29c","modified":1496344655000},{"_id":"themes/kiss/node_modules/pkg-up/node_modules/find-up/index.js","hash":"b952b948d456ded69ad72a226f9caadfd13f44b3","modified":1529313331000},{"_id":"themes/kiss/node_modules/resolve/test/dotdot/index.js","hash":"cb4dcd8c203c7786ceb434eb15f635d5764e09ee","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/precedence/bbb.js","hash":"e8c2af480e00a669eacae2a45e2a0c44503b5cbd","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/precedence/aaa.js","hash":"250d6bb5158fc0824467fd7fe577800cad939729","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/resolver/cup.coffee","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/resolver/foo.js","hash":"db311f33466c97593aa59411fcfd87e8489d8f50","modified":499162500000},{"_id":"themes/kiss/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1601799641144},{"_id":"source/_drafts/language/han/writing/chinese-honorific-for-work-mail/公函一.jpg","hash":"d10d31eb05040d107d206044be07d19ee641c6d7","modified":1601797714824},{"_id":"source/_drafts/language/han/writing/chinese-honorific-for-work-mail/公函二.jpg","hash":"dca3c41d60237ef9b62cb631b3964a3b04185a3d","modified":1601797714825},{"_id":"source/_posts/it/java/java-basic/Untitled 1.png","hash":"b0ff3f9c9afb47aa3ec4ae861b96f91ba225de2a","modified":1606861210000},{"_id":"source/_posts/it/java/java-basic/20201202_24328.png","hash":"c992fe54e126ad45512d012b8bf6dcb6a5e36533","modified":1606891792361},{"_id":"source/_drafts/program/dev/lang/js/js-startup.md","hash":"1002895f270f47c232e292ca5c3e0b5e25e3e5ef","modified":1601797714828},{"_id":"source/_posts/language/min/sigêng-giamgia/蒹葭.m4a","hash":"9b489081647694ae1fa69bf4712934565c8a11e3","modified":1602028632941},{"_id":"themes/kiss/node_modules/coffeescript/lib/coffee-script/lexer.js","hash":"c0a24706301f6a26316b65022a7a2ed6eeb36247","modified":1487737074000},{"_id":"themes/kiss/node_modules/coffeescript/lib/coffee-script/parser.js","hash":"01a0d1088d40df953565bf5d9ec4ba3268346446","modified":1487737074000},{"_id":"themes/kiss/node_modules/coffeescript/lib/coffee-script/nodes.js","hash":"6c262f0ffbfd0f9987b853400d633b0593b6ac32","modified":1487737074000},{"_id":"themes/kiss/node_modules/iconv-lite/encodings/tables/cp949.json","hash":"a3a6e6f61a78b50e54947f11ce8daebb8756209d","modified":1453159331000},{"_id":"themes/kiss/node_modules/resolve/test/pathfilter/deep_ref/main.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/resolver/baz/doom.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/resolver/browser_field/a.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/resolver/browser_field/b.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/resolver/other_path/root.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":499162500000},{"_id":"themes/kiss/source/css/images/moon.jpg","hash":"798c8924ee26b8f402054d6ed5743a18ba9226df","modified":1601799641146},{"_id":"source/_posts/it/java/java-basic/Untitled.png","hash":"7feeb782152cb8ddc3c2fb39626145920a92062a","modified":1606861210000},{"_id":"source/_drafts/language/han/writing/chinese-honorific-for-work-mail/现代电子邮件公函格式.jpg","hash":"b3c15b50a69e62e182066cdb4b4ad465b6a56676","modified":1601797714826},{"_id":"themes/kiss/node_modules/argparse/node_modules/sprintf-js/dist/angular-sprintf.min.js.map","hash":"7e346bf1faac9cf2a443b934627d644c4a2a1e1e","modified":1432726881000},{"_id":"themes/kiss/node_modules/argparse/node_modules/sprintf-js/dist/angular-sprintf.min.map","hash":"7e346bf1faac9cf2a443b934627d644c4a2a1e1e","modified":1436535223000},{"_id":"themes/kiss/node_modules/argparse/node_modules/sprintf-js/dist/angular-sprintf.min.js","hash":"287c4dca7a7db9aededca1786e037937ce9e1475","modified":1436535223000},{"_id":"themes/kiss/node_modules/argparse/node_modules/sprintf-js/dist/sprintf.min.js","hash":"bba7ae9cedfd17c83358b45728e9b21655f74bfe","modified":1436535223000},{"_id":"themes/kiss/node_modules/argparse/node_modules/sprintf-js/demo/angular.html","hash":"ae98e1e4b9fa756c07172c2afdbcdb1a32e307bb","modified":1436534751000},{"_id":"themes/kiss/node_modules/argparse/node_modules/sprintf-js/dist/sprintf.min.map","hash":"e6dba98417a8011e9584864e6cb899d6677c18d7","modified":1436535223000},{"_id":"themes/kiss/node_modules/argparse/node_modules/sprintf-js/src/angular-sprintf.js","hash":"33839b0e48fe511e144b86148e2a6664653d2f1b","modified":1412070560000},{"_id":"themes/kiss/node_modules/argparse/node_modules/sprintf-js/dist/sprintf.min.js.map","hash":"0d875e36d27e472bb37a843d31d83a07725a1527","modified":1432726881000},{"_id":"themes/kiss/node_modules/argparse/node_modules/sprintf-js/src/sprintf.js","hash":"b1104fe9781c80f1e4da70d0b55b442601d5d858","modified":1436535223000},{"_id":"themes/kiss/node_modules/argparse/node_modules/sprintf-js/test/test.js","hash":"b873a616683851c9da17c1ce418564a9e0eab157","modified":1436535223000},{"_id":"themes/kiss/node_modules/argparse/lib/action/append/constant.js","hash":"81c1abd5bae67b59b7e881036cdb63b5e3634113","modified":1454749636000},{"_id":"themes/kiss/node_modules/argparse/lib/action/store/constant.js","hash":"7ce2e16789498e50b65363d0d8fc4efc898c54cd","modified":1454749686000},{"_id":"themes/kiss/node_modules/argparse/lib/action/store/false.js","hash":"69eba4ce33b3a5b01def86bb7f8bc6e8064b5026","modified":1454745938000},{"_id":"themes/kiss/node_modules/argparse/lib/action/store/true.js","hash":"ea0ee5f7c71884164b79c348cfa460e778757edd","modified":1454745938000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/lib/core.json","hash":"47ea3eee70b112a68fe6191072c1504378d3bbf7","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/lib/caller.js","hash":"18d495659a2e6c4b36bbaa1b4d2bbcd89867117a","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/example/async.js","hash":"81b7d65bc2d3329697cf4847822849f4590915af","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/lib/async.js","hash":"9ff056e44b6ebbf43a88410d8b2f1e3accb3e330","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/example/sync.js","hash":"a81c28a9a2473e0f63d7feed93029349f7a447b9","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/core.js","hash":"ea67c8d03f00b2fb5036c53cf0dbb2bd739a1970","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/lib/core.js","hash":"d014ea3be8eae21507b66222110b070dd31cf351","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/lib/node-modules-paths.js","hash":"e21592de851ebe7f26fbadab1a35f868a2c63965","modified":1453598718000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/lib/sync.js","hash":"538a24292f34a594cf1b263284fcf574df1cd408","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/dotdot.js","hash":"20900f96fdfaa2a8845f376560e0aca4b07bb80e","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/filter.js","hash":"d6094902c110b029e3b3a8b5a711e2e5d14a6546","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/faulty_basedir.js","hash":"1dad49c92585795bc49796a3a19616d0a7cdc4f6","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/filter_sync.js","hash":"a1c927d406a881f499e830e894bcd887e0bdd4a9","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/mock.js","hash":"f07cae76fe6144ebce0534734f688dda0f8644bc","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/mock_sync.js","hash":"56676bf99dd20c33751d537741487f18116e1f16","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/module_dir.js","hash":"7b5651424e6b17dc983d97dbb5e6f84944a2297a","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/node_path.js","hash":"418200a128045517eb7d5161341443ef26d29822","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/nonstring.js","hash":"c1920b5d3e4d206e92cfaece68057d926a59fb78","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/precedence.js","hash":"367a49e4b83e4b0a2f66647cebc7a1a9a2763626","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/resolver_sync.js","hash":"c4cb1bed29e27394d4d947fad23a36d3d75d81b1","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/pathfilter.js","hash":"2c354a71b3e699b001b21a9f2b77ce46153f8d6b","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/grunt-cli/bin/grunt","hash":"7ff95f765f94eaa36d5b5701bd84f8b978888a28","modified":1459557702000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/subdirs.js","hash":"f3c7f34593422d07cd1a31d0ef8eb2292cb13de7","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/grunt-cli/completion/bash","hash":"2c05ced389bd3727c6705195a4848662bf3f42bf","modified":1458599272000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/resolver.js","hash":"6f1cec85d2e80c408302436c08e5f7da1187836e","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/grunt-cli/completion/zsh","hash":"fd23edef343df6911b4a6d1017b8beb1a9c3c05f","modified":1458599272000},{"_id":"themes/kiss/node_modules/grunt/node_modules/grunt-cli/lib/cli.js","hash":"fcd98d32eaae4ff4646a2782f545e630f5211837","modified":1459557702000},{"_id":"themes/kiss/node_modules/grunt/node_modules/grunt-cli/lib/info.js","hash":"e88954e4c845271b4f2e827444da24264de43a7c","modified":1458599272000},{"_id":"themes/kiss/node_modules/grunt/node_modules/grunt-cli/lib/completion.js","hash":"395c86abdeda22028a6340a8bf28ec6ab1c4d8d2","modified":1458599272000},{"_id":"themes/kiss/node_modules/grunt-contrib-copy/test/fixtures/folder_two/two.js","hash":"9971ef6e49cf03ae10f142377dcf12e69a6d4063","modified":1363299392000},{"_id":"themes/kiss/node_modules/grunt-contrib-clean/test/fixtures/sample_long/long.txt","hash":"8b26a8dfbc8d252f3d74e996895d5f03e764e5eb","modified":1373659716000},{"_id":"themes/kiss/node_modules/grunt-contrib-clean/test/fixtures/sample_short/short.txt","hash":"8b26a8dfbc8d252f3d74e996895d5f03e764e5eb","modified":1373659716000},{"_id":"themes/kiss/node_modules/grunt-contrib-copy/test/fixtures/folder_one/one.js","hash":"0c9b71f364d1b4a0da2037c8d663abb778b4b865","modified":1363299392000},{"_id":"themes/kiss/node_modules/grunt-contrib-copy/test/expected/copy_test_files/test.js","hash":"ae78d9691fd3c5cf6c14e0e6ad2bba3c09991545","modified":1363299392000},{"_id":"themes/kiss/node_modules/grunt-contrib-copy/test/expected/copy_test_flatten/test2.js","hash":"1097e0f6d57f485cca733b93e02903e1969f9e86","modified":1363299392000},{"_id":"themes/kiss/node_modules/grunt-contrib-copy/test/expected/copy_test_flatten/test.js","hash":"ae78d9691fd3c5cf6c14e0e6ad2bba3c09991545","modified":1363299392000},{"_id":"themes/kiss/node_modules/grunt-contrib-copy/test/expected/copy_test_files/test2.js","hash":"1097e0f6d57f485cca733b93e02903e1969f9e86","modified":1363299392000},{"_id":"themes/kiss/node_modules/grunt-contrib-copy/test/expected/copy_test_flatten/two.js","hash":"9971ef6e49cf03ae10f142377dcf12e69a6d4063","modified":1363299392000},{"_id":"themes/kiss/node_modules/grunt-contrib-copy/test/expected/copy_test_mix/test.js","hash":"ae78d9691fd3c5cf6c14e0e6ad2bba3c09991545","modified":1363299392000},{"_id":"themes/kiss/node_modules/grunt-contrib-copy/test/expected/copy_test_mix/test2.js","hash":"1097e0f6d57f485cca733b93e02903e1969f9e86","modified":1363299392000},{"_id":"themes/kiss/node_modules/grunt-contrib-copy/test/expected/copy_test_flatten/one.js","hash":"0c9b71f364d1b4a0da2037c8d663abb778b4b865","modified":1363299392000},{"_id":"themes/kiss/node_modules/js-yaml/lib/js-yaml/schema/core.js","hash":"3942b19d860daad732f574c060535ef03e77bf4e","modified":499162500000},{"_id":"themes/kiss/node_modules/esprima/dist/esprima.js","hash":"c393489988d0261842c5c6ed4210efc5ad02dd5c","modified":1531471152000},{"_id":"themes/kiss/node_modules/js-yaml/lib/js-yaml/schema/default_full.js","hash":"f49d934b90306c570d932a837ff4d8b5620b65c8","modified":499162500000},{"_id":"themes/kiss/node_modules/js-yaml/lib/js-yaml/schema/default_safe.js","hash":"4e6038ca3bd2862b87aeac97d58f72f13bd1dcb2","modified":499162500000},{"_id":"themes/kiss/node_modules/js-yaml/lib/js-yaml/schema/json.js","hash":"83b3938255db10353d6cb92bd8a8fc72490277fd","modified":499162500000},{"_id":"themes/kiss/node_modules/js-yaml/lib/js-yaml/type/bool.js","hash":"2524fe24d6dcd4e4a14b62696a5fd16e54d8f3f4","modified":499162500000},{"_id":"themes/kiss/node_modules/js-yaml/lib/js-yaml/schema/failsafe.js","hash":"93b94b7577f2529bd0fbbb9115df58d994204b8f","modified":499162500000},{"_id":"themes/kiss/node_modules/js-yaml/lib/js-yaml/type/binary.js","hash":"59c69683c084d982fd919bf1c49ee8b67cf2ac9c","modified":499162500000},{"_id":"themes/kiss/node_modules/js-yaml/lib/js-yaml/type/float.js","hash":"7949500ad6a0be9321f1e880c80af46a41ae88d3","modified":499162500000},{"_id":"themes/kiss/node_modules/js-yaml/lib/js-yaml/type/int.js","hash":"ce6a30244a3ce017aaf98317d991379f2bc98ee0","modified":499162500000},{"_id":"themes/kiss/node_modules/js-yaml/lib/js-yaml/type/map.js","hash":"2c6bd8f6087b3ba90952279dc4b40e283a6a4b7d","modified":499162500000},{"_id":"themes/kiss/node_modules/js-yaml/lib/js-yaml/type/merge.js","hash":"5b5d2be0a4ec4ca47376d88c872a2772bd876ffa","modified":499162500000},{"_id":"themes/kiss/node_modules/js-yaml/lib/js-yaml/type/null.js","hash":"5a1ca7a1f393f1a831dac6021bec81614cf483cd","modified":499162500000},{"_id":"themes/kiss/node_modules/js-yaml/lib/js-yaml/type/omap.js","hash":"27ae167ab147e1a9a155440eef86c78a6776999e","modified":499162500000},{"_id":"themes/kiss/node_modules/js-yaml/lib/js-yaml/type/pairs.js","hash":"a62980f470f956a1102ddc33a533dd356d964342","modified":499162500000},{"_id":"themes/kiss/node_modules/js-yaml/lib/js-yaml/type/seq.js","hash":"02deef81e8770ec42adf39e0ac93a8efcae87cf2","modified":499162500000},{"_id":"themes/kiss/node_modules/js-yaml/lib/js-yaml/type/set.js","hash":"54bd5eec6a8a57a8792d540f30343513077fe7e8","modified":499162500000},{"_id":"themes/kiss/node_modules/js-yaml/lib/js-yaml/type/str.js","hash":"efd9f046c952cd16f88e8b5dcdcf25f612f6974f","modified":499162500000},{"_id":"themes/kiss/node_modules/js-yaml/lib/js-yaml/type/timestamp.js","hash":"1746736bdaee28bf5cb426370fd6d1d609721fdc","modified":499162500000},{"_id":"themes/kiss/node_modules/mkdirp/node_modules/minimist/example/parse.js","hash":"7684d952ceaa32a8c9e3cd21ba26a62e7ee14387","modified":1372147306000},{"_id":"themes/kiss/node_modules/mkdirp/node_modules/minimist/test/default_bool.js","hash":"ecdb759c4275fb23bd5d072c3c6a7baa74b407c7","modified":1372147071000},{"_id":"themes/kiss/node_modules/mkdirp/node_modules/minimist/test/dash.js","hash":"27fa6e19e26916edd7fd46ccc2d0b2301b3042a3","modified":1389378397000},{"_id":"themes/kiss/node_modules/mkdirp/node_modules/minimist/test/dotted.js","hash":"51664f4efb36d519b2e439f1156e05e917c08bda","modified":1377730679000},{"_id":"themes/kiss/node_modules/mkdirp/node_modules/minimist/test/long.js","hash":"f0ccd5d55358f78efbc928753264e4a32f7724fc","modified":1372143145000},{"_id":"themes/kiss/node_modules/mkdirp/node_modules/minimist/test/parse_modified.js","hash":"5c3cf170e2a2476e0f5bfee9af78556a1958d503","modified":1372145355000},{"_id":"themes/kiss/node_modules/mkdirp/node_modules/minimist/test/whitespace.js","hash":"ea3a87137fa34c00a7d84a4d0350770e8d85ed9c","modified":1372148159000},{"_id":"themes/kiss/node_modules/mkdirp/node_modules/minimist/test/parse.js","hash":"e240ae50a049d7b4b4b625467df34bcfaef7dceb","modified":1392957961000},{"_id":"themes/kiss/node_modules/mkdirp/node_modules/minimist/test/short.js","hash":"2ce00fdfe4906fc504286974c143c4ced6a11b12","modified":1391917546000},{"_id":"themes/kiss/node_modules/resolve/test/dotdot/abc/index.js","hash":"75a341c5a597afcc451ba5003f9274296812f1b6","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/precedence/aaa/index.js","hash":"9df8fc41ba03e881b5973e6a4bfa86b2befc691e","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/resolver/baz/quux.js","hash":"db311f33466c97593aa59411fcfd87e8489d8f50","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/resolver/baz/package.json","hash":"301ce66043a920c7b2e2888275ceab76682c4ab8","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/precedence/aaa/main.js","hash":"a249855886977bc72497ea0d73d11e81681ee0e2","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/resolver/browser_field/package.json","hash":"e5a9d36b5a39fc1f1c257ca949df43dd40a265ff","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/precedence/bbb/main.js","hash":"f5572df4e3b12c2f3f0b2182f1356c5747d5d2b2","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/resolver/multirepo/lerna.json","hash":"2f90199288cb7536bdb0e7d90fd229e6469ef882","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/resolver/same_names/foo.js","hash":"78e4ad7824727cc992a33bbdd691921a503acb91","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/resolver/without_basedir/main.js","hash":"4f2254d452ca3143fe1eae6547b7589b5499a3bf","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/resolver/dot_main/package.json","hash":"ef04df0a192ddd78bfd80a66b46954d22c834839","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/resolver/dot_main/index.js","hash":"db311f33466c97593aa59411fcfd87e8489d8f50","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/resolver/invalid_main/package.json","hash":"dadae4df5e48a27a3f51de0e29352f596279eeec","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/resolver/multirepo/package.json","hash":"48afb236c2f65a33072a6752248a07f09319f43c","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/resolver/incorrect_main/index.js","hash":"a6947a6ae82fe4fc03c1447ba40f53bcd7f356dd","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/resolver/dot_slash_main/index.js","hash":"db311f33466c97593aa59411fcfd87e8489d8f50","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/resolver/incorrect_main/package.json","hash":"9d97260243d239771e501990c1a112af0eb6a912","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/resolver/dot_slash_main/package.json","hash":"9e2d048d29242da22abe8448c28ffbb836c26900","modified":499162500000},{"_id":"source/_drafts/language/han/writing/chinese-honorific-for-work-mail/快雪時晴帖.jpg","hash":"2c79022ec7ab1a4928b449c86cf58c4718905bb7","modified":1601797714825},{"_id":"source/_posts/it/java/java-basic/Untitled 4.png","hash":"af3906ce47f968ea8aded65e377c5f643aa110a8","modified":1606861210000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/resolver/mug.coffee","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/resolver/mug.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1441654384000},{"_id":"themes/kiss/node_modules/resolve/test/resolver/other_path/lib/other-lib.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":499162500000},{"_id":"source/_posts/it/java/java-collection/Untitled 5.png","hash":"922d23d15cb96dffebb5d71187bc17d8f61ae1a1","modified":1606863364000},{"_id":"source/_drafts/language/han/writing/chinese-honorific-for-work-mail/陈寅恪致函傅斯年.jpg","hash":"f4f266f6b36ed5fa4dc5e94e03bfb76ee134f472","modified":1601797714827},{"_id":"themes/kiss/node_modules/resolve/test/shadowed_core/node_modules/util/index.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/dotdot/index.js","hash":"5b0128a5e56ba3ad6252d85edecfb1cbcc58543d","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/precedence/bbb.js","hash":"185c1241b941fc83f8849e4fdaf5567ffb2a203d","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/precedence/aaa.js","hash":"9c2d3ffdc41f1567d64612167fc763c4a4390eef","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/resolver/foo.js","hash":"db311f33466c97593aa59411fcfd87e8489d8f50","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/resolver/cup.coffee","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/rimraf/node_modules/glob/changelog.md","hash":"97bfa68176e50777c07a7ba58f98ff7a1730ac00","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt/node_modules/rimraf/node_modules/glob/README.md","hash":"c5f4172644ce2149e457e2919fdb1a67c4cc33f3","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt/node_modules/rimraf/node_modules/glob/glob.js","hash":"c2e95cdccba36eaca7b12e2bcf9b383438cee52d","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt/node_modules/rimraf/node_modules/glob/common.js","hash":"2f948b495467f2a7ac0afbb1008af557ab040143","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt/node_modules/rimraf/node_modules/glob/package.json","hash":"4e0b4e2ed1fedea85a0fadd0717c484a38695fef","modified":1606920509148},{"_id":"themes/kiss/node_modules/grunt/node_modules/rimraf/node_modules/glob/sync.js","hash":"7482bc56682b97175655976b07044afcb65b0cc9","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt-contrib-copy/test/expected/copy_test_mix/folder_one/one.js","hash":"0c9b71f364d1b4a0da2037c8d663abb778b4b865","modified":1363299392000},{"_id":"themes/kiss/node_modules/grunt/node_modules/rimraf/node_modules/glob/LICENSE","hash":"35325ce350b66f071997ac573a97eca7e2e4f558","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt-contrib-copy/test/expected/copy_test_mix/folder_two/two.js","hash":"9971ef6e49cf03ae10f142377dcf12e69a6d4063","modified":1363299392000},{"_id":"themes/kiss/node_modules/js-yaml/lib/js-yaml/type/js/regexp.js","hash":"fa2f404f30b0588703ca112e9ef53eee3d61ad6f","modified":499162500000},{"_id":"themes/kiss/node_modules/js-yaml/lib/js-yaml/type/js/function.js","hash":"495916644b7267794291ceb743aba58eab2b45be","modified":499162500000},{"_id":"themes/kiss/node_modules/js-yaml/lib/js-yaml/type/js/undefined.js","hash":"6ceced3a6cd321903999162508c5ba156a08d3f3","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt-contrib-copy/test/expected/copy_test_v0.1.0/folder_one/one.js","hash":"0c9b71f364d1b4a0da2037c8d663abb778b4b865","modified":1363299392000},{"_id":"themes/kiss/node_modules/resolve/test/module_dir/zmodules/bbb/package.json","hash":"3d33fb74a6cd3a549dbae1cbe22a7c2f337f978e","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/module_dir/xmodules/aaa/index.js","hash":"6aea6dcd513182cb731f5308d9d2ea7eabcf7238","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/node_path/x/aaa/index.js","hash":"26511efb84a1f92575b6c931cecaa00e34fc0dca","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/module_dir/zmodules/bbb/main.js","hash":"e092fb98827562249de8987301d963c1eab4245c","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/node_path/y/ccc/index.js","hash":"d85cf7f3160ae2e3e717618e36e6cdc54f5a4c7e","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/node_path/x/ccc/index.js","hash":"4a8dca740e3289ae35eec3a38034d689e1302566","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/module_dir/ymodules/aaa/index.js","hash":"9d4cf3bca48e8d535383f20e7be1b4895aacc0cb","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/node_path/y/bbb/index.js","hash":"a4049c58697f685aca34a1cefa2e664036505bef","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/resolver/nested_symlinks/mylib/package.json","hash":"0803d5d30c2a6fec04f09b9969969a91743b28cf","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/resolver/nested_symlinks/mylib/async.js","hash":"c4e0eb667d40d721e5fc2169c677edde79f5a4cf","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/resolver/nested_symlinks/mylib/sync.js","hash":"95e39d60b6e68a77d8228762ca54bd7ac5dbbb63","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/resolver/same_names/foo/index.js","hash":"db311f33466c97593aa59411fcfd87e8489d8f50","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/resolver/symlinked/package/package.json","hash":"f6a7bcb57504bb123afb127e0e6cf37f854adf22","modified":499162500000},{"_id":"source/_drafts/language/han/writing/chinese-honorific-for-work-mail/中文祝颂词分析.jpg","hash":"8ddc17087266a2ef508341e90ca00365df9cc913","modified":1601797714823},{"_id":"themes/kiss/node_modules/resolve/test/resolver/quux/foo/index.js","hash":"db311f33466c97593aa59411fcfd87e8489d8f50","modified":499162500000},{"_id":"source/_posts/it/java/java-basic/Untitled 3.png","hash":"f21a829671bd0c8e3bcab7d20e7a390363509871","modified":1606861210000},{"_id":"themes/kiss/node_modules/resolve/test/resolver/symlinked/package/bar.js","hash":"8a6541bf7272ecaa387099d8de05e86ff6a25cf1","modified":499162500000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/resolver/baz/doom.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/pathfilter/deep_ref/main.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/resolver/other_path/root.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1441654384000},{"_id":"themes/kiss/node_modules/resolve/test/resolver/symlinked/_/node_modules/foo.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/resolver/symlinked/_/symlink_target/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/resolver/multirepo/packages/package-b/index.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":499162500000},{"_id":"source/_drafts/language/han/writing/chinese-honorific-for-work-mail/jp-mail-example.jpg","hash":"28efcda0e32946377e5ea26a32d886195af0a45e","modified":1601797714822},{"_id":"source/_drafts/language/han/writing/chinese-honorific-for-work-mail/english-mail-example.jpg","hash":"b4f4c98ed766e33187cdcb6c9e0cf5bf9a45d9ce","modified":1601797714820},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/dotdot/abc/index.js","hash":"75a341c5a597afcc451ba5003f9274296812f1b6","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/precedence/aaa/index.js","hash":"b35cd29e4afa6af8c491dcea649f75e1eb1a33de","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/precedence/aaa/main.js","hash":"6abb061dc5fe8032ac292fa5701a1c79a8aac229","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/precedence/bbb/main.js","hash":"f5572df4e3b12c2f3f0b2182f1356c5747d5d2b2","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/resolver/baz/quux.js","hash":"db311f33466c97593aa59411fcfd87e8489d8f50","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/resolver/baz/package.json","hash":"54931d5f8e2eeaf618a6f621ba26554ec56395bb","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/resolver/incorrect_main/package.json","hash":"fd4f09f8d82645ce1701105eff34bf2e494c5496","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/resolver/without_basedir/main.js","hash":"25ccf64a8f231b3cdf853f87a8b525dae9ff71ac","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/resolver/incorrect_main/index.js","hash":"a6947a6ae82fe4fc03c1447ba40f53bcd7f356dd","modified":1441654384000},{"_id":"themes/kiss/node_modules/lodash/lodash.js","hash":"9b8862d749672156a62da0e842c66967ff6cd307","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/resolver/multirepo/packages/package-a/package.json","hash":"3926c908fd9627cc3e3094edf3a7fc547d4871a6","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/resolver/multirepo/packages/package-b/package.json","hash":"9e0fcac261c4f4c0e6cbd05fd95ed904a9fe4b5b","modified":499162500000},{"_id":"themes/kiss/node_modules/resolve/test/resolver/multirepo/packages/package-a/index.js","hash":"1e4e849383d160b4db1ff0668c7fadad0622b2cc","modified":499162500000},{"_id":"source/_posts/it/java/java-basic/Untitled 2.png","hash":"36b1886c415bc0d597baaa227f833144132032ff","modified":1606861210000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/resolver/other_path/lib/other-lib.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/module_dir/ymodules/aaa/index.js","hash":"8ab905ac897199b408f3f5ac70425ba60b9d1b39","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/node_path/x/ccc/index.js","hash":"e95339b8e0538902fa7d20e9b748ecc176027ec7","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/node_path/x/aaa/index.js","hash":"4b616d6a3e49ec0b9f8a40b07940fc9334ae3184","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/node_path/y/ccc/index.js","hash":"a87ca222379cef10ef65b62af862d8c09faba847","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/node_path/y/bbb/index.js","hash":"329bb0d7e23f441afac2d205ce0bab1243bb1015","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/module_dir/zmodules/bbb/main.js","hash":"a860711dfe0ed743e04b756897cfd2138559f132","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/module_dir/zmodules/bbb/package.json","hash":"3d33fb74a6cd3a549dbae1cbe22a7c2f337f978e","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/module_dir/xmodules/aaa/index.js","hash":"801190a884bb0ba8ef3457b4bcf99d45ec6fb7a7","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/subdirs/node_modules/a/package.json","hash":"5f36b2ea290645ee34d943220a14b54ee5ea5be5","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/resolver/without_basedir/node_modules/mymodule.js","hash":"b83c2c7272a70eef84d040fcbb0d242cbf097401","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/resolver/quux/foo/index.js","hash":"db311f33466c97593aa59411fcfd87e8489d8f50","modified":1441654384000},{"_id":"source/_posts/language/min/teochew-kahtsi-vowel/202010042112.png","hash":"0b9ffd6564070d7d913668a0aa3dfa827eab26e8","modified":1601817258266},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/resolver/punycode/node_modules/punycode/index.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/pathfilter/deep_ref/node_modules/deep/ref.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/pathfilter/deep_ref/node_modules/deep/alt.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/resolver/biz/node_modules/grux/index.js","hash":"1f635b4510e5b264b28f30aca962532ab9910369","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/resolver/biz/node_modules/garply/package.json","hash":"d5e686ccafe95b49e0a490a87b48806dc9e0f414","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/resolver/biz/node_modules/tiv/index.js","hash":"919de504e19923d1e97ef0120f16ab6865f29199","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/resolver/bar/node_modules/foo/index.js","hash":"db311f33466c97593aa59411fcfd87e8489d8f50","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/pathfilter/deep_ref/node_modules/deep/package.json","hash":"c6c96ed588e3fa739dc992ba839fa2778f4bf3f2","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/pathfilter/deep_ref/node_modules/deep/deeper/ref.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/resolver/biz/node_modules/garply/lib/index.js","hash":"4fc15ac60cee1ae77330c29258ce01f70ca58694","modified":1441654384000},{"_id":"themes/kiss/node_modules/grunt/node_modules/resolve/test/subdirs/node_modules/a/b/c/x.json","hash":"57c19b58491c01c3c7f38d8d12f4a698aff6b9f2","modified":1441654384000},{"_id":"source/_posts/it/java/java-collection/Untitled.png","hash":"7a36813b6140feab84abce77938e837272413355","modified":1606863364000},{"_id":"source/_posts/language/min/teochew-opera-ghêgdengcung/2020-10-15-1.11.30.png","hash":"1ff30cad5d55cf8320e0965be31810db278f4522","modified":1602739655500},{"_id":"source/_posts/language/min/teochew-opera-ghêgdengcung/2020-10-15-1.10.20.png","hash":"8fd5a50fb29b7d581d4cc3c99f25aba06d3a9b95","modified":1602739647334},{"_id":"source/_posts/language/min/teochew-opera-ghêgdengcung/2020-10-15-1.12.28.png","hash":"4c88e38f46e12a86b53682f31d3aa56cb8b66e2b","modified":1602739661299},{"_id":"source/_posts/language/min/teochew-opera-ghêgdengcung/2020-10-14-12.41.34.png","hash":"6cfc945d1177754ccf8834ca1be4309bd5b512a7","modified":1602739639687},{"_id":"public/atom.xml","hash":"95f9c679e74354d217bbfb620d8fd60a76ee4d38","modified":1606925773568},{"_id":"public/2019/09/01/Hello/index.html","hash":"7929cbacd55b6ba4ceabc6b4e7f2608e7216d146","modified":1606925773741},{"_id":"public/archives/index.html","hash":"9f420a3020c016962af9b35a53c5fe1d359bee09","modified":1606925773741},{"_id":"public/archives/2019/index.html","hash":"19e0a08427058fc88afd22962c6c1b824291ad97","modified":1606925773741},{"_id":"public/archives/2019/09/index.html","hash":"a611600ca258346ffe8ad1a82817ba361f984557","modified":1606925773741},{"_id":"public/archives/2020/index.html","hash":"ac6897c18de466f78c61c178493bf2148fab1802","modified":1606925773741},{"_id":"public/archives/2020/10/index.html","hash":"98204b2606dad4f9f838224d02e39ef136224141","modified":1606925773741},{"_id":"public/archives/2020/12/index.html","hash":"d9d3056255faafe3372aabfc4a6281170e692ffd","modified":1606925773741},{"_id":"public/tags/Hello/index.html","hash":"9fd32db81dc5de230eca38950ed64a964d1c1b57","modified":1606925773741},{"_id":"public/tags/聆聽音樂/index.html","hash":"2920aeab5e021eeae7912ea2285e2cc7e38d3669","modified":1606925773741},{"_id":"public/tags/日本語/index.html","hash":"f135d87bb2cf6c59c8701b34b297ffcd562b8ad3","modified":1606925773741},{"_id":"public/tags/Java/index.html","hash":"1bd86d90ec3f90f7521d6ac997f17e8ad50afbf1","modified":1606925773741},{"_id":"public/tags/詩經/index.html","hash":"472ac3406f3f92e1c28cd45f9556e1cb47198445","modified":1606925773741},{"_id":"public/tags/甲子話/index.html","hash":"a2572a6ad4f7233cc01327aa2340d921985726c1","modified":1606925773741},{"_id":"public/tags/閩南語/index.html","hash":"573f5592d9b8d5565e8e7e1a251de64fc3d033a8","modified":1606925773741},{"_id":"public/tags/潮州話/index.html","hash":"a3e22ca77504de2b5ec6973760078a96afbb88f5","modified":1606925773741},{"_id":"public/tags/潮劇/index.html","hash":"2c3424f6d76009d74cf81ba3c8a03e8394d64335","modified":1606925773741},{"_id":"public/2020/12/02/it/java/java-collection/index.html","hash":"1a9cebefb81123619ef752467eb92a561b9d18df","modified":1606925773741},{"_id":"public/2020/12/02/it/java/java-basic/index.html","hash":"4d6b7f6882edd64b656b4c06eda670a9f8b4e826","modified":1606925773741},{"_id":"public/2020/10/15/language/min/teochew-opera-ghêgdengcung/index.html","hash":"e93dbc387565d4c752cb5b8d1366c8c9d3154b33","modified":1606925773741},{"_id":"public/2020/10/11/music/listen-chopin-raindrop/index.html","hash":"8c54fa7e4f5a981e5dc8683db3baf4658eb62620","modified":1606925773741},{"_id":"public/2020/10/06/language/min/sigêng-giamgia/index.html","hash":"9bd49ab46a3b6a2b7528726f59b70620df9f6273","modified":1606925773741},{"_id":"public/2020/10/04/language/min/teochew-kahtsi-vowel/index.html","hash":"bae29616bdbd9e5ba89414bb3c722a32598c9497","modified":1606925773741},{"_id":"public/2020/10/04/language/jp/keitai-de-nihongo/index.html","hash":"913a1390428484ae0f589c0b77acddcac52a3638","modified":1606925773742},{"_id":"public/index.html","hash":"f005ed8245b7115420ecbd5d7497d180d0c3cc06","modified":1606925773742},{"_id":"public/robots.txt","hash":"be8d5ab7132ac74a9375439e438b00b8c91e50b4","modified":1606925773742},{"_id":"public/README.md","hash":"933b824f5bee4a6d4f81fc25d0a683aec450918b","modified":1606925773742},{"_id":"public/favicon.ico","hash":"8ea7fb25464a2608b774153fe6731fd8fd82c1b0","modified":1606925773742},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1606925773742},{"_id":"public/music.png","hash":"3ca73e04c922de92ffb44d6fe4c698720f85b041","modified":1606925773742},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1606925773746},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1606925773746},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1606925773746},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1606925773746},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1606925773746},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1606925773746},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1606925773746},{"_id":"public/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1606925773746},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1606925773746},{"_id":"public/2020/10/11/music/listen-chopin-raindrop/cdefgab.jpg","hash":"ce62e60f342c7565b3836eaeffe1bdcdb8e25fb1","modified":1606925773746},{"_id":"public/2020/10/11/music/listen-chopin-raindrop/piano-keys.gif","hash":"db1a2b3d591cfb88fe67069f81b91746aa38039a","modified":1606925773747},{"_id":"public/2020/10/06/language/min/sigêng-giamgia/202010060948.jpg","hash":"abcd4e4bc5aeb9b8a1263329adae6b525101d7f6","modified":1606925773747},{"_id":"public/2020/12/02/it/java/java-basic/20201114_101407.png","hash":"1cdd3a0dc66cb17e34926515dbd121738708761c","modified":1606925773747},{"_id":"public/2020/12/02/it/java/java-collection/Untitled 1.png","hash":"bd4f8e27ff98fce5547f1f4b277ad4debc4f2ca9","modified":1606925773747},{"_id":"public/2020/12/02/it/java/java-collection/Untitled 2.png","hash":"7ff8b589f12130fb2e71530aa5e43aff912ac2a6","modified":1606925773747},{"_id":"public/2020/12/02/it/java/java-collection/Untitled 3.png","hash":"b032986e28a9202479cd743464809b53668cd6b4","modified":1606925773747},{"_id":"public/2020/10/04/language/han/writing/chinese-honorific-for-work-mail/公函一.jpg","hash":"d10d31eb05040d107d206044be07d19ee641c6d7","modified":1606925773747},{"_id":"public/2020/10/04/language/han/writing/chinese-honorific-for-work-mail/公函二.jpg","hash":"dca3c41d60237ef9b62cb631b3964a3b04185a3d","modified":1606925773747},{"_id":"public/assets/js/Meting.min.js","hash":"a0585220b918d78649a7893279e1ec4fb5abe835","modified":1606925773747},{"_id":"public/assets/js/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1606925773747},{"_id":"public/assets/css/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1606925773747},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1606925774397},{"_id":"public/2020/12/02/it/java/java-basic/20201202_24328.png","hash":"c992fe54e126ad45512d012b8bf6dcb6a5e36533","modified":1606925774398},{"_id":"public/2020/12/02/it/java/java-basic/Untitled.png","hash":"7feeb782152cb8ddc3c2fb39626145920a92062a","modified":1606925774398},{"_id":"public/2020/10/04/language/han/writing/chinese-honorific-for-work-mail/快雪時晴帖.jpg","hash":"2c79022ec7ab1a4928b449c86cf58c4718905bb7","modified":1606925774398},{"_id":"public/2020/12/02/it/java/java-collection/Untitled 4.png","hash":"2ddf731a2d67a0b5ff4ee6fbe7f77c5e0afcb484","modified":1606925774398},{"_id":"public/2020/12/02/it/java/java-collection/Untitled 6.png","hash":"e31adbdb1887144a8308143ae300d74e0eda4180","modified":1606925774398},{"_id":"public/2020/10/04/language/han/writing/chinese-honorific-for-work-mail/现代电子邮件公函格式.jpg","hash":"b3c15b50a69e62e182066cdb4b4ad465b6a56676","modified":1606925774398},{"_id":"public/2020/12/02/it/java/java-basic/Untitled 1.png","hash":"b0ff3f9c9afb47aa3ec4ae861b96f91ba225de2a","modified":1606925774398},{"_id":"public/js/script.js","hash":"63c21efc77abda2eec546d66ee832fc9776edabd","modified":1606925774406},{"_id":"public/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1606925774406},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1606925774406},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1606925774407},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1606925774407},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1606925774407},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1606925774407},{"_id":"public/css/style.css","hash":"ae96d9dd55eef5176b116477d044755d5b73867c","modified":1606925774407},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1606925774407},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1606925774407},{"_id":"public/2020/10/06/language/min/sigêng-giamgia/蒹葭.m4a","hash":"9b489081647694ae1fa69bf4712934565c8a11e3","modified":1606925774407},{"_id":"public/2020/10/04/language/han/writing/chinese-honorific-for-work-mail/陈寅恪致函傅斯年.jpg","hash":"f4f266f6b36ed5fa4dc5e94e03bfb76ee134f472","modified":1606925774411},{"_id":"public/2020/10/04/language/han/writing/chinese-honorific-for-work-mail/中文祝颂词分析.jpg","hash":"8ddc17087266a2ef508341e90ca00365df9cc913","modified":1606925774411},{"_id":"public/2020/10/04/language/han/writing/chinese-honorific-for-work-mail/english-mail-example.jpg","hash":"b4f4c98ed766e33187cdcb6c9e0cf5bf9a45d9ce","modified":1606925774411},{"_id":"public/assets/js/DPlayer.min.js","hash":"490148a22ab2b03a880495cc733ecd1840c02ed6","modified":1606925774411},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1606925774413},{"_id":"public/css/images/moon.jpg","hash":"798c8924ee26b8f402054d6ed5743a18ba9226df","modified":1606925774413},{"_id":"public/2020/12/02/it/java/java-collection/Untitled 5.png","hash":"922d23d15cb96dffebb5d71187bc17d8f61ae1a1","modified":1606925774414},{"_id":"public/2020/10/04/language/han/writing/chinese-honorific-for-work-mail/jp-mail-example.jpg","hash":"28efcda0e32946377e5ea26a32d886195af0a45e","modified":1606925774414},{"_id":"public/2020/12/02/it/java/java-basic/Untitled 4.png","hash":"af3906ce47f968ea8aded65e377c5f643aa110a8","modified":1606925774416},{"_id":"public/2020/12/02/it/java/java-basic/Untitled 3.png","hash":"f21a829671bd0c8e3bcab7d20e7a390363509871","modified":1606925774416},{"_id":"public/2020/10/04/language/min/teochew-kahtsi-vowel/202010042112.png","hash":"0b9ffd6564070d7d913668a0aa3dfa827eab26e8","modified":1606925774432},{"_id":"public/2020/12/02/it/java/java-basic/Untitled 2.png","hash":"36b1886c415bc0d597baaa227f833144132032ff","modified":1606925774432},{"_id":"public/2020/12/02/it/java/java-collection/Untitled.png","hash":"7a36813b6140feab84abce77938e837272413355","modified":1606925774438},{"_id":"public/2020/10/15/language/min/teochew-opera-ghêgdengcung/2020-10-15-1.10.20.png","hash":"8fd5a50fb29b7d581d4cc3c99f25aba06d3a9b95","modified":1606925774463},{"_id":"public/2020/10/15/language/min/teochew-opera-ghêgdengcung/2020-10-15-1.11.30.png","hash":"1ff30cad5d55cf8320e0965be31810db278f4522","modified":1606925774464},{"_id":"public/2020/10/15/language/min/teochew-opera-ghêgdengcung/2020-10-15-1.12.28.png","hash":"4c88e38f46e12a86b53682f31d3aa56cb8b66e2b","modified":1606925774465},{"_id":"public/2020/10/15/language/min/teochew-opera-ghêgdengcung/2020-10-14-12.41.34.png","hash":"6cfc945d1177754ccf8834ca1be4309bd5b512a7","modified":1606925774476}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"Hello World","date":"2019-09-01T09:02:23.000Z","_content":"\n汝好，世界\n\n幸會，世界\n\n您好，世界\n\nHello World\n\nこんにちは、世界\n\n\n\n\n\n","source":"_posts/Hello.md","raw":"---\ntitle: Hello World\ndate: 2019-09-01 17:02:23\ntags: Hello\n---\n\n汝好，世界\n\n幸會，世界\n\n您好，世界\n\nHello World\n\nこんにちは、世界\n\n\n\n\n\n","slug":"Hello","published":1,"updated":"2020-10-04T08:25:37.030Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cki7m45ef000086w858txruhy","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css\"><p>汝好，世界</p>\n<p>幸會，世界</p>\n<p>您好，世界</p>\n<p>Hello World</p>\n<p>こんにちは、世界</p>\n","site":{"data":{}},"excerpt":"","more":"<p>汝好，世界</p>\n<p>幸會，世界</p>\n<p>您好，世界</p>\n<p>Hello World</p>\n<p>こんにちは、世界</p>\n"},{"title":"聆聽音樂：蕭邦之「雨滴」","p":"music/listen-chopin-raindrop","_content":"\n我發現聆聽音樂在提高自身的音樂素養的同時還可以提高自己的想像力，進而提高記憶力，實在是一舉多得。從今往後，我要多多聆聽，多多分享有感覺的音樂吶。\n\n今天點到蕭邦的「雨滴」，其全名爲 Prelude Op. 28 No. 15 Db major (Raindrop)，網易雲音樂上又寫成 Prélude in D:Flat Major, Op. 28, No. 15，是同樣的（繼續讀下去就知道爲什麼），翻譯成中文就是：降 D 大調前奏曲, 作品28之15。先來與君共賞。\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=554424111&auto=1&height=66\"></iframe>\n\n<!--more-->\n\n## 聽後感\n\n正開始時節奏平和而又纏綿多情。在阿爾卑斯山上，夕陽投射在我一家四口的臉上，暖暖的。我們趕著羊群正要回家。此時雲層似乎漸漸厚了起來，天慢慢暗了下來，我們依舊踏著幸福的步伐。\n\n翻過一個山坡之後，烏雲罩日，天昏地暗，狂風暴雨迅猛襲來，羊群四散，叫人難以抵抗，只能作痛苦狀。好不容易到達小木屋，卻發現小木屋被刮走了，我們緊緊地依偎在一起，雨淚俱下。所幸家人都在，生活還可以繼續，曲調又回歸到原本的平靜。\n\n## 音樂筆記\n\n### Prélude\nPrélude：法語，英文爲Prelude， 意爲前奏曲。\n常見的音樂體裁還有：\n- Ballade 敘事曲\n- Concerto 協奏曲\n- Etude 練習曲\n- Fuga 賦格\n- Impromptu 即興曲\n- Menuet 小步舞曲\n- Overture 序曲\n- Prelude 前奏曲\n- Sonata 奏鳴曲\n- String Quartet 弦樂四重奏\n- Suite 組曲\n- Symphony 交響曲\n- Violin Concerto 小提請協奏曲\n- Waltz 圓舞曲\n\n### D Flat / Db\nD Flat / Db：降D\n相關符號有：\n-  ♯ （也用 # 簡記），升號，英文 sharp，表示音高升半個音；\n- ♭（也用 b 簡記），降號，英文 flat，表示音高降低半個音；\n- ♮，還原號，英文natural，表示復歸原先的音高。\n\n### Major\n**major 大調**\n![](cdefgab.jpg)\n名詞解釋：\n- 簡譜：用數字表示音的簡單記譜方式\n- 音名：音的名字\n- 唱名：音的唱法\n- 距離：代表兩個音之間的距離\n- 半音：最靠近的兩個音之間的距離\n- 全音：1全音 = 1半音 + 1半音\n![](piano-keys.gif)\nE－F 之間沒有黑鍵 ，所以 E－F 的距離是半音，B－C 同理。\n\n記憶方法：\n1\tDo\tC\t這個不需要想，也很直覺，乾脆就直接背了\n2\tRe\tD\tDouble 跟 Repeat 都可以聯想到 2\n3\tMi\tE\t3 M E 都長的很像\n4\tFa\tF\t4 的英文單字是 Four\n5\tSol\tG\t你跟別人 Give me five 是用手 (Sol) 來的\n6\tLa\tA\t六的閩南語念成什麼? 尾音 A\n7\tSi\tB\t七夕(Si)。 SB\n\n音與音之間的距離符合全全半全全全半的八個音，就稱為大調音階。例如：\n- C Major：C D E F G A B C\n- Db Major：Db Eb F Gb Ab Bb C Db\n\n**minor 小調**\n音與音之間的距離符合全半全全半全全的八個音，就稱為自然小音階/小調。\n\n### Op. 28 , No. 15\nOp. 28 , No. 15：作品 28 之 15\nOp.，拉丁文 Opus，著作，尤指編號的音樂作品。\nNo.，Number，編號。\n\n## 參考\n1. [ 音階與調性 ](http://www.dancepiano.com/scalechar.aspx \"音階與調性\")\n2. [ 必學基礎樂理：音階/簡譜/音名/唱名 ](https://www.guitar.com.tw/basic-music-theory/ \"必學基礎樂理：音階/簡譜/音名/唱名\")\n3. [ 音階基本概念 ](http://www.rexchow.com/students/theory/music_theory_01_basic_concept_on_scales.pdf \"音階基本概念\")\n\n\n","source":"_posts/music/listen-chopin-raindrop.md","raw":"---\ntitle: 聆聽音樂：蕭邦之「雨滴」\np: music/listen-chopin-raindrop\ntags:\n- 聆聽音樂\n---\n\n我發現聆聽音樂在提高自身的音樂素養的同時還可以提高自己的想像力，進而提高記憶力，實在是一舉多得。從今往後，我要多多聆聽，多多分享有感覺的音樂吶。\n\n今天點到蕭邦的「雨滴」，其全名爲 Prelude Op. 28 No. 15 Db major (Raindrop)，網易雲音樂上又寫成 Prélude in D:Flat Major, Op. 28, No. 15，是同樣的（繼續讀下去就知道爲什麼），翻譯成中文就是：降 D 大調前奏曲, 作品28之15。先來與君共賞。\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=554424111&auto=1&height=66\"></iframe>\n\n<!--more-->\n\n## 聽後感\n\n正開始時節奏平和而又纏綿多情。在阿爾卑斯山上，夕陽投射在我一家四口的臉上，暖暖的。我們趕著羊群正要回家。此時雲層似乎漸漸厚了起來，天慢慢暗了下來，我們依舊踏著幸福的步伐。\n\n翻過一個山坡之後，烏雲罩日，天昏地暗，狂風暴雨迅猛襲來，羊群四散，叫人難以抵抗，只能作痛苦狀。好不容易到達小木屋，卻發現小木屋被刮走了，我們緊緊地依偎在一起，雨淚俱下。所幸家人都在，生活還可以繼續，曲調又回歸到原本的平靜。\n\n## 音樂筆記\n\n### Prélude\nPrélude：法語，英文爲Prelude， 意爲前奏曲。\n常見的音樂體裁還有：\n- Ballade 敘事曲\n- Concerto 協奏曲\n- Etude 練習曲\n- Fuga 賦格\n- Impromptu 即興曲\n- Menuet 小步舞曲\n- Overture 序曲\n- Prelude 前奏曲\n- Sonata 奏鳴曲\n- String Quartet 弦樂四重奏\n- Suite 組曲\n- Symphony 交響曲\n- Violin Concerto 小提請協奏曲\n- Waltz 圓舞曲\n\n### D Flat / Db\nD Flat / Db：降D\n相關符號有：\n-  ♯ （也用 # 簡記），升號，英文 sharp，表示音高升半個音；\n- ♭（也用 b 簡記），降號，英文 flat，表示音高降低半個音；\n- ♮，還原號，英文natural，表示復歸原先的音高。\n\n### Major\n**major 大調**\n![](cdefgab.jpg)\n名詞解釋：\n- 簡譜：用數字表示音的簡單記譜方式\n- 音名：音的名字\n- 唱名：音的唱法\n- 距離：代表兩個音之間的距離\n- 半音：最靠近的兩個音之間的距離\n- 全音：1全音 = 1半音 + 1半音\n![](piano-keys.gif)\nE－F 之間沒有黑鍵 ，所以 E－F 的距離是半音，B－C 同理。\n\n記憶方法：\n1\tDo\tC\t這個不需要想，也很直覺，乾脆就直接背了\n2\tRe\tD\tDouble 跟 Repeat 都可以聯想到 2\n3\tMi\tE\t3 M E 都長的很像\n4\tFa\tF\t4 的英文單字是 Four\n5\tSol\tG\t你跟別人 Give me five 是用手 (Sol) 來的\n6\tLa\tA\t六的閩南語念成什麼? 尾音 A\n7\tSi\tB\t七夕(Si)。 SB\n\n音與音之間的距離符合全全半全全全半的八個音，就稱為大調音階。例如：\n- C Major：C D E F G A B C\n- Db Major：Db Eb F Gb Ab Bb C Db\n\n**minor 小調**\n音與音之間的距離符合全半全全半全全的八個音，就稱為自然小音階/小調。\n\n### Op. 28 , No. 15\nOp. 28 , No. 15：作品 28 之 15\nOp.，拉丁文 Opus，著作，尤指編號的音樂作品。\nNo.，Number，編號。\n\n## 參考\n1. [ 音階與調性 ](http://www.dancepiano.com/scalechar.aspx \"音階與調性\")\n2. [ 必學基礎樂理：音階/簡譜/音名/唱名 ](https://www.guitar.com.tw/basic-music-theory/ \"必學基礎樂理：音階/簡譜/音名/唱名\")\n3. [ 音階基本概念 ](http://www.rexchow.com/students/theory/music_theory_01_basic_concept_on_scales.pdf \"音階基本概念\")\n\n\n","slug":"music/listen-chopin-raindrop","published":1,"date":"2020-10-11T14:44:31.951Z","updated":"2020-10-11T15:46:33.810Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cki7m45im000386w8o36pogdc","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css\"><p>我發現聆聽音樂在提高自身的音樂素養的同時還可以提高自己的想像力，進而提高記憶力，實在是一舉多得。從今往後，我要多多聆聽，多多分享有感覺的音樂吶。</p>\n<p>今天點到蕭邦的「雨滴」，其全名爲 Prelude Op. 28 No. 15 Db major (Raindrop)，網易雲音樂上又寫成 Prélude in D:Flat Major, Op. 28, No. 15，是同樣的（繼續讀下去就知道爲什麼），翻譯成中文就是：降 D 大調前奏曲, 作品28之15。先來與君共賞。</p>\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"86\" src=\"//music.163.com/outchain/player?type=2&id=554424111&auto=1&height=66\"></iframe>\n\n<a id=\"more\"></a>\n\n<h2 id=\"聽後感\"><a href=\"#聽後感\" class=\"headerlink\" title=\"聽後感\"></a>聽後感</h2><p>正開始時節奏平和而又纏綿多情。在阿爾卑斯山上，夕陽投射在我一家四口的臉上，暖暖的。我們趕著羊群正要回家。此時雲層似乎漸漸厚了起來，天慢慢暗了下來，我們依舊踏著幸福的步伐。</p>\n<p>翻過一個山坡之後，烏雲罩日，天昏地暗，狂風暴雨迅猛襲來，羊群四散，叫人難以抵抗，只能作痛苦狀。好不容易到達小木屋，卻發現小木屋被刮走了，我們緊緊地依偎在一起，雨淚俱下。所幸家人都在，生活還可以繼續，曲調又回歸到原本的平靜。</p>\n<h2 id=\"音樂筆記\"><a href=\"#音樂筆記\" class=\"headerlink\" title=\"音樂筆記\"></a>音樂筆記</h2><h3 id=\"Prelude\"><a href=\"#Prelude\" class=\"headerlink\" title=\"Prélude\"></a>Prélude</h3><p>Prélude：法語，英文爲Prelude， 意爲前奏曲。<br>常見的音樂體裁還有：</p>\n<ul>\n<li>Ballade 敘事曲</li>\n<li>Concerto 協奏曲</li>\n<li>Etude 練習曲</li>\n<li>Fuga 賦格</li>\n<li>Impromptu 即興曲</li>\n<li>Menuet 小步舞曲</li>\n<li>Overture 序曲</li>\n<li>Prelude 前奏曲</li>\n<li>Sonata 奏鳴曲</li>\n<li>String Quartet 弦樂四重奏</li>\n<li>Suite 組曲</li>\n<li>Symphony 交響曲</li>\n<li>Violin Concerto 小提請協奏曲</li>\n<li>Waltz 圓舞曲</li>\n</ul>\n<h3 id=\"D-Flat-Db\"><a href=\"#D-Flat-Db\" class=\"headerlink\" title=\"D Flat / Db\"></a>D Flat / Db</h3><p>D Flat / Db：降D<br>相關符號有：</p>\n<ul>\n<li>♯ （也用 # 簡記），升號，英文 sharp，表示音高升半個音；</li>\n<li>♭（也用 b 簡記），降號，英文 flat，表示音高降低半個音；</li>\n<li>♮，還原號，英文natural，表示復歸原先的音高。</li>\n</ul>\n<h3 id=\"Major\"><a href=\"#Major\" class=\"headerlink\" title=\"Major\"></a>Major</h3><p><strong>major 大調</strong><br><img src=\"/2020/10/11/music/listen-chopin-raindrop/cdefgab.jpg\" alt><br>名詞解釋：</p>\n<ul>\n<li>簡譜：用數字表示音的簡單記譜方式</li>\n<li>音名：音的名字</li>\n<li>唱名：音的唱法</li>\n<li>距離：代表兩個音之間的距離</li>\n<li>半音：最靠近的兩個音之間的距離</li>\n<li>全音：1全音 = 1半音 + 1半音<br><img src=\"/2020/10/11/music/listen-chopin-raindrop/piano-keys.gif\" alt><br>E－F 之間沒有黑鍵 ，所以 E－F 的距離是半音，B－C 同理。</li>\n</ul>\n<p>記憶方法：<br>1    Do    C    這個不需要想，也很直覺，乾脆就直接背了<br>2    Re    D    Double 跟 Repeat 都可以聯想到 2<br>3    Mi    E    3 M E 都長的很像<br>4    Fa    F    4 的英文單字是 Four<br>5    Sol    G    你跟別人 Give me five 是用手 (Sol) 來的<br>6    La    A    六的閩南語念成什麼? 尾音 A<br>7    Si    B    七夕(Si)。 SB</p>\n<p>音與音之間的距離符合全全半全全全半的八個音，就稱為大調音階。例如：</p>\n<ul>\n<li>C Major：C D E F G A B C</li>\n<li>Db Major：Db Eb F Gb Ab Bb C Db</li>\n</ul>\n<p><strong>minor 小調</strong><br>音與音之間的距離符合全半全全半全全的八個音，就稱為自然小音階/小調。</p>\n<h3 id=\"Op-28-No-15\"><a href=\"#Op-28-No-15\" class=\"headerlink\" title=\"Op. 28 , No. 15\"></a>Op. 28 , No. 15</h3><p>Op. 28 , No. 15：作品 28 之 15<br>Op.，拉丁文 Opus，著作，尤指編號的音樂作品。<br>No.，Number，編號。</p>\n<h2 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h2><ol>\n<li><a href=\"http://www.dancepiano.com/scalechar.aspx\" title=\"音階與調性\" target=\"_blank\" rel=\"noopener\"> 音階與調性 </a></li>\n<li><a href=\"https://www.guitar.com.tw/basic-music-theory/\" title=\"必學基礎樂理：音階/簡譜/音名/唱名\" target=\"_blank\" rel=\"noopener\"> 必學基礎樂理：音階/簡譜/音名/唱名 </a></li>\n<li><a href=\"http://www.rexchow.com/students/theory/music_theory_01_basic_concept_on_scales.pdf\" title=\"音階基本概念\" target=\"_blank\" rel=\"noopener\"> 音階基本概念 </a></li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>我發現聆聽音樂在提高自身的音樂素養的同時還可以提高自己的想像力，進而提高記憶力，實在是一舉多得。從今往後，我要多多聆聽，多多分享有感覺的音樂吶。</p>\n<p>今天點到蕭邦的「雨滴」，其全名爲 Prelude Op. 28 No. 15 Db major (Raindrop)，網易雲音樂上又寫成 Prélude in D:Flat Major, Op. 28, No. 15，是同樣的（繼續讀下去就知道爲什麼），翻譯成中文就是：降 D 大調前奏曲, 作品28之15。先來與君共賞。</p>\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"86\" src=\"//music.163.com/outchain/player?type=2&id=554424111&auto=1&height=66\"></iframe>","more":"<h2 id=\"聽後感\"><a href=\"#聽後感\" class=\"headerlink\" title=\"聽後感\"></a>聽後感</h2><p>正開始時節奏平和而又纏綿多情。在阿爾卑斯山上，夕陽投射在我一家四口的臉上，暖暖的。我們趕著羊群正要回家。此時雲層似乎漸漸厚了起來，天慢慢暗了下來，我們依舊踏著幸福的步伐。</p>\n<p>翻過一個山坡之後，烏雲罩日，天昏地暗，狂風暴雨迅猛襲來，羊群四散，叫人難以抵抗，只能作痛苦狀。好不容易到達小木屋，卻發現小木屋被刮走了，我們緊緊地依偎在一起，雨淚俱下。所幸家人都在，生活還可以繼續，曲調又回歸到原本的平靜。</p>\n<h2 id=\"音樂筆記\"><a href=\"#音樂筆記\" class=\"headerlink\" title=\"音樂筆記\"></a>音樂筆記</h2><h3 id=\"Prelude\"><a href=\"#Prelude\" class=\"headerlink\" title=\"Prélude\"></a>Prélude</h3><p>Prélude：法語，英文爲Prelude， 意爲前奏曲。<br>常見的音樂體裁還有：</p>\n<ul>\n<li>Ballade 敘事曲</li>\n<li>Concerto 協奏曲</li>\n<li>Etude 練習曲</li>\n<li>Fuga 賦格</li>\n<li>Impromptu 即興曲</li>\n<li>Menuet 小步舞曲</li>\n<li>Overture 序曲</li>\n<li>Prelude 前奏曲</li>\n<li>Sonata 奏鳴曲</li>\n<li>String Quartet 弦樂四重奏</li>\n<li>Suite 組曲</li>\n<li>Symphony 交響曲</li>\n<li>Violin Concerto 小提請協奏曲</li>\n<li>Waltz 圓舞曲</li>\n</ul>\n<h3 id=\"D-Flat-Db\"><a href=\"#D-Flat-Db\" class=\"headerlink\" title=\"D Flat / Db\"></a>D Flat / Db</h3><p>D Flat / Db：降D<br>相關符號有：</p>\n<ul>\n<li>♯ （也用 # 簡記），升號，英文 sharp，表示音高升半個音；</li>\n<li>♭（也用 b 簡記），降號，英文 flat，表示音高降低半個音；</li>\n<li>♮，還原號，英文natural，表示復歸原先的音高。</li>\n</ul>\n<h3 id=\"Major\"><a href=\"#Major\" class=\"headerlink\" title=\"Major\"></a>Major</h3><p><strong>major 大調</strong><br><img src=\"/2020/10/11/music/listen-chopin-raindrop/cdefgab.jpg\" alt><br>名詞解釋：</p>\n<ul>\n<li>簡譜：用數字表示音的簡單記譜方式</li>\n<li>音名：音的名字</li>\n<li>唱名：音的唱法</li>\n<li>距離：代表兩個音之間的距離</li>\n<li>半音：最靠近的兩個音之間的距離</li>\n<li>全音：1全音 = 1半音 + 1半音<br><img src=\"/2020/10/11/music/listen-chopin-raindrop/piano-keys.gif\" alt><br>E－F 之間沒有黑鍵 ，所以 E－F 的距離是半音，B－C 同理。</li>\n</ul>\n<p>記憶方法：<br>1    Do    C    這個不需要想，也很直覺，乾脆就直接背了<br>2    Re    D    Double 跟 Repeat 都可以聯想到 2<br>3    Mi    E    3 M E 都長的很像<br>4    Fa    F    4 的英文單字是 Four<br>5    Sol    G    你跟別人 Give me five 是用手 (Sol) 來的<br>6    La    A    六的閩南語念成什麼? 尾音 A<br>7    Si    B    七夕(Si)。 SB</p>\n<p>音與音之間的距離符合全全半全全全半的八個音，就稱為大調音階。例如：</p>\n<ul>\n<li>C Major：C D E F G A B C</li>\n<li>Db Major：Db Eb F Gb Ab Bb C Db</li>\n</ul>\n<p><strong>minor 小調</strong><br>音與音之間的距離符合全半全全半全全的八個音，就稱為自然小音階/小調。</p>\n<h3 id=\"Op-28-No-15\"><a href=\"#Op-28-No-15\" class=\"headerlink\" title=\"Op. 28 , No. 15\"></a>Op. 28 , No. 15</h3><p>Op. 28 , No. 15：作品 28 之 15<br>Op.，拉丁文 Opus，著作，尤指編號的音樂作品。<br>No.，Number，編號。</p>\n<h2 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h2><ol>\n<li><a href=\"http://www.dancepiano.com/scalechar.aspx\" title=\"音階與調性\" target=\"_blank\" rel=\"noopener\"> 音階與調性 </a></li>\n<li><a href=\"https://www.guitar.com.tw/basic-music-theory/\" title=\"必學基礎樂理：音階/簡譜/音名/唱名\" target=\"_blank\" rel=\"noopener\"> 必學基礎樂理：音階/簡譜/音名/唱名 </a></li>\n<li><a href=\"http://www.rexchow.com/students/theory/music_theory_01_basic_concept_on_scales.pdf\" title=\"音階基本概念\" target=\"_blank\" rel=\"noopener\"> 音階基本概念 </a></li>\n</ol>"},{"title":"携帯で日本語（手机上的日语）","p":"language/jp/keitai-de-nihongo.md","_content":"\n有一天，我把手机上的系统语言设定为日语，觉得读手机上的日语读起来很有趣。边读边猜边查字典认识了不少，于是整理了本文以飨读者。\n\n<!--more-->\n\n## 一、アプリ（应用程序）\n\n手机上的应用叫 「アプリ」(apuri)，取自英语「Application」前三个音节，日语中常有此类将常用英语引进时省略后面音节的做法，比如「パソコン」(pasokon) 取自英语「Personal Computer」第一个单词的前两个音节和后一个单词的第一个音节。值得注意的是，日语中有一个词语：「応用」（ouyou），虽然也是应用的意思，但可不是应用程序的缩写。这与汉语和英语的用法相异，汉语的「应用」和英语的「Application」都有投入实际使用和应用程序的意思。\n\n下面分 システムアプリ（系统应用）和ユーザーアプリ（用户应用）汇总了我手机上的一些 アプリ进行对比。\n\n### （一）システムアプリ（系统应用）\n\n| アプリ                   | Applications         | 应用程序      | 應用程式   |\n| ------------------------ | -------------------- | ------------- | ---------- |\n| アプリストア(apurisutoa) | App store            | 应用商店      | 應用商店   |\n| パスウードとアカウード   | Passwords & Accounts | 密码与账户    | 密碼與賬號 |\n| メール                   | Mail                 | 邮件          | 郵件       |\n| 連絡先（れんらくさき）   | Contacts             | 通讯录        | 聯絡資訊   |\n| カレンダー               | Calendar             | 日历          | 行事曆     |\n| メモ                     | Notes                | 备忘录        | 備忘錄     |\n| リマインダー             | Reminders            | 提醒事项      | 提醒事項   |\n| ボイスメモ               | Voice Memos          | 语言备忘录    | 語音備忘錄 |\n| 電話（でんわ）           | Phone                | 电话          | 電話       |\n| メッセージ               | Messages             | 信息          | 訊息       |\n| FaceTime                 | FaceTime             | FaceTime      | FaceTime   |\n| マップ                   | Maps                 | 地图          | 地圖       |\n| コンパス                 | Compass              | 指南针        | 指南針     |\n| 計測（けいそく）         | Measure              | 测距仪        | 測距儀     |\n| Safari                   | Safari               | Safari 浏览器 | Safari     |\n| 株価（かぶか）           | Stocks               | 股市          | 股市       |\n| ミュージック             | Music                | 音乐          | 音樂       |\n| ビデオ                   | Videos               | 视频          | 影片       |\n| 写真（しゃしん）         | Photos               | 照片          | 照片       |\n| カメラ                   | Camera               | 相机          | 相機       |\n| ブック                   | Books                | 图书          | 書籍       |\n\n备注：\n\n1. 股票：株式（かぶしき）\n2. 股市：株式市場（かぶしきしじょう）\n3. 股价：株価（かぶか）\n\n### （二）ユーザーアプリ（用户应用）\n\n| アプリ                          | Applications | 应用程序 | 應用程式 |\n| ------------------------------- | --------------- | -------- | -------- |\n| 微信 / ウェイシン \\| WeChat / ウィチャット | Wechat          | 微信     | 微信   |\n| QQ / キュキュ           | QQ              | QQ       | QQ     |\n| アリペイ                | Alipay          | 支付宝   | 支付寶 |\n| ビリビリ              | Bilibili        | 哔哩哔哩 | 嗶哩嗶哩 |\n| Google / グーグル       | Google          | 谷歌     | 谷歌   |\n| Kindle / キンドル | Kindle          | Kindle   | Kindle |\n| Chrome / クロム | Chrome | Chrome | Chrome |\n| YouTube / ユーチューブ | YouTube | YouTube | YouTube |\n| Gmail / ジメイル | Gmail | Gmail | Gmail |\n| Google フォト | Google Photo | Google相册 | Google相簿 |\n| 翻訳（ほにゃく） | Translate | 翻译 | 翻譯 |\n| Instagram / インスタグラム | Instagram | Instagram | Instagram |\n| WhatsApp / ワッツアップ | WhatsApp | WhatsApp | WhatsApp |\n| Wunderlist / ワンダーリスト | Wunderlist | 奇妙清单 | 奇妙清單 |\n| NetEase Music / ネットイース ミュージック | NetEase Music | 网易云音乐 | 網易云音樂 |\n| 好奇心日報（こうきしんにっぽう） | Qdaily | 好奇心日报 | 好奇心日報 |\n| Taobao / タオバオ | Taobao | 手机淘宝 | 手機淘寶 |\n| 京東 / ジンドン | JD | 京东 | 京東 |\n| 高德地図 / こうとくちず | Amap | 高德地图 | 高德地圖 |\n| 印象メモ | Evernote | 印象笔记 | 印象筆記 |\n| 招商銀行 / しょうしょうぎんこう | CMB | 招商银行 | 招商銀行 |\n| WeChat 読書（どくしょ 1）? | WeRead | 微信读书 | 微信讀書 |\n| Youku（ヨウク） | Youku | 优酷 | 優酷 |\n| 愛奇芸（アイキゲー） | IQiyi | 爱奇艺 | 愛奇藝 |\n\n## 二、設定（せってい）\n\n「設定」这个词语，不仅含义上，语音上也跟英语的「Setting」相似，很有意思。\n\n下面分「接続設定」（连接设置）、「フィードバック設定」（反馈设置）、「一般設定」（通用设置）和「ストアー設定」（商店设置）进行比较。\n\n### （一）接続（せつぞく）設定（连接设置）\n\n| 設定（せってい）                 | Settings         | 设置         | 設定     |\n| -------------------------------- | ---------------- | ------------ | -------- |\n| 機内モード（きない 1）           | Airplane Mode    | 飞行模式     | 飛航模式 |\n| WLAN                             | WLAN             | 无线网络     | WLAN     |\n| Bluetooth                        | Bluetooth        | 蓝牙         | 藍牙     |\n| モバイル通信（つうしん）         | Cellular         | 蜂窝移动网络 | 行動服務 |\n| インターネット共有（きょうゆう） | Personal Hotspot | 个人热点     | 個人熱點 |\n| VPN                              | VPN              | VPN          | VPN      |\n\n### （二）フィードバック設定（反馈设置）\n\n| 設定（せってい）             | Settings        | 设置         | 設定           |\n| ---------------------------- | --------------- | ------------ | -------------- |\n| 通知（つうち）               | Notifications   | 通知         | 通知           |\n| サウンドと触覚（しょっかく） | Sounds＆Haptics | 声音与触感   | 聲音與觸覺回饋 |\n| おやすみモード               | Do Not Disturb  | 勿扰模式     | 勿擾模式       |\n| スクリーンタイム             | Screen Time     | 屏幕使用时间 | 熒幕使用時間   |\n\n### （三）一般設定（通用设置）\n\n| 設定（せってい）                             | Settings              | 设置           | 設定           |\n| -------------------------------------------- | --------------------- | -------------- | -------------- |\n| 一般（いっぱん）                             | General               | 通用           | 一般           |\n| コントロールセンター                         | Control Center        | 控制中心       | 控制中心       |\n| 画面表示と明るさ（がめんひょうじとあかるさ） | Display ＆ Brightness | 显示与亮度     | 熒幕顯示與亮度 |\n| 壁紙（かべがみ）                             | Wallpaper             | 墙纸           | 背景圖片       |\n| Siriと検索（けんさく）                       | Siri ＆Search         | Siri 与搜索    | Siri 與搜尋    |\n| Face ID とパスコード                         | Face ID & Passcode    | 面容 ID 与密码 | Face ID 與密碼 |\n| 緊急SOS（きんきゅう）                        | Emergency SOS         | SOS 紧急联络   | SOS 緊急服務   |\n| バッテリー                                   | Battery               | 电池           | 電池           |\n| プライバシー                                 | Privacy               | 隐私           | 隱私權         |\n\n### （四）ストアー設定（商店设置）\n\n| 設定（せってい）          | Settings                | 设置                      | 設定                      |\n| ------------------------- | ----------------------- | ------------------------- | ------------------------- |\n| iTunes Store と App Store | iTunes Store＆App Store | iTunes Store 与 App Store | iTunes Store 與 App Store |\n| WalletとApple Pay         | Wallet＆Apple Pay       | 钱包与 Apple Pay          | 錢包與 Apple Pay          |\n\n## 三、操作（そうさ）\n\nアプリ 的操作是人机交互的重要部分，我们通过操作完成人机交互。常用的操作整理如下：\n\n| 日本語               | English | 汉语 | 漢語 |\n| -------------------- | ------- | ---- | ---- |\n| OK                   | OK      | 好的 | 好的 |\n| 確認                 | Comfirm | 确定 | 確定 |\n| キャンセル           | Cancel  | 取消 | 取消 |\n| 完了（かんりょう）   | Finish  | 完成 | 完成 |\n| オン                 | On      | 开启 | 開啟 |\n| オフ                 | Off     | 关闭 | 關閉 |\n| 消去（しょうきょ 1） | Clear   | 清除 | 清除 |\n| 検索（けんさく）     | Search  | 搜索 | 搜尋 |\n| 削除（さくじょ 1）   | Delete  | 删除 | 删除 |\n| 破棄（はき 1）       | Discard | 废弃 | 捨棄 |\n| 元に戻す（もとにもどす） | Undo | 撤消 | 復原 |\n| 開く（ひらく2）      | Open    | 打开 | 打開 |\n| 閉じる（とじる 2）   | Close   | 关闭 | 關閉 |\n| 編集（へんしゅう）   | Edit    | 编辑 | 編輯 |\n| 表示（ひょうじ） | View | 查看 | 檢視 |\n| 送る（おくる） | Send    | 发送 | 發送 |\n| 追加（ついか） | Add | 添加 | 加入 |\n| 新着（しんちゃく） | New | 新增 | 新增 |\n| 報告（ほうこく） | Report | 举报 | 回報 |\n| マーク | Mark | 标记 | 標示 |\n| 再生（さいせい） | Play | 播放 | 播放 |\n| 一時停止（いちじていし） | Pause | 暂停 | 暫停 |\n| 停止（ていし） | Stop | 停止 | 停止 |\n| 登録（とうろく） | Sign Up | 注册 | 註冊 |\n| ログイン | Sign In / Log In | 登录 | 登入 |\n| ログアウト | Sign Out / Log Out | 退出 | 登出 / 退出 |\n\n","source":"_posts/language/jp/keitai-de-nihongo.md","raw":"---\ntitle: 携帯で日本語（手机上的日语）\np: language/jp/keitai-de-nihongo.md\ntags:\n- 日本語\n---\n\n有一天，我把手机上的系统语言设定为日语，觉得读手机上的日语读起来很有趣。边读边猜边查字典认识了不少，于是整理了本文以飨读者。\n\n<!--more-->\n\n## 一、アプリ（应用程序）\n\n手机上的应用叫 「アプリ」(apuri)，取自英语「Application」前三个音节，日语中常有此类将常用英语引进时省略后面音节的做法，比如「パソコン」(pasokon) 取自英语「Personal Computer」第一个单词的前两个音节和后一个单词的第一个音节。值得注意的是，日语中有一个词语：「応用」（ouyou），虽然也是应用的意思，但可不是应用程序的缩写。这与汉语和英语的用法相异，汉语的「应用」和英语的「Application」都有投入实际使用和应用程序的意思。\n\n下面分 システムアプリ（系统应用）和ユーザーアプリ（用户应用）汇总了我手机上的一些 アプリ进行对比。\n\n### （一）システムアプリ（系统应用）\n\n| アプリ                   | Applications         | 应用程序      | 應用程式   |\n| ------------------------ | -------------------- | ------------- | ---------- |\n| アプリストア(apurisutoa) | App store            | 应用商店      | 應用商店   |\n| パスウードとアカウード   | Passwords & Accounts | 密码与账户    | 密碼與賬號 |\n| メール                   | Mail                 | 邮件          | 郵件       |\n| 連絡先（れんらくさき）   | Contacts             | 通讯录        | 聯絡資訊   |\n| カレンダー               | Calendar             | 日历          | 行事曆     |\n| メモ                     | Notes                | 备忘录        | 備忘錄     |\n| リマインダー             | Reminders            | 提醒事项      | 提醒事項   |\n| ボイスメモ               | Voice Memos          | 语言备忘录    | 語音備忘錄 |\n| 電話（でんわ）           | Phone                | 电话          | 電話       |\n| メッセージ               | Messages             | 信息          | 訊息       |\n| FaceTime                 | FaceTime             | FaceTime      | FaceTime   |\n| マップ                   | Maps                 | 地图          | 地圖       |\n| コンパス                 | Compass              | 指南针        | 指南針     |\n| 計測（けいそく）         | Measure              | 测距仪        | 測距儀     |\n| Safari                   | Safari               | Safari 浏览器 | Safari     |\n| 株価（かぶか）           | Stocks               | 股市          | 股市       |\n| ミュージック             | Music                | 音乐          | 音樂       |\n| ビデオ                   | Videos               | 视频          | 影片       |\n| 写真（しゃしん）         | Photos               | 照片          | 照片       |\n| カメラ                   | Camera               | 相机          | 相機       |\n| ブック                   | Books                | 图书          | 書籍       |\n\n备注：\n\n1. 股票：株式（かぶしき）\n2. 股市：株式市場（かぶしきしじょう）\n3. 股价：株価（かぶか）\n\n### （二）ユーザーアプリ（用户应用）\n\n| アプリ                          | Applications | 应用程序 | 應用程式 |\n| ------------------------------- | --------------- | -------- | -------- |\n| 微信 / ウェイシン \\| WeChat / ウィチャット | Wechat          | 微信     | 微信   |\n| QQ / キュキュ           | QQ              | QQ       | QQ     |\n| アリペイ                | Alipay          | 支付宝   | 支付寶 |\n| ビリビリ              | Bilibili        | 哔哩哔哩 | 嗶哩嗶哩 |\n| Google / グーグル       | Google          | 谷歌     | 谷歌   |\n| Kindle / キンドル | Kindle          | Kindle   | Kindle |\n| Chrome / クロム | Chrome | Chrome | Chrome |\n| YouTube / ユーチューブ | YouTube | YouTube | YouTube |\n| Gmail / ジメイル | Gmail | Gmail | Gmail |\n| Google フォト | Google Photo | Google相册 | Google相簿 |\n| 翻訳（ほにゃく） | Translate | 翻译 | 翻譯 |\n| Instagram / インスタグラム | Instagram | Instagram | Instagram |\n| WhatsApp / ワッツアップ | WhatsApp | WhatsApp | WhatsApp |\n| Wunderlist / ワンダーリスト | Wunderlist | 奇妙清单 | 奇妙清單 |\n| NetEase Music / ネットイース ミュージック | NetEase Music | 网易云音乐 | 網易云音樂 |\n| 好奇心日報（こうきしんにっぽう） | Qdaily | 好奇心日报 | 好奇心日報 |\n| Taobao / タオバオ | Taobao | 手机淘宝 | 手機淘寶 |\n| 京東 / ジンドン | JD | 京东 | 京東 |\n| 高德地図 / こうとくちず | Amap | 高德地图 | 高德地圖 |\n| 印象メモ | Evernote | 印象笔记 | 印象筆記 |\n| 招商銀行 / しょうしょうぎんこう | CMB | 招商银行 | 招商銀行 |\n| WeChat 読書（どくしょ 1）? | WeRead | 微信读书 | 微信讀書 |\n| Youku（ヨウク） | Youku | 优酷 | 優酷 |\n| 愛奇芸（アイキゲー） | IQiyi | 爱奇艺 | 愛奇藝 |\n\n## 二、設定（せってい）\n\n「設定」这个词语，不仅含义上，语音上也跟英语的「Setting」相似，很有意思。\n\n下面分「接続設定」（连接设置）、「フィードバック設定」（反馈设置）、「一般設定」（通用设置）和「ストアー設定」（商店设置）进行比较。\n\n### （一）接続（せつぞく）設定（连接设置）\n\n| 設定（せってい）                 | Settings         | 设置         | 設定     |\n| -------------------------------- | ---------------- | ------------ | -------- |\n| 機内モード（きない 1）           | Airplane Mode    | 飞行模式     | 飛航模式 |\n| WLAN                             | WLAN             | 无线网络     | WLAN     |\n| Bluetooth                        | Bluetooth        | 蓝牙         | 藍牙     |\n| モバイル通信（つうしん）         | Cellular         | 蜂窝移动网络 | 行動服務 |\n| インターネット共有（きょうゆう） | Personal Hotspot | 个人热点     | 個人熱點 |\n| VPN                              | VPN              | VPN          | VPN      |\n\n### （二）フィードバック設定（反馈设置）\n\n| 設定（せってい）             | Settings        | 设置         | 設定           |\n| ---------------------------- | --------------- | ------------ | -------------- |\n| 通知（つうち）               | Notifications   | 通知         | 通知           |\n| サウンドと触覚（しょっかく） | Sounds＆Haptics | 声音与触感   | 聲音與觸覺回饋 |\n| おやすみモード               | Do Not Disturb  | 勿扰模式     | 勿擾模式       |\n| スクリーンタイム             | Screen Time     | 屏幕使用时间 | 熒幕使用時間   |\n\n### （三）一般設定（通用设置）\n\n| 設定（せってい）                             | Settings              | 设置           | 設定           |\n| -------------------------------------------- | --------------------- | -------------- | -------------- |\n| 一般（いっぱん）                             | General               | 通用           | 一般           |\n| コントロールセンター                         | Control Center        | 控制中心       | 控制中心       |\n| 画面表示と明るさ（がめんひょうじとあかるさ） | Display ＆ Brightness | 显示与亮度     | 熒幕顯示與亮度 |\n| 壁紙（かべがみ）                             | Wallpaper             | 墙纸           | 背景圖片       |\n| Siriと検索（けんさく）                       | Siri ＆Search         | Siri 与搜索    | Siri 與搜尋    |\n| Face ID とパスコード                         | Face ID & Passcode    | 面容 ID 与密码 | Face ID 與密碼 |\n| 緊急SOS（きんきゅう）                        | Emergency SOS         | SOS 紧急联络   | SOS 緊急服務   |\n| バッテリー                                   | Battery               | 电池           | 電池           |\n| プライバシー                                 | Privacy               | 隐私           | 隱私權         |\n\n### （四）ストアー設定（商店设置）\n\n| 設定（せってい）          | Settings                | 设置                      | 設定                      |\n| ------------------------- | ----------------------- | ------------------------- | ------------------------- |\n| iTunes Store と App Store | iTunes Store＆App Store | iTunes Store 与 App Store | iTunes Store 與 App Store |\n| WalletとApple Pay         | Wallet＆Apple Pay       | 钱包与 Apple Pay          | 錢包與 Apple Pay          |\n\n## 三、操作（そうさ）\n\nアプリ 的操作是人机交互的重要部分，我们通过操作完成人机交互。常用的操作整理如下：\n\n| 日本語               | English | 汉语 | 漢語 |\n| -------------------- | ------- | ---- | ---- |\n| OK                   | OK      | 好的 | 好的 |\n| 確認                 | Comfirm | 确定 | 確定 |\n| キャンセル           | Cancel  | 取消 | 取消 |\n| 完了（かんりょう）   | Finish  | 完成 | 完成 |\n| オン                 | On      | 开启 | 開啟 |\n| オフ                 | Off     | 关闭 | 關閉 |\n| 消去（しょうきょ 1） | Clear   | 清除 | 清除 |\n| 検索（けんさく）     | Search  | 搜索 | 搜尋 |\n| 削除（さくじょ 1）   | Delete  | 删除 | 删除 |\n| 破棄（はき 1）       | Discard | 废弃 | 捨棄 |\n| 元に戻す（もとにもどす） | Undo | 撤消 | 復原 |\n| 開く（ひらく2）      | Open    | 打开 | 打開 |\n| 閉じる（とじる 2）   | Close   | 关闭 | 關閉 |\n| 編集（へんしゅう）   | Edit    | 编辑 | 編輯 |\n| 表示（ひょうじ） | View | 查看 | 檢視 |\n| 送る（おくる） | Send    | 发送 | 發送 |\n| 追加（ついか） | Add | 添加 | 加入 |\n| 新着（しんちゃく） | New | 新增 | 新增 |\n| 報告（ほうこく） | Report | 举报 | 回報 |\n| マーク | Mark | 标记 | 標示 |\n| 再生（さいせい） | Play | 播放 | 播放 |\n| 一時停止（いちじていし） | Pause | 暂停 | 暫停 |\n| 停止（ていし） | Stop | 停止 | 停止 |\n| 登録（とうろく） | Sign Up | 注册 | 註冊 |\n| ログイン | Sign In / Log In | 登录 | 登入 |\n| ログアウト | Sign Out / Log Out | 退出 | 登出 / 退出 |\n\n","slug":"language/jp/keitai-de-nihongo","published":1,"date":"2020-10-04T07:48:34.830Z","updated":"2020-10-04T10:43:03.780Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cki7m45ka000686w8576suewn","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css\"><p>有一天，我把手机上的系统语言设定为日语，觉得读手机上的日语读起来很有趣。边读边猜边查字典认识了不少，于是整理了本文以飨读者。</p>\n<a id=\"more\"></a>\n\n<h2 id=\"一、アプリ（应用程序）\"><a href=\"#一、アプリ（应用程序）\" class=\"headerlink\" title=\"一、アプリ（应用程序）\"></a>一、アプリ（应用程序）</h2><p>手机上的应用叫 「アプリ」(apuri)，取自英语「Application」前三个音节，日语中常有此类将常用英语引进时省略后面音节的做法，比如「パソコン」(pasokon) 取自英语「Personal Computer」第一个单词的前两个音节和后一个单词的第一个音节。值得注意的是，日语中有一个词语：「応用」（ouyou），虽然也是应用的意思，但可不是应用程序的缩写。这与汉语和英语的用法相异，汉语的「应用」和英语的「Application」都有投入实际使用和应用程序的意思。</p>\n<p>下面分 システムアプリ（系统应用）和ユーザーアプリ（用户应用）汇总了我手机上的一些 アプリ进行对比。</p>\n<h3 id=\"（一）システムアプリ（系统应用）\"><a href=\"#（一）システムアプリ（系统应用）\" class=\"headerlink\" title=\"（一）システムアプリ（系统应用）\"></a>（一）システムアプリ（系统应用）</h3><table>\n<thead>\n<tr>\n<th>アプリ</th>\n<th>Applications</th>\n<th>应用程序</th>\n<th>應用程式</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>アプリストア(apurisutoa)</td>\n<td>App store</td>\n<td>应用商店</td>\n<td>應用商店</td>\n</tr>\n<tr>\n<td>パスウードとアカウード</td>\n<td>Passwords &amp; Accounts</td>\n<td>密码与账户</td>\n<td>密碼與賬號</td>\n</tr>\n<tr>\n<td>メール</td>\n<td>Mail</td>\n<td>邮件</td>\n<td>郵件</td>\n</tr>\n<tr>\n<td>連絡先（れんらくさき）</td>\n<td>Contacts</td>\n<td>通讯录</td>\n<td>聯絡資訊</td>\n</tr>\n<tr>\n<td>カレンダー</td>\n<td>Calendar</td>\n<td>日历</td>\n<td>行事曆</td>\n</tr>\n<tr>\n<td>メモ</td>\n<td>Notes</td>\n<td>备忘录</td>\n<td>備忘錄</td>\n</tr>\n<tr>\n<td>リマインダー</td>\n<td>Reminders</td>\n<td>提醒事项</td>\n<td>提醒事項</td>\n</tr>\n<tr>\n<td>ボイスメモ</td>\n<td>Voice Memos</td>\n<td>语言备忘录</td>\n<td>語音備忘錄</td>\n</tr>\n<tr>\n<td>電話（でんわ）</td>\n<td>Phone</td>\n<td>电话</td>\n<td>電話</td>\n</tr>\n<tr>\n<td>メッセージ</td>\n<td>Messages</td>\n<td>信息</td>\n<td>訊息</td>\n</tr>\n<tr>\n<td>FaceTime</td>\n<td>FaceTime</td>\n<td>FaceTime</td>\n<td>FaceTime</td>\n</tr>\n<tr>\n<td>マップ</td>\n<td>Maps</td>\n<td>地图</td>\n<td>地圖</td>\n</tr>\n<tr>\n<td>コンパス</td>\n<td>Compass</td>\n<td>指南针</td>\n<td>指南針</td>\n</tr>\n<tr>\n<td>計測（けいそく）</td>\n<td>Measure</td>\n<td>测距仪</td>\n<td>測距儀</td>\n</tr>\n<tr>\n<td>Safari</td>\n<td>Safari</td>\n<td>Safari 浏览器</td>\n<td>Safari</td>\n</tr>\n<tr>\n<td>株価（かぶか）</td>\n<td>Stocks</td>\n<td>股市</td>\n<td>股市</td>\n</tr>\n<tr>\n<td>ミュージック</td>\n<td>Music</td>\n<td>音乐</td>\n<td>音樂</td>\n</tr>\n<tr>\n<td>ビデオ</td>\n<td>Videos</td>\n<td>视频</td>\n<td>影片</td>\n</tr>\n<tr>\n<td>写真（しゃしん）</td>\n<td>Photos</td>\n<td>照片</td>\n<td>照片</td>\n</tr>\n<tr>\n<td>カメラ</td>\n<td>Camera</td>\n<td>相机</td>\n<td>相機</td>\n</tr>\n<tr>\n<td>ブック</td>\n<td>Books</td>\n<td>图书</td>\n<td>書籍</td>\n</tr>\n</tbody></table>\n<p>备注：</p>\n<ol>\n<li>股票：株式（かぶしき）</li>\n<li>股市：株式市場（かぶしきしじょう）</li>\n<li>股价：株価（かぶか）</li>\n</ol>\n<h3 id=\"（二）ユーザーアプリ（用户应用）\"><a href=\"#（二）ユーザーアプリ（用户应用）\" class=\"headerlink\" title=\"（二）ユーザーアプリ（用户应用）\"></a>（二）ユーザーアプリ（用户应用）</h3><table>\n<thead>\n<tr>\n<th>アプリ</th>\n<th>Applications</th>\n<th>应用程序</th>\n<th>應用程式</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>微信 / ウェイシン | WeChat / ウィチャット</td>\n<td>Wechat</td>\n<td>微信</td>\n<td>微信</td>\n</tr>\n<tr>\n<td>QQ / キュキュ</td>\n<td>QQ</td>\n<td>QQ</td>\n<td>QQ</td>\n</tr>\n<tr>\n<td>アリペイ</td>\n<td>Alipay</td>\n<td>支付宝</td>\n<td>支付寶</td>\n</tr>\n<tr>\n<td>ビリビリ</td>\n<td>Bilibili</td>\n<td>哔哩哔哩</td>\n<td>嗶哩嗶哩</td>\n</tr>\n<tr>\n<td>Google / グーグル</td>\n<td>Google</td>\n<td>谷歌</td>\n<td>谷歌</td>\n</tr>\n<tr>\n<td>Kindle / キンドル</td>\n<td>Kindle</td>\n<td>Kindle</td>\n<td>Kindle</td>\n</tr>\n<tr>\n<td>Chrome / クロム</td>\n<td>Chrome</td>\n<td>Chrome</td>\n<td>Chrome</td>\n</tr>\n<tr>\n<td>YouTube / ユーチューブ</td>\n<td>YouTube</td>\n<td>YouTube</td>\n<td>YouTube</td>\n</tr>\n<tr>\n<td>Gmail / ジメイル</td>\n<td>Gmail</td>\n<td>Gmail</td>\n<td>Gmail</td>\n</tr>\n<tr>\n<td>Google フォト</td>\n<td>Google Photo</td>\n<td>Google相册</td>\n<td>Google相簿</td>\n</tr>\n<tr>\n<td>翻訳（ほにゃく）</td>\n<td>Translate</td>\n<td>翻译</td>\n<td>翻譯</td>\n</tr>\n<tr>\n<td>Instagram / インスタグラム</td>\n<td>Instagram</td>\n<td>Instagram</td>\n<td>Instagram</td>\n</tr>\n<tr>\n<td>WhatsApp / ワッツアップ</td>\n<td>WhatsApp</td>\n<td>WhatsApp</td>\n<td>WhatsApp</td>\n</tr>\n<tr>\n<td>Wunderlist / ワンダーリスト</td>\n<td>Wunderlist</td>\n<td>奇妙清单</td>\n<td>奇妙清單</td>\n</tr>\n<tr>\n<td>NetEase Music / ネットイース ミュージック</td>\n<td>NetEase Music</td>\n<td>网易云音乐</td>\n<td>網易云音樂</td>\n</tr>\n<tr>\n<td>好奇心日報（こうきしんにっぽう）</td>\n<td>Qdaily</td>\n<td>好奇心日报</td>\n<td>好奇心日報</td>\n</tr>\n<tr>\n<td>Taobao / タオバオ</td>\n<td>Taobao</td>\n<td>手机淘宝</td>\n<td>手機淘寶</td>\n</tr>\n<tr>\n<td>京東 / ジンドン</td>\n<td>JD</td>\n<td>京东</td>\n<td>京東</td>\n</tr>\n<tr>\n<td>高德地図 / こうとくちず</td>\n<td>Amap</td>\n<td>高德地图</td>\n<td>高德地圖</td>\n</tr>\n<tr>\n<td>印象メモ</td>\n<td>Evernote</td>\n<td>印象笔记</td>\n<td>印象筆記</td>\n</tr>\n<tr>\n<td>招商銀行 / しょうしょうぎんこう</td>\n<td>CMB</td>\n<td>招商银行</td>\n<td>招商銀行</td>\n</tr>\n<tr>\n<td>WeChat 読書（どくしょ 1）?</td>\n<td>WeRead</td>\n<td>微信读书</td>\n<td>微信讀書</td>\n</tr>\n<tr>\n<td>Youku（ヨウク）</td>\n<td>Youku</td>\n<td>优酷</td>\n<td>優酷</td>\n</tr>\n<tr>\n<td>愛奇芸（アイキゲー）</td>\n<td>IQiyi</td>\n<td>爱奇艺</td>\n<td>愛奇藝</td>\n</tr>\n</tbody></table>\n<h2 id=\"二、設定（せってい）\"><a href=\"#二、設定（せってい）\" class=\"headerlink\" title=\"二、設定（せってい）\"></a>二、設定（せってい）</h2><p>「設定」这个词语，不仅含义上，语音上也跟英语的「Setting」相似，很有意思。</p>\n<p>下面分「接続設定」（连接设置）、「フィードバック設定」（反馈设置）、「一般設定」（通用设置）和「ストアー設定」（商店设置）进行比较。</p>\n<h3 id=\"（一）接続（せつぞく）設定（连接设置）\"><a href=\"#（一）接続（せつぞく）設定（连接设置）\" class=\"headerlink\" title=\"（一）接続（せつぞく）設定（连接设置）\"></a>（一）接続（せつぞく）設定（连接设置）</h3><table>\n<thead>\n<tr>\n<th>設定（せってい）</th>\n<th>Settings</th>\n<th>设置</th>\n<th>設定</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>機内モード（きない 1）</td>\n<td>Airplane Mode</td>\n<td>飞行模式</td>\n<td>飛航模式</td>\n</tr>\n<tr>\n<td>WLAN</td>\n<td>WLAN</td>\n<td>无线网络</td>\n<td>WLAN</td>\n</tr>\n<tr>\n<td>Bluetooth</td>\n<td>Bluetooth</td>\n<td>蓝牙</td>\n<td>藍牙</td>\n</tr>\n<tr>\n<td>モバイル通信（つうしん）</td>\n<td>Cellular</td>\n<td>蜂窝移动网络</td>\n<td>行動服務</td>\n</tr>\n<tr>\n<td>インターネット共有（きょうゆう）</td>\n<td>Personal Hotspot</td>\n<td>个人热点</td>\n<td>個人熱點</td>\n</tr>\n<tr>\n<td>VPN</td>\n<td>VPN</td>\n<td>VPN</td>\n<td>VPN</td>\n</tr>\n</tbody></table>\n<h3 id=\"（二）フィードバック設定（反馈设置）\"><a href=\"#（二）フィードバック設定（反馈设置）\" class=\"headerlink\" title=\"（二）フィードバック設定（反馈设置）\"></a>（二）フィードバック設定（反馈设置）</h3><table>\n<thead>\n<tr>\n<th>設定（せってい）</th>\n<th>Settings</th>\n<th>设置</th>\n<th>設定</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>通知（つうち）</td>\n<td>Notifications</td>\n<td>通知</td>\n<td>通知</td>\n</tr>\n<tr>\n<td>サウンドと触覚（しょっかく）</td>\n<td>Sounds＆Haptics</td>\n<td>声音与触感</td>\n<td>聲音與觸覺回饋</td>\n</tr>\n<tr>\n<td>おやすみモード</td>\n<td>Do Not Disturb</td>\n<td>勿扰模式</td>\n<td>勿擾模式</td>\n</tr>\n<tr>\n<td>スクリーンタイム</td>\n<td>Screen Time</td>\n<td>屏幕使用时间</td>\n<td>熒幕使用時間</td>\n</tr>\n</tbody></table>\n<h3 id=\"（三）一般設定（通用设置）\"><a href=\"#（三）一般設定（通用设置）\" class=\"headerlink\" title=\"（三）一般設定（通用设置）\"></a>（三）一般設定（通用设置）</h3><table>\n<thead>\n<tr>\n<th>設定（せってい）</th>\n<th>Settings</th>\n<th>设置</th>\n<th>設定</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>一般（いっぱん）</td>\n<td>General</td>\n<td>通用</td>\n<td>一般</td>\n</tr>\n<tr>\n<td>コントロールセンター</td>\n<td>Control Center</td>\n<td>控制中心</td>\n<td>控制中心</td>\n</tr>\n<tr>\n<td>画面表示と明るさ（がめんひょうじとあかるさ）</td>\n<td>Display ＆ Brightness</td>\n<td>显示与亮度</td>\n<td>熒幕顯示與亮度</td>\n</tr>\n<tr>\n<td>壁紙（かべがみ）</td>\n<td>Wallpaper</td>\n<td>墙纸</td>\n<td>背景圖片</td>\n</tr>\n<tr>\n<td>Siriと検索（けんさく）</td>\n<td>Siri ＆Search</td>\n<td>Siri 与搜索</td>\n<td>Siri 與搜尋</td>\n</tr>\n<tr>\n<td>Face ID とパスコード</td>\n<td>Face ID &amp; Passcode</td>\n<td>面容 ID 与密码</td>\n<td>Face ID 與密碼</td>\n</tr>\n<tr>\n<td>緊急SOS（きんきゅう）</td>\n<td>Emergency SOS</td>\n<td>SOS 紧急联络</td>\n<td>SOS 緊急服務</td>\n</tr>\n<tr>\n<td>バッテリー</td>\n<td>Battery</td>\n<td>电池</td>\n<td>電池</td>\n</tr>\n<tr>\n<td>プライバシー</td>\n<td>Privacy</td>\n<td>隐私</td>\n<td>隱私權</td>\n</tr>\n</tbody></table>\n<h3 id=\"（四）ストアー設定（商店设置）\"><a href=\"#（四）ストアー設定（商店设置）\" class=\"headerlink\" title=\"（四）ストアー設定（商店设置）\"></a>（四）ストアー設定（商店设置）</h3><table>\n<thead>\n<tr>\n<th>設定（せってい）</th>\n<th>Settings</th>\n<th>设置</th>\n<th>設定</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>iTunes Store と App Store</td>\n<td>iTunes Store＆App Store</td>\n<td>iTunes Store 与 App Store</td>\n<td>iTunes Store 與 App Store</td>\n</tr>\n<tr>\n<td>WalletとApple Pay</td>\n<td>Wallet＆Apple Pay</td>\n<td>钱包与 Apple Pay</td>\n<td>錢包與 Apple Pay</td>\n</tr>\n</tbody></table>\n<h2 id=\"三、操作（そうさ）\"><a href=\"#三、操作（そうさ）\" class=\"headerlink\" title=\"三、操作（そうさ）\"></a>三、操作（そうさ）</h2><p>アプリ 的操作是人机交互的重要部分，我们通过操作完成人机交互。常用的操作整理如下：</p>\n<table>\n<thead>\n<tr>\n<th>日本語</th>\n<th>English</th>\n<th>汉语</th>\n<th>漢語</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>OK</td>\n<td>OK</td>\n<td>好的</td>\n<td>好的</td>\n</tr>\n<tr>\n<td>確認</td>\n<td>Comfirm</td>\n<td>确定</td>\n<td>確定</td>\n</tr>\n<tr>\n<td>キャンセル</td>\n<td>Cancel</td>\n<td>取消</td>\n<td>取消</td>\n</tr>\n<tr>\n<td>完了（かんりょう）</td>\n<td>Finish</td>\n<td>完成</td>\n<td>完成</td>\n</tr>\n<tr>\n<td>オン</td>\n<td>On</td>\n<td>开启</td>\n<td>開啟</td>\n</tr>\n<tr>\n<td>オフ</td>\n<td>Off</td>\n<td>关闭</td>\n<td>關閉</td>\n</tr>\n<tr>\n<td>消去（しょうきょ 1）</td>\n<td>Clear</td>\n<td>清除</td>\n<td>清除</td>\n</tr>\n<tr>\n<td>検索（けんさく）</td>\n<td>Search</td>\n<td>搜索</td>\n<td>搜尋</td>\n</tr>\n<tr>\n<td>削除（さくじょ 1）</td>\n<td>Delete</td>\n<td>删除</td>\n<td>删除</td>\n</tr>\n<tr>\n<td>破棄（はき 1）</td>\n<td>Discard</td>\n<td>废弃</td>\n<td>捨棄</td>\n</tr>\n<tr>\n<td>元に戻す（もとにもどす）</td>\n<td>Undo</td>\n<td>撤消</td>\n<td>復原</td>\n</tr>\n<tr>\n<td>開く（ひらく2）</td>\n<td>Open</td>\n<td>打开</td>\n<td>打開</td>\n</tr>\n<tr>\n<td>閉じる（とじる 2）</td>\n<td>Close</td>\n<td>关闭</td>\n<td>關閉</td>\n</tr>\n<tr>\n<td>編集（へんしゅう）</td>\n<td>Edit</td>\n<td>编辑</td>\n<td>編輯</td>\n</tr>\n<tr>\n<td>表示（ひょうじ）</td>\n<td>View</td>\n<td>查看</td>\n<td>檢視</td>\n</tr>\n<tr>\n<td>送る（おくる）</td>\n<td>Send</td>\n<td>发送</td>\n<td>發送</td>\n</tr>\n<tr>\n<td>追加（ついか）</td>\n<td>Add</td>\n<td>添加</td>\n<td>加入</td>\n</tr>\n<tr>\n<td>新着（しんちゃく）</td>\n<td>New</td>\n<td>新增</td>\n<td>新增</td>\n</tr>\n<tr>\n<td>報告（ほうこく）</td>\n<td>Report</td>\n<td>举报</td>\n<td>回報</td>\n</tr>\n<tr>\n<td>マーク</td>\n<td>Mark</td>\n<td>标记</td>\n<td>標示</td>\n</tr>\n<tr>\n<td>再生（さいせい）</td>\n<td>Play</td>\n<td>播放</td>\n<td>播放</td>\n</tr>\n<tr>\n<td>一時停止（いちじていし）</td>\n<td>Pause</td>\n<td>暂停</td>\n<td>暫停</td>\n</tr>\n<tr>\n<td>停止（ていし）</td>\n<td>Stop</td>\n<td>停止</td>\n<td>停止</td>\n</tr>\n<tr>\n<td>登録（とうろく）</td>\n<td>Sign Up</td>\n<td>注册</td>\n<td>註冊</td>\n</tr>\n<tr>\n<td>ログイン</td>\n<td>Sign In / Log In</td>\n<td>登录</td>\n<td>登入</td>\n</tr>\n<tr>\n<td>ログアウト</td>\n<td>Sign Out / Log Out</td>\n<td>退出</td>\n<td>登出 / 退出</td>\n</tr>\n</tbody></table>\n","site":{"data":{}},"excerpt":"<p>有一天，我把手机上的系统语言设定为日语，觉得读手机上的日语读起来很有趣。边读边猜边查字典认识了不少，于是整理了本文以飨读者。</p>","more":"<h2 id=\"一、アプリ（应用程序）\"><a href=\"#一、アプリ（应用程序）\" class=\"headerlink\" title=\"一、アプリ（应用程序）\"></a>一、アプリ（应用程序）</h2><p>手机上的应用叫 「アプリ」(apuri)，取自英语「Application」前三个音节，日语中常有此类将常用英语引进时省略后面音节的做法，比如「パソコン」(pasokon) 取自英语「Personal Computer」第一个单词的前两个音节和后一个单词的第一个音节。值得注意的是，日语中有一个词语：「応用」（ouyou），虽然也是应用的意思，但可不是应用程序的缩写。这与汉语和英语的用法相异，汉语的「应用」和英语的「Application」都有投入实际使用和应用程序的意思。</p>\n<p>下面分 システムアプリ（系统应用）和ユーザーアプリ（用户应用）汇总了我手机上的一些 アプリ进行对比。</p>\n<h3 id=\"（一）システムアプリ（系统应用）\"><a href=\"#（一）システムアプリ（系统应用）\" class=\"headerlink\" title=\"（一）システムアプリ（系统应用）\"></a>（一）システムアプリ（系统应用）</h3><table>\n<thead>\n<tr>\n<th>アプリ</th>\n<th>Applications</th>\n<th>应用程序</th>\n<th>應用程式</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>アプリストア(apurisutoa)</td>\n<td>App store</td>\n<td>应用商店</td>\n<td>應用商店</td>\n</tr>\n<tr>\n<td>パスウードとアカウード</td>\n<td>Passwords &amp; Accounts</td>\n<td>密码与账户</td>\n<td>密碼與賬號</td>\n</tr>\n<tr>\n<td>メール</td>\n<td>Mail</td>\n<td>邮件</td>\n<td>郵件</td>\n</tr>\n<tr>\n<td>連絡先（れんらくさき）</td>\n<td>Contacts</td>\n<td>通讯录</td>\n<td>聯絡資訊</td>\n</tr>\n<tr>\n<td>カレンダー</td>\n<td>Calendar</td>\n<td>日历</td>\n<td>行事曆</td>\n</tr>\n<tr>\n<td>メモ</td>\n<td>Notes</td>\n<td>备忘录</td>\n<td>備忘錄</td>\n</tr>\n<tr>\n<td>リマインダー</td>\n<td>Reminders</td>\n<td>提醒事项</td>\n<td>提醒事項</td>\n</tr>\n<tr>\n<td>ボイスメモ</td>\n<td>Voice Memos</td>\n<td>语言备忘录</td>\n<td>語音備忘錄</td>\n</tr>\n<tr>\n<td>電話（でんわ）</td>\n<td>Phone</td>\n<td>电话</td>\n<td>電話</td>\n</tr>\n<tr>\n<td>メッセージ</td>\n<td>Messages</td>\n<td>信息</td>\n<td>訊息</td>\n</tr>\n<tr>\n<td>FaceTime</td>\n<td>FaceTime</td>\n<td>FaceTime</td>\n<td>FaceTime</td>\n</tr>\n<tr>\n<td>マップ</td>\n<td>Maps</td>\n<td>地图</td>\n<td>地圖</td>\n</tr>\n<tr>\n<td>コンパス</td>\n<td>Compass</td>\n<td>指南针</td>\n<td>指南針</td>\n</tr>\n<tr>\n<td>計測（けいそく）</td>\n<td>Measure</td>\n<td>测距仪</td>\n<td>測距儀</td>\n</tr>\n<tr>\n<td>Safari</td>\n<td>Safari</td>\n<td>Safari 浏览器</td>\n<td>Safari</td>\n</tr>\n<tr>\n<td>株価（かぶか）</td>\n<td>Stocks</td>\n<td>股市</td>\n<td>股市</td>\n</tr>\n<tr>\n<td>ミュージック</td>\n<td>Music</td>\n<td>音乐</td>\n<td>音樂</td>\n</tr>\n<tr>\n<td>ビデオ</td>\n<td>Videos</td>\n<td>视频</td>\n<td>影片</td>\n</tr>\n<tr>\n<td>写真（しゃしん）</td>\n<td>Photos</td>\n<td>照片</td>\n<td>照片</td>\n</tr>\n<tr>\n<td>カメラ</td>\n<td>Camera</td>\n<td>相机</td>\n<td>相機</td>\n</tr>\n<tr>\n<td>ブック</td>\n<td>Books</td>\n<td>图书</td>\n<td>書籍</td>\n</tr>\n</tbody></table>\n<p>备注：</p>\n<ol>\n<li>股票：株式（かぶしき）</li>\n<li>股市：株式市場（かぶしきしじょう）</li>\n<li>股价：株価（かぶか）</li>\n</ol>\n<h3 id=\"（二）ユーザーアプリ（用户应用）\"><a href=\"#（二）ユーザーアプリ（用户应用）\" class=\"headerlink\" title=\"（二）ユーザーアプリ（用户应用）\"></a>（二）ユーザーアプリ（用户应用）</h3><table>\n<thead>\n<tr>\n<th>アプリ</th>\n<th>Applications</th>\n<th>应用程序</th>\n<th>應用程式</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>微信 / ウェイシン | WeChat / ウィチャット</td>\n<td>Wechat</td>\n<td>微信</td>\n<td>微信</td>\n</tr>\n<tr>\n<td>QQ / キュキュ</td>\n<td>QQ</td>\n<td>QQ</td>\n<td>QQ</td>\n</tr>\n<tr>\n<td>アリペイ</td>\n<td>Alipay</td>\n<td>支付宝</td>\n<td>支付寶</td>\n</tr>\n<tr>\n<td>ビリビリ</td>\n<td>Bilibili</td>\n<td>哔哩哔哩</td>\n<td>嗶哩嗶哩</td>\n</tr>\n<tr>\n<td>Google / グーグル</td>\n<td>Google</td>\n<td>谷歌</td>\n<td>谷歌</td>\n</tr>\n<tr>\n<td>Kindle / キンドル</td>\n<td>Kindle</td>\n<td>Kindle</td>\n<td>Kindle</td>\n</tr>\n<tr>\n<td>Chrome / クロム</td>\n<td>Chrome</td>\n<td>Chrome</td>\n<td>Chrome</td>\n</tr>\n<tr>\n<td>YouTube / ユーチューブ</td>\n<td>YouTube</td>\n<td>YouTube</td>\n<td>YouTube</td>\n</tr>\n<tr>\n<td>Gmail / ジメイル</td>\n<td>Gmail</td>\n<td>Gmail</td>\n<td>Gmail</td>\n</tr>\n<tr>\n<td>Google フォト</td>\n<td>Google Photo</td>\n<td>Google相册</td>\n<td>Google相簿</td>\n</tr>\n<tr>\n<td>翻訳（ほにゃく）</td>\n<td>Translate</td>\n<td>翻译</td>\n<td>翻譯</td>\n</tr>\n<tr>\n<td>Instagram / インスタグラム</td>\n<td>Instagram</td>\n<td>Instagram</td>\n<td>Instagram</td>\n</tr>\n<tr>\n<td>WhatsApp / ワッツアップ</td>\n<td>WhatsApp</td>\n<td>WhatsApp</td>\n<td>WhatsApp</td>\n</tr>\n<tr>\n<td>Wunderlist / ワンダーリスト</td>\n<td>Wunderlist</td>\n<td>奇妙清单</td>\n<td>奇妙清單</td>\n</tr>\n<tr>\n<td>NetEase Music / ネットイース ミュージック</td>\n<td>NetEase Music</td>\n<td>网易云音乐</td>\n<td>網易云音樂</td>\n</tr>\n<tr>\n<td>好奇心日報（こうきしんにっぽう）</td>\n<td>Qdaily</td>\n<td>好奇心日报</td>\n<td>好奇心日報</td>\n</tr>\n<tr>\n<td>Taobao / タオバオ</td>\n<td>Taobao</td>\n<td>手机淘宝</td>\n<td>手機淘寶</td>\n</tr>\n<tr>\n<td>京東 / ジンドン</td>\n<td>JD</td>\n<td>京东</td>\n<td>京東</td>\n</tr>\n<tr>\n<td>高德地図 / こうとくちず</td>\n<td>Amap</td>\n<td>高德地图</td>\n<td>高德地圖</td>\n</tr>\n<tr>\n<td>印象メモ</td>\n<td>Evernote</td>\n<td>印象笔记</td>\n<td>印象筆記</td>\n</tr>\n<tr>\n<td>招商銀行 / しょうしょうぎんこう</td>\n<td>CMB</td>\n<td>招商银行</td>\n<td>招商銀行</td>\n</tr>\n<tr>\n<td>WeChat 読書（どくしょ 1）?</td>\n<td>WeRead</td>\n<td>微信读书</td>\n<td>微信讀書</td>\n</tr>\n<tr>\n<td>Youku（ヨウク）</td>\n<td>Youku</td>\n<td>优酷</td>\n<td>優酷</td>\n</tr>\n<tr>\n<td>愛奇芸（アイキゲー）</td>\n<td>IQiyi</td>\n<td>爱奇艺</td>\n<td>愛奇藝</td>\n</tr>\n</tbody></table>\n<h2 id=\"二、設定（せってい）\"><a href=\"#二、設定（せってい）\" class=\"headerlink\" title=\"二、設定（せってい）\"></a>二、設定（せってい）</h2><p>「設定」这个词语，不仅含义上，语音上也跟英语的「Setting」相似，很有意思。</p>\n<p>下面分「接続設定」（连接设置）、「フィードバック設定」（反馈设置）、「一般設定」（通用设置）和「ストアー設定」（商店设置）进行比较。</p>\n<h3 id=\"（一）接続（せつぞく）設定（连接设置）\"><a href=\"#（一）接続（せつぞく）設定（连接设置）\" class=\"headerlink\" title=\"（一）接続（せつぞく）設定（连接设置）\"></a>（一）接続（せつぞく）設定（连接设置）</h3><table>\n<thead>\n<tr>\n<th>設定（せってい）</th>\n<th>Settings</th>\n<th>设置</th>\n<th>設定</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>機内モード（きない 1）</td>\n<td>Airplane Mode</td>\n<td>飞行模式</td>\n<td>飛航模式</td>\n</tr>\n<tr>\n<td>WLAN</td>\n<td>WLAN</td>\n<td>无线网络</td>\n<td>WLAN</td>\n</tr>\n<tr>\n<td>Bluetooth</td>\n<td>Bluetooth</td>\n<td>蓝牙</td>\n<td>藍牙</td>\n</tr>\n<tr>\n<td>モバイル通信（つうしん）</td>\n<td>Cellular</td>\n<td>蜂窝移动网络</td>\n<td>行動服務</td>\n</tr>\n<tr>\n<td>インターネット共有（きょうゆう）</td>\n<td>Personal Hotspot</td>\n<td>个人热点</td>\n<td>個人熱點</td>\n</tr>\n<tr>\n<td>VPN</td>\n<td>VPN</td>\n<td>VPN</td>\n<td>VPN</td>\n</tr>\n</tbody></table>\n<h3 id=\"（二）フィードバック設定（反馈设置）\"><a href=\"#（二）フィードバック設定（反馈设置）\" class=\"headerlink\" title=\"（二）フィードバック設定（反馈设置）\"></a>（二）フィードバック設定（反馈设置）</h3><table>\n<thead>\n<tr>\n<th>設定（せってい）</th>\n<th>Settings</th>\n<th>设置</th>\n<th>設定</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>通知（つうち）</td>\n<td>Notifications</td>\n<td>通知</td>\n<td>通知</td>\n</tr>\n<tr>\n<td>サウンドと触覚（しょっかく）</td>\n<td>Sounds＆Haptics</td>\n<td>声音与触感</td>\n<td>聲音與觸覺回饋</td>\n</tr>\n<tr>\n<td>おやすみモード</td>\n<td>Do Not Disturb</td>\n<td>勿扰模式</td>\n<td>勿擾模式</td>\n</tr>\n<tr>\n<td>スクリーンタイム</td>\n<td>Screen Time</td>\n<td>屏幕使用时间</td>\n<td>熒幕使用時間</td>\n</tr>\n</tbody></table>\n<h3 id=\"（三）一般設定（通用设置）\"><a href=\"#（三）一般設定（通用设置）\" class=\"headerlink\" title=\"（三）一般設定（通用设置）\"></a>（三）一般設定（通用设置）</h3><table>\n<thead>\n<tr>\n<th>設定（せってい）</th>\n<th>Settings</th>\n<th>设置</th>\n<th>設定</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>一般（いっぱん）</td>\n<td>General</td>\n<td>通用</td>\n<td>一般</td>\n</tr>\n<tr>\n<td>コントロールセンター</td>\n<td>Control Center</td>\n<td>控制中心</td>\n<td>控制中心</td>\n</tr>\n<tr>\n<td>画面表示と明るさ（がめんひょうじとあかるさ）</td>\n<td>Display ＆ Brightness</td>\n<td>显示与亮度</td>\n<td>熒幕顯示與亮度</td>\n</tr>\n<tr>\n<td>壁紙（かべがみ）</td>\n<td>Wallpaper</td>\n<td>墙纸</td>\n<td>背景圖片</td>\n</tr>\n<tr>\n<td>Siriと検索（けんさく）</td>\n<td>Siri ＆Search</td>\n<td>Siri 与搜索</td>\n<td>Siri 與搜尋</td>\n</tr>\n<tr>\n<td>Face ID とパスコード</td>\n<td>Face ID &amp; Passcode</td>\n<td>面容 ID 与密码</td>\n<td>Face ID 與密碼</td>\n</tr>\n<tr>\n<td>緊急SOS（きんきゅう）</td>\n<td>Emergency SOS</td>\n<td>SOS 紧急联络</td>\n<td>SOS 緊急服務</td>\n</tr>\n<tr>\n<td>バッテリー</td>\n<td>Battery</td>\n<td>电池</td>\n<td>電池</td>\n</tr>\n<tr>\n<td>プライバシー</td>\n<td>Privacy</td>\n<td>隐私</td>\n<td>隱私權</td>\n</tr>\n</tbody></table>\n<h3 id=\"（四）ストアー設定（商店设置）\"><a href=\"#（四）ストアー設定（商店设置）\" class=\"headerlink\" title=\"（四）ストアー設定（商店设置）\"></a>（四）ストアー設定（商店设置）</h3><table>\n<thead>\n<tr>\n<th>設定（せってい）</th>\n<th>Settings</th>\n<th>设置</th>\n<th>設定</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>iTunes Store と App Store</td>\n<td>iTunes Store＆App Store</td>\n<td>iTunes Store 与 App Store</td>\n<td>iTunes Store 與 App Store</td>\n</tr>\n<tr>\n<td>WalletとApple Pay</td>\n<td>Wallet＆Apple Pay</td>\n<td>钱包与 Apple Pay</td>\n<td>錢包與 Apple Pay</td>\n</tr>\n</tbody></table>\n<h2 id=\"三、操作（そうさ）\"><a href=\"#三、操作（そうさ）\" class=\"headerlink\" title=\"三、操作（そうさ）\"></a>三、操作（そうさ）</h2><p>アプリ 的操作是人机交互的重要部分，我们通过操作完成人机交互。常用的操作整理如下：</p>\n<table>\n<thead>\n<tr>\n<th>日本語</th>\n<th>English</th>\n<th>汉语</th>\n<th>漢語</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>OK</td>\n<td>OK</td>\n<td>好的</td>\n<td>好的</td>\n</tr>\n<tr>\n<td>確認</td>\n<td>Comfirm</td>\n<td>确定</td>\n<td>確定</td>\n</tr>\n<tr>\n<td>キャンセル</td>\n<td>Cancel</td>\n<td>取消</td>\n<td>取消</td>\n</tr>\n<tr>\n<td>完了（かんりょう）</td>\n<td>Finish</td>\n<td>完成</td>\n<td>完成</td>\n</tr>\n<tr>\n<td>オン</td>\n<td>On</td>\n<td>开启</td>\n<td>開啟</td>\n</tr>\n<tr>\n<td>オフ</td>\n<td>Off</td>\n<td>关闭</td>\n<td>關閉</td>\n</tr>\n<tr>\n<td>消去（しょうきょ 1）</td>\n<td>Clear</td>\n<td>清除</td>\n<td>清除</td>\n</tr>\n<tr>\n<td>検索（けんさく）</td>\n<td>Search</td>\n<td>搜索</td>\n<td>搜尋</td>\n</tr>\n<tr>\n<td>削除（さくじょ 1）</td>\n<td>Delete</td>\n<td>删除</td>\n<td>删除</td>\n</tr>\n<tr>\n<td>破棄（はき 1）</td>\n<td>Discard</td>\n<td>废弃</td>\n<td>捨棄</td>\n</tr>\n<tr>\n<td>元に戻す（もとにもどす）</td>\n<td>Undo</td>\n<td>撤消</td>\n<td>復原</td>\n</tr>\n<tr>\n<td>開く（ひらく2）</td>\n<td>Open</td>\n<td>打开</td>\n<td>打開</td>\n</tr>\n<tr>\n<td>閉じる（とじる 2）</td>\n<td>Close</td>\n<td>关闭</td>\n<td>關閉</td>\n</tr>\n<tr>\n<td>編集（へんしゅう）</td>\n<td>Edit</td>\n<td>编辑</td>\n<td>編輯</td>\n</tr>\n<tr>\n<td>表示（ひょうじ）</td>\n<td>View</td>\n<td>查看</td>\n<td>檢視</td>\n</tr>\n<tr>\n<td>送る（おくる）</td>\n<td>Send</td>\n<td>发送</td>\n<td>發送</td>\n</tr>\n<tr>\n<td>追加（ついか）</td>\n<td>Add</td>\n<td>添加</td>\n<td>加入</td>\n</tr>\n<tr>\n<td>新着（しんちゃく）</td>\n<td>New</td>\n<td>新增</td>\n<td>新增</td>\n</tr>\n<tr>\n<td>報告（ほうこく）</td>\n<td>Report</td>\n<td>举报</td>\n<td>回報</td>\n</tr>\n<tr>\n<td>マーク</td>\n<td>Mark</td>\n<td>标记</td>\n<td>標示</td>\n</tr>\n<tr>\n<td>再生（さいせい）</td>\n<td>Play</td>\n<td>播放</td>\n<td>播放</td>\n</tr>\n<tr>\n<td>一時停止（いちじていし）</td>\n<td>Pause</td>\n<td>暂停</td>\n<td>暫停</td>\n</tr>\n<tr>\n<td>停止（ていし）</td>\n<td>Stop</td>\n<td>停止</td>\n<td>停止</td>\n</tr>\n<tr>\n<td>登録（とうろく）</td>\n<td>Sign Up</td>\n<td>注册</td>\n<td>註冊</td>\n</tr>\n<tr>\n<td>ログイン</td>\n<td>Sign In / Log In</td>\n<td>登录</td>\n<td>登入</td>\n</tr>\n<tr>\n<td>ログアウト</td>\n<td>Sign Out / Log Out</td>\n<td>退出</td>\n<td>登出 / 退出</td>\n</tr>\n</tbody></table>"},{"title":"Java 集合","p":"it/java/java-collection.md","_content":"\nJava 集合分 List、Set、Map 三大類，其中 List 和 Set 實現了 Collection 接口。List 的特點是數據有序、可重複；Set 的特點是數據無序、不可重複；Map 存儲鍵值映射，Key 不可重複，Value 可重複，且一個 Key 只能對應一個 Value。\n\nList 有一實現 `ArrayList`，其底層實現是對象數組，默認容量是 10，但等到首次添加元素時才分配內存，每次遞增爲上次容量的 1.5 倍。在添加大量元素之前，建議調用 `ensureCapacity` 方法擴容，以減少遞增式再分配內存的次數。\n\nSet 有一實現 `HashSet`，其底層實現是 `HashMap` ，其檢查重複的機制有賴於 `hashCode` 和 `equals` 方法。\n\nMap 有一實現 `HashMap` ，JDK 1.8 之後其底層實現是：**數組 + 鏈表 + 紅黑二叉樹**。紅黑樹是爲了減少搜索時間，默認當鏈表長度大於 8 且當前數組長度大於等於 64 時，鏈表會轉爲紅黑樹。數組默認容量是 16，通過帶參構造方法傳入的容量值如非 2 的幂次會自動向上轉爲 2 的幂次，以便元素散列存儲（元素位置才可通過 `hash & (length-1)` 確定）。添加元素時，若元素數量大於數組長度的 75% 且該元素存在哈希衝突，則觸發擴容機制，數組容量翻倍。\n\n總結下 HashMap 中解決哈希衝突的方式：\n\n1. 使用鏈表 — 拉鍊法；\n2. 使用紅黑二叉樹；\n3. 擴容底層數組；\n4. 強制數組容量爲 2 之幂次；\n5. 將元素的 hash 值的高位分散到低位等等。\n\n`ArrayList`、`HashSet`、`HashMap` 都是線程不安全的。在多線程環境下應使用 J.U.C 包下的對應的並發類 `CopyOnWriteArrayList` 、`ConcurrentHashMap` （`HashSet` 用`ConcurrentHashMap` 的 keySet 可得 Set 視圖）。`CopyOnWriteArrayList` 會在寫時加鎖並複製集合進行操作；`ConcurrentHashMap` 在 JDK 1.7 使用分段鎖，在 JDK 1.8 取消分段鎖採用 CAS（樂觀鎖） 和 synchronized（悲觀鎖） 只對鏈表或紅黑二叉樹的節點加鎖。\n\n<!-- more -->\n\n## 概覽\n\n集合是相對數組來說，更靈活多樣的容器。Java 的集合框架肇始於兩大接口，Collection 和 Map。Collection 下有 List、Queue 和 Set 等等接口，然後衍生出 ArrayList、LinkedList、HashSet、TreeSet、LinkedHashSet 等等實現；Map 下有 HashMap、TreeMap 等重要子類。\n\n![](java-collection/Untitled.png)\n\n### List、Set、Map 三者之區別\n\n1. List：存儲的元素有序、可重複。\n2. Set：存儲的元素無序、不可重複。\n3. Map：使用鍵值對存儲，一鍵一值，Key 無序、不可重複；Value 無序、可重複。\n\n### List、Set、Map 三者之底層數據結構\n\n1. List\n    - ArrayList：Object 數組\n    - Vector：Object 數組\n    - LinkedList：雙向鏈表（JDK 1.6 之前爲循環鏈表）\n2. Set\n    - HashSet（無序、唯一）：基於 HashMap\n    - LinkedHashSet：基於 LinkedHashMap\n    - TreeSet（有序、唯一）：紅黑樹（自平衡的排序二叉樹）\n3. Map\n    - HashMap：數組 + 鏈表 + 紅黑樹（鏈表長於閾值即轉爲紅黑樹以減少搜索時間；閾值默認爲 8；JDK 1.8 之前沒有紅黑樹）\n    - LinkedHashMap：繼承自 HashMap，但多了一條雙向鏈表\n    - Hashtable：數組 + 鏈表\n    - TreeMap：紅黑樹（自平衡的排序二叉樹）\n\n### Iterator 迭代器\n\n迭代器就是 Iterator 接口，它抽象出迭代一個集合需要的方法，`hasNext()` 和 `next()` 方法，以便集合類實現該接口，從而方便對集合的遍歷。有了迭代器就可以在迭代集合元素時更改元素而不拋出 `ConcurrentModificationException` 了。\n\n爲什麼？因爲非採用 Iterator 進行遍歷時更改元素會修改到 `modCount` 變量（用於紀錄集合結構性改變的次數）的值，而沒有修改 `expectedModCount` 的值，基於 fail-fast 機制檢查兩值是否相同時會拋出異常；而使用 Iterator 遍歷時更改元素會同時修改 `modCount` 和 `expectedModCount`，兩者相等，不會拋出異常。\n\n```java\nMap<Integer, String> map = new HashMap();\nmap.put(1, \"Java\");\nmap.put(2, \"Python\");\nmap.put(2, \"Go\");\nIterator<Map.Entry<Integer, String>> iterator = map.entrySet().iterator();\nwhile (iterator.hasNext()) {\n  Map.Entry<Integer, String> entry = iterator.next();\n  System.out.println(entry.getKey() + entry.getValue());\n}\n```\n\n### 有哪些集合是線程不安全的？怎麼解決？\n\n常用的 `ArrayList`、`LinkedList`、`HashMap`、`HashSet`、`TreeSet`、`TreeMap`、`PriorityQueue` 都不是線程安全的。解決方法就是用 `java.util.concurrent` 包提供的線程安全的集合來代替：\n\n1. `ConcurrentHashMap` 代替 `HashMap`；\n2. `CopyOnWriteArrayList` 代替 `ArrayList`；\n3. `ConcurrentLinkedQueue` 代替 `LinkedList` ；\n4. `BlockingQueue` 接口下的 `PriorityBlockingQueue`、`LinkedBlockingQueue` 等阻塞隊列代替 `PriorityQueue`  等；\n5. `ConcurrentSkipListMap`  代替 `TreeMap` ，實現多線程下保證按 Key 的順序存儲元素。\n\n### `length`、`length()`、`size()` 三者用途\n\n1. `length`：用於數組。\n2. `length()`：用於字符串。\n3. `size()`：用於集合。\n\n### Collections 工具類的使用\n\n- 排序\n\n    ```java\n    //反轉\n    void reverse(List list)\n    //隨機排序\n    void shuffle(List list)\n    //按自然排序的升序排序\n    void sort(List list)\n    //定制排序，由Comparator控制排序邏輯\n    void sort(List list, Comparator c)\n    //交換兩個索引位置的元素\n    void swap(List list, int i , int j)\n    //旋轉。當distance為正數時，將list後distance個元素整體移到前面。當distance為負數時，將 list的前distance個元素整體移到後面\n    void rotate(List list, int distance)\n    ```\n\n- 查找替換統計\n\n    ```java\n    //對List進行二分查找，返回索引，注意List必須是有序的\n    int binarySearch(List list, Object key)\n    //根據元素的自然順序，返回最大的元素。 類比int min(Collection coll)\n    int max(Collection coll)\n    //根據定制排序，返回最大元素，排序規則由Comparatator類控制。類比int min(Collection coll, Comparator c)\n    int max(Collection coll, Comparator c)\n    //用指定的元素代替指定list中的所有元素\n    void fill(List list, Object obj)\n    //用新元素替換舊元素\n    boolean replaceAll(List list, Object oldVal, Object newVal) \n    //統計元素出現次數\n    int frequency(Collection c, Object o)\n    //統計target在list中第一次出現的索引，找不到則返回-1，類比int lastIndexOfSubList(List source, list target)\n    int indexOfSubList(List list, List target)\n    ```\n\n## List\n\n### 比較 ArrayList 與 LinkedList\n\n共同點：\n\n1. 都實現了 List 接口；\n2. 都是不同步的，不保證線程安全。\n\n不同點：\n\n1. **底層數據結構不同**。ArrayList 是對象數組；LinkedList 是雙向鏈表（JDK 1.6 之前爲循環列表）。\n2. **插入和刪除的時間複雜度不同**。ArrayList 追加元素的複雜度爲 O(1)，指定位置 i 插入或刪除元素的複雜度爲 O(n-i)；LinkedList 追加元素和刪除末端元素的時間複雜度爲 O(1)，指定位置 i 插入或刪除元素的時間複雜度近似 O(n)。\n3. **對快速隨機訪問的支持不同**。ArrayList 支持快速隨機訪問；LinkedList 不支持。\n4. **對空間的利用不同**。ArrayList 末尾會預留一定的空間以便元素新增；LinkedList 則是會在每個元素多存儲了指針數據。\n- 比較雙向鏈表與雙向循環鏈表\n\n    ![](java-collection/Untitled%201.png)\n\n    ![](java-collection/Untitled%202.png)\n\n### ArrayList 擴容機制\n\nArrayList 底層是對象數組，其容量可以動態增長。在添加大量元素之前，建議調用 `ensureCapacity` 方法擴容，以減少遞增式再分配內存的次數，提升程序效率。\n\n其擴容機制大致是這樣的：ArrayList 提供了默認構造方法，通過默認構造方法構造對象，默認容量值爲 10 ，但此時未分配相應內存空間，而是**等到首次添加元素時才開始初始化**一個空間爲 10 的對象數組。當第 11 個元素加入時會觸發擴容機制，**容量會擴充到原來的 1.5 倍**（`newCapacity = oldCapacity + oldCapacity >> 2`），即變爲 15。如通過指定相應的容量大小的構造方法構造對象且指定的容量值大於 0 ，則一開始就會分配相應的內存空間。\n\n### 快速隨機訪問 RandomAccess\n\nRandomAccess 接口爲空實現，僅僅標識著實現類具備快速隨機訪問的能力。ArrayList 實現了該接口，而 LinkedList 未實現。\n\n```java\npublic interface RandomAccess {\n}\n```\n\n### `System.arraycopy()` 與 `Arrays.copyOf()` 方法\n\n1. `System.arraycopy()` 方法用於源數組到目標數組之間的數據拷貝；\n2. `Arrays.copyOf()` 方法用於給源數組擴容，底層調用`System.arraycopy()` 。\n\n### CopyOnWriteArrayList 的特點\n\n1. 寫時會加鎖並複製整個集合；\n2. 讀時可能讀到舊數據。\n\n### **如何移除列表中的元素**\n\n首先，不能在 foreach 循環中移除元素，根據 fail-fast（快速失敗） 機制，會拋出 `ConcurrentModificationException` （並發修改異常）。\n\n可以採用 `iterator` 或者 `Collection.removeIf()` 方法移除列表元素。\n\n```java\nString[] arrs = {\"a\", \"b\", \"c\"};\nList<String> list = Arrays.stream(arrs).collect(Collectors.toList());\n\n// 採用 iterator\nIterator<String> iterator = list.iterator();\nwhile (iterator.hasNext()) {\n    if (\"a\".equals(iterator.next())) {\n        iterator.remove();\n        break;\n    }\n}\n\n// 採用 removeIf 方法，\"a\"::equals 等價於 x -> \"a\".equals(x)\nlist.removeIf(\"a\"::equals); \n\nSystem.out.println(list);\n```\n\n### **正確使用 Arrays.asList**\n\n如果非要在 `foreach` 循環中刪除元素，還可以使用 `CopyOnWriteArrayList`，此集合是 `fail-safe` 的。`CopyOnWriteArrayList` 修改元素時會 copy 一個新列表進行修改，不會改變迭代中的列表，因此是安全的，但會產生新的列表作爲代價。\n\nArrays 工具類有一個靜態方法 `asList(T... a)`，能將**對象**數組包裝成一個 List，底層數據依然是原數組，原數組改變，List 也隨之改變，但 List 本身的 `add`/`remove`/`clear` 並不可用，調用會拋出 `UnsupportedOperationException`。\n\nArrays 類中關於 `asList` 方法的代碼如下：\n\n```java\npublic static <T> List<T> asList(T... a) {\n\t\t// 這裏的 ArrayList 是 Arrays 類中定義的私有靜態類，不是 java.util.ArrayList\n    return new ArrayList<>(a);\n}\n```\n\n爲什麼 `asList` 方法傳入的必須是對象數組呢？\n\n你看上面的代碼，泛型，沒錯泛型只能是對象啊，基本類型是不行的。\n\n傳入基本類型的數組會怎樣呢？請看下面代碼：\n\n```java\nint[] ints = {1, 3, 4};\n// 此時的泛型是 int[] 對象，而非 int\nList<int[]> list = Arrays.asList(ints);\n// list 的大小爲 1，就是 ints 這個數組對象\nSystem.out.println(list.size());\n```\n\n### **把數組轉爲 `java.util.ArrayList`**\n\n那麼，如何簡便地把一個數組轉爲普遍意義上的 ArrayList 呢？\n\n```java\n// 1) 使用 ArrayList 的帶參構造方法\nList<String> list = new ArrayList<>(Arrays.asList(arrs));\n\n// 2) 使用 Java 8 的 Stream API\nList<String> list = Arrays.stream(arrs).collect(Collectors.toList());\n// boxed 方法可以把基本類型轉成包裝類型\nList<Integer> intList = Arrays.stream(ints).boxed().collect(Collectors.toList());\n\n// 3) 使用 Guava 包的 API\nImmutableList<String[]> list = ImmutableList.of(arrs);\nImmutableList<String> list1 = ImmutableList.copyOf(arrs);\nArrayList<String> list2 = Lists.newArrayList(arrs);\n\n// 4) 使用 Java 9 的 API\nList<String> list = List.of(arrs);\n```\n\n### **將 List 轉爲數組**\n\n使用 List 的 `toArray` 方法可以將 List 轉爲數組，代碼如下：\n\n```java\n// new String[0] 僅僅爲了告知類型返回數組的類型\nString[] strings = list.toArray(new String[0]);\n```\n\n## Set\n\n### 無序性和不可重複性的含義\n\n無序性並不等同於隨機性，而是根據數據的哈希值決定其存儲位置，使用者無法指定其存儲順序。\n\n不可重複性是指添加的元素按 equals 方法判斷結果爲 false。\n\n### 比較 HashSet、LinkedHashSet 和 TreeSet\n\n共同點：\n\n1. 都實現了 Set 接口；\n2. 元素不可重複；\n3. 都是線程不安全的。\n\n不同點：\n\n1. **底層數據接口不同**。HashSet 底層是 HashMap；LinkedHashSet 底層是 LinkedHashMap；TreeSet 底層是紅黑樹。\n2. **有序性不同**。HashSet 無序；LinkedHashSet 和 TreeSet 有序。TreeSet 還可以自定義排序。\n\n### 自定義排序的實現\n\n自定義排序最通用的就是給要排序的類實現一個 Comparable 接口，隨後可以使用 Collection.sort 方法進行排序。又或者不實現 Comparable 接口，而是傳入 Comparator 到 Collection.sort 方法中。\n\n### HashSet 如何檢查重複\n\nHashSet 集合進行元素重複校驗時先比較 hashcode ，當 hashcode 一樣時再調用 equals，提高了校驗效率。因此，如果只重寫 equals 方法而不重寫 hashcode 方法，會出現 equals 返回 true，而 hashcode 不等的情況，這樣如果要求 HashSet 去重就會失敗。\n\n## Map\n\n### 比較 HashMap 與 TreeMap\n\n共同點：\n\n1. 都繼承自 AbstractMap，間接實現了 Map 接口；\n2. 都是線程不安全的。\n\n不同點：\n\n1. **底層數據結構不同**。HashMap 底層是數組 + 鏈表 + 紅黑樹（鏈表長於閾值即轉爲紅黑樹以減少搜索時間；閾值默認爲 8；JDK 1.8 之前沒有紅黑樹）；TreeMap 底層是紅黑樹。\n2. **HashMap 無搜索和排序的能力**。TreeMap 實現了 NavigableMap 接口，使其有對集合內元素搜索的能力；實現了 SortMap 接口，使其有對集合內元素根據鍵排序的能力。\n\n### HashMap 底層實現\n\nJDK 1.7 或之前，HashMap 的底層實現是數組+鏈表。該數組的定義如下：\n\n```java\ntransient Node<K,V>[] table;\n```\n\nNode 存儲了鍵、值、哈希值和下一個節點，是一個鏈表，也就是說 Node 數組就是一個鏈表數組。\n\n![](java-collection/Untitled%203.png)\n\n該數組默認大小是 `1 << 4 = 16` 。調用 put 方法增加元素時，通過散列算法（hash方法，也稱之爲擾動函數）算得元素的 hash 值，然後計算其應插入的桶（數組中的一個位置）。如果該位置已有元素，就會產生哈希衝突（或稱碰撞），此時通過**拉鍊法**解決。當 Map 中包含的元素數量大於等於 `threshold = loadFactor * capacity` （loadFactor 默認爲 0.75f），且新建的元素剛好落在一個非空的桶上時，會觸發擴容機制，將數組容量擴大 2 倍。\n\nJDK 1.8 開始，HashMap 的底層實現是數組+鏈表+紅黑樹，**當鏈表長度大於閾值（默認爲 8），且當前數組長度大於等於 64 時，該鏈表會轉爲紅黑樹，以減少搜索時間。**\n\n![](java-collection/Untitled%204.png)\n\n**（1）散列算法**\n\n首先獲取 key 的 hash 值，然後將高位的 hash 分散到低位，以便減少哈希衝突。\n\n```java\n// JDK 1.7\nstatic int hash(int h) {\n  // This function ensures that hashCodes that differ only by\n  // constant multiples at each bit position have a bounded\n  // number of collisions (approximately 8 at default load factor).\n  h ^= (h >>> 20) ^ (h >>> 12);\n  return h ^ (h >>> 7) ^ (h >>> 4);\n}\n// JDK 1.8\nstatic final int hash(Object key) {\n  int h;\n  return (key == null) ? 0 : (h = key.hashCode()) ^ (h >>> 16);\n}\n```\n\n**（2）插入算法**\n\n如何根據散列值確定要插入的數組位置呢？因爲保證了數組長度爲 2 之幂次，所以確定插入位置時的取餘算法 `hash % length` 等價於 `h & (length-1)`。簡單起見，假定 hash 爲 0100 1010； length 是 8，其二進制爲 0000 1000，取餘爲 `hash % length` = 0000 0010 = `h & (length-1)`。此處 hash 值的高位 0100 並沒有用到，會造成高位不同而低位相同的 hash 值衝突，這也是散列算法要將高位分散到低位的緣故。\n\n```java\n/**\n* Returns index for hash code h.\n*/\nstatic int indexFor(int h, int length) {\n  return h & (length-1);\n}\n```\n\n**（3）拉鍊法**\n\n將衝突的值加到鏈表中。\n\n**（4）保證數組長度爲 2 之幂次的方法**\n\n- 方法一（JDK 1.8 或以前）：將原數二進制表示的第一個非零位後面的所有零位填滿爲 1，然後再加 1。\n\n    ```java\n    static final int tableSizeFor(int cap) {\n        int n = cap - 1;\n        n |= n >>> 1;\n        n |= n >>> 2;\n        n |= n >>> 4;\n        n |= n >>> 8;\n        n |= n >>> 16;\n        return (n < 0) ? 1 : (n >= MAXIMUM_CAPACITY) ? MAXIMUM_CAPACITY : n + 1;\n    }\n    ```\n\n- 方法二（JDK 15）：計算原數二進制表示的第一個非零位前面零的數量 k，然後將 -1 (其二進制形式全是1)無符號右移 k 位再加 1。\n\n    ```java\n    // HashMap.java\n    static final int tableSizeFor(int cap) {\n      int n = -1 >>> Integer.numberOfLeadingZeros(cap - 1);\n      return (n < 0) ? 1 : (n >= MAXIMUM_CAPACITY) ? MAXIMUM_CAPACITY : n + 1;\n    }\n\n    // Integer.java\n    // 取得整數二進制表示前面的零位數量\n    public static int numberOfLeadingZeros(int i) {\n      // HD, Count leading 0's\n      if (i <= 0)\n          return i == 0 ? 32 : 0;\n      int n = 31;\n      if (i >= 1 << 16) { n -= 16; i >>>= 16; }\n      if (i >= 1 <<  8) { n -=  8; i >>>=  8; }\n      if (i >= 1 <<  4) { n -=  4; i >>>=  4; }\n      if (i >= 1 <<  2) { n -=  2; i >>>=  2; }\n      return n - (i >>> 1);\n    }\n    ```\n\n- 方法三（不推薦）：將原數以 2 爲底取對數，然後再取其 ceil 值，將其作爲 2 的指數計算即可。\n\n    ```java\n    int n = (int) Math.pow(2, (int) Math.ceil(Math.log(cap) / Math.log(2)));\n    ```\n\n### 遍歷 HashMap 的幾種方式\n\nHashMap 有四大類遍歷方式：iterator、for、lambda 和 stream。性能上 stream 的並行循環最高，其他的差別不大。安全性上在遍歷時應使用 `iterator.remove`方法刪除元素或者用 stream 的 `filter` 過濾不需要的數據再進行循環。參見 [https://mp.weixin.qq.com/s/Zz6mofCtmYpABDL1ap04ow](https://mp.weixin.qq.com/s/Zz6mofCtmYpABDL1ap04ow)\n\n```java\nMap<String, String> map = new HashMap<>();\nmap.put(\"lang\", \"java\");\nmap.put(\"sys\", \"linux\");\n// iterator\nIterator<Map.Entry<String, String>> iterator = map.entrySet().iterator();\nwhile (iterator.hasNext()) {\n  Map.Entry<String, String> entry = iterator.next();\n  System.out.println(entry.getKey() + \":\" + entry.getValue());\n}\n// for，增強 for 循環，使用了迭代器\nfor (Map.Entry<String, String> entry : map.entrySet()) {\n  System.out.println(entry.getKey() + \":\" + entry.getValue());\n}\n// lambda\nmap.forEach((key, value) -> {\n  System.out.println(key + \":\" + value);\n});\n// stream\nmap.entrySet().parallelStream().forEach((entry) -> {\n  System.out.println(entry.getKey() + \":\" + entry.getValue());\n});\n```\n\n### ConcurrentHashMap 線程安全的原因\n\n我們知道 HashMap 是線程不安全的，在多線程環境下需要用 ConcurrentHashMap 代替。那麼，ConcurrentHashMap 是怎麼實現線程安全的呢？\n\nJDK 1.7 時，採用**分段鎖**，主幹是一個 Segment 數組，Segment 裏維護著一個 HashEntry 數組。對同一 Segment 的數據進行操作需要考慮鎖競爭，不同的則不需要。\n\n![](java-collection/Untitled%205.png)\n\nJDK 1.8 開始取消了分段鎖，採用 **CAS（樂觀鎖） 和 synchronized（悲觀鎖）** 來保證並發安全。synchronized 只鎖定當前鏈表或紅黑二叉樹的首節點，這樣只要 hash 不衝突，就不會產生並發。\n\n![](java-collection/Untitled%206.png)","source":"_posts/it/java/java-collection.md","raw":"---\ntitle: Java 集合\np: it/java/java-collection.md\ntags:\n- Java\n---\n\nJava 集合分 List、Set、Map 三大類，其中 List 和 Set 實現了 Collection 接口。List 的特點是數據有序、可重複；Set 的特點是數據無序、不可重複；Map 存儲鍵值映射，Key 不可重複，Value 可重複，且一個 Key 只能對應一個 Value。\n\nList 有一實現 `ArrayList`，其底層實現是對象數組，默認容量是 10，但等到首次添加元素時才分配內存，每次遞增爲上次容量的 1.5 倍。在添加大量元素之前，建議調用 `ensureCapacity` 方法擴容，以減少遞增式再分配內存的次數。\n\nSet 有一實現 `HashSet`，其底層實現是 `HashMap` ，其檢查重複的機制有賴於 `hashCode` 和 `equals` 方法。\n\nMap 有一實現 `HashMap` ，JDK 1.8 之後其底層實現是：**數組 + 鏈表 + 紅黑二叉樹**。紅黑樹是爲了減少搜索時間，默認當鏈表長度大於 8 且當前數組長度大於等於 64 時，鏈表會轉爲紅黑樹。數組默認容量是 16，通過帶參構造方法傳入的容量值如非 2 的幂次會自動向上轉爲 2 的幂次，以便元素散列存儲（元素位置才可通過 `hash & (length-1)` 確定）。添加元素時，若元素數量大於數組長度的 75% 且該元素存在哈希衝突，則觸發擴容機制，數組容量翻倍。\n\n總結下 HashMap 中解決哈希衝突的方式：\n\n1. 使用鏈表 — 拉鍊法；\n2. 使用紅黑二叉樹；\n3. 擴容底層數組；\n4. 強制數組容量爲 2 之幂次；\n5. 將元素的 hash 值的高位分散到低位等等。\n\n`ArrayList`、`HashSet`、`HashMap` 都是線程不安全的。在多線程環境下應使用 J.U.C 包下的對應的並發類 `CopyOnWriteArrayList` 、`ConcurrentHashMap` （`HashSet` 用`ConcurrentHashMap` 的 keySet 可得 Set 視圖）。`CopyOnWriteArrayList` 會在寫時加鎖並複製集合進行操作；`ConcurrentHashMap` 在 JDK 1.7 使用分段鎖，在 JDK 1.8 取消分段鎖採用 CAS（樂觀鎖） 和 synchronized（悲觀鎖） 只對鏈表或紅黑二叉樹的節點加鎖。\n\n<!-- more -->\n\n## 概覽\n\n集合是相對數組來說，更靈活多樣的容器。Java 的集合框架肇始於兩大接口，Collection 和 Map。Collection 下有 List、Queue 和 Set 等等接口，然後衍生出 ArrayList、LinkedList、HashSet、TreeSet、LinkedHashSet 等等實現；Map 下有 HashMap、TreeMap 等重要子類。\n\n![](java-collection/Untitled.png)\n\n### List、Set、Map 三者之區別\n\n1. List：存儲的元素有序、可重複。\n2. Set：存儲的元素無序、不可重複。\n3. Map：使用鍵值對存儲，一鍵一值，Key 無序、不可重複；Value 無序、可重複。\n\n### List、Set、Map 三者之底層數據結構\n\n1. List\n    - ArrayList：Object 數組\n    - Vector：Object 數組\n    - LinkedList：雙向鏈表（JDK 1.6 之前爲循環鏈表）\n2. Set\n    - HashSet（無序、唯一）：基於 HashMap\n    - LinkedHashSet：基於 LinkedHashMap\n    - TreeSet（有序、唯一）：紅黑樹（自平衡的排序二叉樹）\n3. Map\n    - HashMap：數組 + 鏈表 + 紅黑樹（鏈表長於閾值即轉爲紅黑樹以減少搜索時間；閾值默認爲 8；JDK 1.8 之前沒有紅黑樹）\n    - LinkedHashMap：繼承自 HashMap，但多了一條雙向鏈表\n    - Hashtable：數組 + 鏈表\n    - TreeMap：紅黑樹（自平衡的排序二叉樹）\n\n### Iterator 迭代器\n\n迭代器就是 Iterator 接口，它抽象出迭代一個集合需要的方法，`hasNext()` 和 `next()` 方法，以便集合類實現該接口，從而方便對集合的遍歷。有了迭代器就可以在迭代集合元素時更改元素而不拋出 `ConcurrentModificationException` 了。\n\n爲什麼？因爲非採用 Iterator 進行遍歷時更改元素會修改到 `modCount` 變量（用於紀錄集合結構性改變的次數）的值，而沒有修改 `expectedModCount` 的值，基於 fail-fast 機制檢查兩值是否相同時會拋出異常；而使用 Iterator 遍歷時更改元素會同時修改 `modCount` 和 `expectedModCount`，兩者相等，不會拋出異常。\n\n```java\nMap<Integer, String> map = new HashMap();\nmap.put(1, \"Java\");\nmap.put(2, \"Python\");\nmap.put(2, \"Go\");\nIterator<Map.Entry<Integer, String>> iterator = map.entrySet().iterator();\nwhile (iterator.hasNext()) {\n  Map.Entry<Integer, String> entry = iterator.next();\n  System.out.println(entry.getKey() + entry.getValue());\n}\n```\n\n### 有哪些集合是線程不安全的？怎麼解決？\n\n常用的 `ArrayList`、`LinkedList`、`HashMap`、`HashSet`、`TreeSet`、`TreeMap`、`PriorityQueue` 都不是線程安全的。解決方法就是用 `java.util.concurrent` 包提供的線程安全的集合來代替：\n\n1. `ConcurrentHashMap` 代替 `HashMap`；\n2. `CopyOnWriteArrayList` 代替 `ArrayList`；\n3. `ConcurrentLinkedQueue` 代替 `LinkedList` ；\n4. `BlockingQueue` 接口下的 `PriorityBlockingQueue`、`LinkedBlockingQueue` 等阻塞隊列代替 `PriorityQueue`  等；\n5. `ConcurrentSkipListMap`  代替 `TreeMap` ，實現多線程下保證按 Key 的順序存儲元素。\n\n### `length`、`length()`、`size()` 三者用途\n\n1. `length`：用於數組。\n2. `length()`：用於字符串。\n3. `size()`：用於集合。\n\n### Collections 工具類的使用\n\n- 排序\n\n    ```java\n    //反轉\n    void reverse(List list)\n    //隨機排序\n    void shuffle(List list)\n    //按自然排序的升序排序\n    void sort(List list)\n    //定制排序，由Comparator控制排序邏輯\n    void sort(List list, Comparator c)\n    //交換兩個索引位置的元素\n    void swap(List list, int i , int j)\n    //旋轉。當distance為正數時，將list後distance個元素整體移到前面。當distance為負數時，將 list的前distance個元素整體移到後面\n    void rotate(List list, int distance)\n    ```\n\n- 查找替換統計\n\n    ```java\n    //對List進行二分查找，返回索引，注意List必須是有序的\n    int binarySearch(List list, Object key)\n    //根據元素的自然順序，返回最大的元素。 類比int min(Collection coll)\n    int max(Collection coll)\n    //根據定制排序，返回最大元素，排序規則由Comparatator類控制。類比int min(Collection coll, Comparator c)\n    int max(Collection coll, Comparator c)\n    //用指定的元素代替指定list中的所有元素\n    void fill(List list, Object obj)\n    //用新元素替換舊元素\n    boolean replaceAll(List list, Object oldVal, Object newVal) \n    //統計元素出現次數\n    int frequency(Collection c, Object o)\n    //統計target在list中第一次出現的索引，找不到則返回-1，類比int lastIndexOfSubList(List source, list target)\n    int indexOfSubList(List list, List target)\n    ```\n\n## List\n\n### 比較 ArrayList 與 LinkedList\n\n共同點：\n\n1. 都實現了 List 接口；\n2. 都是不同步的，不保證線程安全。\n\n不同點：\n\n1. **底層數據結構不同**。ArrayList 是對象數組；LinkedList 是雙向鏈表（JDK 1.6 之前爲循環列表）。\n2. **插入和刪除的時間複雜度不同**。ArrayList 追加元素的複雜度爲 O(1)，指定位置 i 插入或刪除元素的複雜度爲 O(n-i)；LinkedList 追加元素和刪除末端元素的時間複雜度爲 O(1)，指定位置 i 插入或刪除元素的時間複雜度近似 O(n)。\n3. **對快速隨機訪問的支持不同**。ArrayList 支持快速隨機訪問；LinkedList 不支持。\n4. **對空間的利用不同**。ArrayList 末尾會預留一定的空間以便元素新增；LinkedList 則是會在每個元素多存儲了指針數據。\n- 比較雙向鏈表與雙向循環鏈表\n\n    ![](java-collection/Untitled%201.png)\n\n    ![](java-collection/Untitled%202.png)\n\n### ArrayList 擴容機制\n\nArrayList 底層是對象數組，其容量可以動態增長。在添加大量元素之前，建議調用 `ensureCapacity` 方法擴容，以減少遞增式再分配內存的次數，提升程序效率。\n\n其擴容機制大致是這樣的：ArrayList 提供了默認構造方法，通過默認構造方法構造對象，默認容量值爲 10 ，但此時未分配相應內存空間，而是**等到首次添加元素時才開始初始化**一個空間爲 10 的對象數組。當第 11 個元素加入時會觸發擴容機制，**容量會擴充到原來的 1.5 倍**（`newCapacity = oldCapacity + oldCapacity >> 2`），即變爲 15。如通過指定相應的容量大小的構造方法構造對象且指定的容量值大於 0 ，則一開始就會分配相應的內存空間。\n\n### 快速隨機訪問 RandomAccess\n\nRandomAccess 接口爲空實現，僅僅標識著實現類具備快速隨機訪問的能力。ArrayList 實現了該接口，而 LinkedList 未實現。\n\n```java\npublic interface RandomAccess {\n}\n```\n\n### `System.arraycopy()` 與 `Arrays.copyOf()` 方法\n\n1. `System.arraycopy()` 方法用於源數組到目標數組之間的數據拷貝；\n2. `Arrays.copyOf()` 方法用於給源數組擴容，底層調用`System.arraycopy()` 。\n\n### CopyOnWriteArrayList 的特點\n\n1. 寫時會加鎖並複製整個集合；\n2. 讀時可能讀到舊數據。\n\n### **如何移除列表中的元素**\n\n首先，不能在 foreach 循環中移除元素，根據 fail-fast（快速失敗） 機制，會拋出 `ConcurrentModificationException` （並發修改異常）。\n\n可以採用 `iterator` 或者 `Collection.removeIf()` 方法移除列表元素。\n\n```java\nString[] arrs = {\"a\", \"b\", \"c\"};\nList<String> list = Arrays.stream(arrs).collect(Collectors.toList());\n\n// 採用 iterator\nIterator<String> iterator = list.iterator();\nwhile (iterator.hasNext()) {\n    if (\"a\".equals(iterator.next())) {\n        iterator.remove();\n        break;\n    }\n}\n\n// 採用 removeIf 方法，\"a\"::equals 等價於 x -> \"a\".equals(x)\nlist.removeIf(\"a\"::equals); \n\nSystem.out.println(list);\n```\n\n### **正確使用 Arrays.asList**\n\n如果非要在 `foreach` 循環中刪除元素，還可以使用 `CopyOnWriteArrayList`，此集合是 `fail-safe` 的。`CopyOnWriteArrayList` 修改元素時會 copy 一個新列表進行修改，不會改變迭代中的列表，因此是安全的，但會產生新的列表作爲代價。\n\nArrays 工具類有一個靜態方法 `asList(T... a)`，能將**對象**數組包裝成一個 List，底層數據依然是原數組，原數組改變，List 也隨之改變，但 List 本身的 `add`/`remove`/`clear` 並不可用，調用會拋出 `UnsupportedOperationException`。\n\nArrays 類中關於 `asList` 方法的代碼如下：\n\n```java\npublic static <T> List<T> asList(T... a) {\n\t\t// 這裏的 ArrayList 是 Arrays 類中定義的私有靜態類，不是 java.util.ArrayList\n    return new ArrayList<>(a);\n}\n```\n\n爲什麼 `asList` 方法傳入的必須是對象數組呢？\n\n你看上面的代碼，泛型，沒錯泛型只能是對象啊，基本類型是不行的。\n\n傳入基本類型的數組會怎樣呢？請看下面代碼：\n\n```java\nint[] ints = {1, 3, 4};\n// 此時的泛型是 int[] 對象，而非 int\nList<int[]> list = Arrays.asList(ints);\n// list 的大小爲 1，就是 ints 這個數組對象\nSystem.out.println(list.size());\n```\n\n### **把數組轉爲 `java.util.ArrayList`**\n\n那麼，如何簡便地把一個數組轉爲普遍意義上的 ArrayList 呢？\n\n```java\n// 1) 使用 ArrayList 的帶參構造方法\nList<String> list = new ArrayList<>(Arrays.asList(arrs));\n\n// 2) 使用 Java 8 的 Stream API\nList<String> list = Arrays.stream(arrs).collect(Collectors.toList());\n// boxed 方法可以把基本類型轉成包裝類型\nList<Integer> intList = Arrays.stream(ints).boxed().collect(Collectors.toList());\n\n// 3) 使用 Guava 包的 API\nImmutableList<String[]> list = ImmutableList.of(arrs);\nImmutableList<String> list1 = ImmutableList.copyOf(arrs);\nArrayList<String> list2 = Lists.newArrayList(arrs);\n\n// 4) 使用 Java 9 的 API\nList<String> list = List.of(arrs);\n```\n\n### **將 List 轉爲數組**\n\n使用 List 的 `toArray` 方法可以將 List 轉爲數組，代碼如下：\n\n```java\n// new String[0] 僅僅爲了告知類型返回數組的類型\nString[] strings = list.toArray(new String[0]);\n```\n\n## Set\n\n### 無序性和不可重複性的含義\n\n無序性並不等同於隨機性，而是根據數據的哈希值決定其存儲位置，使用者無法指定其存儲順序。\n\n不可重複性是指添加的元素按 equals 方法判斷結果爲 false。\n\n### 比較 HashSet、LinkedHashSet 和 TreeSet\n\n共同點：\n\n1. 都實現了 Set 接口；\n2. 元素不可重複；\n3. 都是線程不安全的。\n\n不同點：\n\n1. **底層數據接口不同**。HashSet 底層是 HashMap；LinkedHashSet 底層是 LinkedHashMap；TreeSet 底層是紅黑樹。\n2. **有序性不同**。HashSet 無序；LinkedHashSet 和 TreeSet 有序。TreeSet 還可以自定義排序。\n\n### 自定義排序的實現\n\n自定義排序最通用的就是給要排序的類實現一個 Comparable 接口，隨後可以使用 Collection.sort 方法進行排序。又或者不實現 Comparable 接口，而是傳入 Comparator 到 Collection.sort 方法中。\n\n### HashSet 如何檢查重複\n\nHashSet 集合進行元素重複校驗時先比較 hashcode ，當 hashcode 一樣時再調用 equals，提高了校驗效率。因此，如果只重寫 equals 方法而不重寫 hashcode 方法，會出現 equals 返回 true，而 hashcode 不等的情況，這樣如果要求 HashSet 去重就會失敗。\n\n## Map\n\n### 比較 HashMap 與 TreeMap\n\n共同點：\n\n1. 都繼承自 AbstractMap，間接實現了 Map 接口；\n2. 都是線程不安全的。\n\n不同點：\n\n1. **底層數據結構不同**。HashMap 底層是數組 + 鏈表 + 紅黑樹（鏈表長於閾值即轉爲紅黑樹以減少搜索時間；閾值默認爲 8；JDK 1.8 之前沒有紅黑樹）；TreeMap 底層是紅黑樹。\n2. **HashMap 無搜索和排序的能力**。TreeMap 實現了 NavigableMap 接口，使其有對集合內元素搜索的能力；實現了 SortMap 接口，使其有對集合內元素根據鍵排序的能力。\n\n### HashMap 底層實現\n\nJDK 1.7 或之前，HashMap 的底層實現是數組+鏈表。該數組的定義如下：\n\n```java\ntransient Node<K,V>[] table;\n```\n\nNode 存儲了鍵、值、哈希值和下一個節點，是一個鏈表，也就是說 Node 數組就是一個鏈表數組。\n\n![](java-collection/Untitled%203.png)\n\n該數組默認大小是 `1 << 4 = 16` 。調用 put 方法增加元素時，通過散列算法（hash方法，也稱之爲擾動函數）算得元素的 hash 值，然後計算其應插入的桶（數組中的一個位置）。如果該位置已有元素，就會產生哈希衝突（或稱碰撞），此時通過**拉鍊法**解決。當 Map 中包含的元素數量大於等於 `threshold = loadFactor * capacity` （loadFactor 默認爲 0.75f），且新建的元素剛好落在一個非空的桶上時，會觸發擴容機制，將數組容量擴大 2 倍。\n\nJDK 1.8 開始，HashMap 的底層實現是數組+鏈表+紅黑樹，**當鏈表長度大於閾值（默認爲 8），且當前數組長度大於等於 64 時，該鏈表會轉爲紅黑樹，以減少搜索時間。**\n\n![](java-collection/Untitled%204.png)\n\n**（1）散列算法**\n\n首先獲取 key 的 hash 值，然後將高位的 hash 分散到低位，以便減少哈希衝突。\n\n```java\n// JDK 1.7\nstatic int hash(int h) {\n  // This function ensures that hashCodes that differ only by\n  // constant multiples at each bit position have a bounded\n  // number of collisions (approximately 8 at default load factor).\n  h ^= (h >>> 20) ^ (h >>> 12);\n  return h ^ (h >>> 7) ^ (h >>> 4);\n}\n// JDK 1.8\nstatic final int hash(Object key) {\n  int h;\n  return (key == null) ? 0 : (h = key.hashCode()) ^ (h >>> 16);\n}\n```\n\n**（2）插入算法**\n\n如何根據散列值確定要插入的數組位置呢？因爲保證了數組長度爲 2 之幂次，所以確定插入位置時的取餘算法 `hash % length` 等價於 `h & (length-1)`。簡單起見，假定 hash 爲 0100 1010； length 是 8，其二進制爲 0000 1000，取餘爲 `hash % length` = 0000 0010 = `h & (length-1)`。此處 hash 值的高位 0100 並沒有用到，會造成高位不同而低位相同的 hash 值衝突，這也是散列算法要將高位分散到低位的緣故。\n\n```java\n/**\n* Returns index for hash code h.\n*/\nstatic int indexFor(int h, int length) {\n  return h & (length-1);\n}\n```\n\n**（3）拉鍊法**\n\n將衝突的值加到鏈表中。\n\n**（4）保證數組長度爲 2 之幂次的方法**\n\n- 方法一（JDK 1.8 或以前）：將原數二進制表示的第一個非零位後面的所有零位填滿爲 1，然後再加 1。\n\n    ```java\n    static final int tableSizeFor(int cap) {\n        int n = cap - 1;\n        n |= n >>> 1;\n        n |= n >>> 2;\n        n |= n >>> 4;\n        n |= n >>> 8;\n        n |= n >>> 16;\n        return (n < 0) ? 1 : (n >= MAXIMUM_CAPACITY) ? MAXIMUM_CAPACITY : n + 1;\n    }\n    ```\n\n- 方法二（JDK 15）：計算原數二進制表示的第一個非零位前面零的數量 k，然後將 -1 (其二進制形式全是1)無符號右移 k 位再加 1。\n\n    ```java\n    // HashMap.java\n    static final int tableSizeFor(int cap) {\n      int n = -1 >>> Integer.numberOfLeadingZeros(cap - 1);\n      return (n < 0) ? 1 : (n >= MAXIMUM_CAPACITY) ? MAXIMUM_CAPACITY : n + 1;\n    }\n\n    // Integer.java\n    // 取得整數二進制表示前面的零位數量\n    public static int numberOfLeadingZeros(int i) {\n      // HD, Count leading 0's\n      if (i <= 0)\n          return i == 0 ? 32 : 0;\n      int n = 31;\n      if (i >= 1 << 16) { n -= 16; i >>>= 16; }\n      if (i >= 1 <<  8) { n -=  8; i >>>=  8; }\n      if (i >= 1 <<  4) { n -=  4; i >>>=  4; }\n      if (i >= 1 <<  2) { n -=  2; i >>>=  2; }\n      return n - (i >>> 1);\n    }\n    ```\n\n- 方法三（不推薦）：將原數以 2 爲底取對數，然後再取其 ceil 值，將其作爲 2 的指數計算即可。\n\n    ```java\n    int n = (int) Math.pow(2, (int) Math.ceil(Math.log(cap) / Math.log(2)));\n    ```\n\n### 遍歷 HashMap 的幾種方式\n\nHashMap 有四大類遍歷方式：iterator、for、lambda 和 stream。性能上 stream 的並行循環最高，其他的差別不大。安全性上在遍歷時應使用 `iterator.remove`方法刪除元素或者用 stream 的 `filter` 過濾不需要的數據再進行循環。參見 [https://mp.weixin.qq.com/s/Zz6mofCtmYpABDL1ap04ow](https://mp.weixin.qq.com/s/Zz6mofCtmYpABDL1ap04ow)\n\n```java\nMap<String, String> map = new HashMap<>();\nmap.put(\"lang\", \"java\");\nmap.put(\"sys\", \"linux\");\n// iterator\nIterator<Map.Entry<String, String>> iterator = map.entrySet().iterator();\nwhile (iterator.hasNext()) {\n  Map.Entry<String, String> entry = iterator.next();\n  System.out.println(entry.getKey() + \":\" + entry.getValue());\n}\n// for，增強 for 循環，使用了迭代器\nfor (Map.Entry<String, String> entry : map.entrySet()) {\n  System.out.println(entry.getKey() + \":\" + entry.getValue());\n}\n// lambda\nmap.forEach((key, value) -> {\n  System.out.println(key + \":\" + value);\n});\n// stream\nmap.entrySet().parallelStream().forEach((entry) -> {\n  System.out.println(entry.getKey() + \":\" + entry.getValue());\n});\n```\n\n### ConcurrentHashMap 線程安全的原因\n\n我們知道 HashMap 是線程不安全的，在多線程環境下需要用 ConcurrentHashMap 代替。那麼，ConcurrentHashMap 是怎麼實現線程安全的呢？\n\nJDK 1.7 時，採用**分段鎖**，主幹是一個 Segment 數組，Segment 裏維護著一個 HashEntry 數組。對同一 Segment 的數據進行操作需要考慮鎖競爭，不同的則不需要。\n\n![](java-collection/Untitled%205.png)\n\nJDK 1.8 開始取消了分段鎖，採用 **CAS（樂觀鎖） 和 synchronized（悲觀鎖）** 來保證並發安全。synchronized 只鎖定當前鏈表或紅黑二叉樹的首節點，這樣只要 hash 不衝突，就不會產生並發。\n\n![](java-collection/Untitled%206.png)","slug":"it/java/java-collection","published":1,"date":"2020-12-01T22:56:04.000Z","updated":"2020-12-02T07:03:36.480Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cki7m45kb000786w87o2e1g1b","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css\"><p>Java 集合分 List、Set、Map 三大類，其中 List 和 Set 實現了 Collection 接口。List 的特點是數據有序、可重複；Set 的特點是數據無序、不可重複；Map 存儲鍵值映射，Key 不可重複，Value 可重複，且一個 Key 只能對應一個 Value。</p>\n<p>List 有一實現 <code>ArrayList</code>，其底層實現是對象數組，默認容量是 10，但等到首次添加元素時才分配內存，每次遞增爲上次容量的 1.5 倍。在添加大量元素之前，建議調用 <code>ensureCapacity</code> 方法擴容，以減少遞增式再分配內存的次數。</p>\n<p>Set 有一實現 <code>HashSet</code>，其底層實現是 <code>HashMap</code> ，其檢查重複的機制有賴於 <code>hashCode</code> 和 <code>equals</code> 方法。</p>\n<p>Map 有一實現 <code>HashMap</code> ，JDK 1.8 之後其底層實現是：<strong>數組 + 鏈表 + 紅黑二叉樹</strong>。紅黑樹是爲了減少搜索時間，默認當鏈表長度大於 8 且當前數組長度大於等於 64 時，鏈表會轉爲紅黑樹。數組默認容量是 16，通過帶參構造方法傳入的容量值如非 2 的幂次會自動向上轉爲 2 的幂次，以便元素散列存儲（元素位置才可通過 <code>hash &amp; (length-1)</code> 確定）。添加元素時，若元素數量大於數組長度的 75% 且該元素存在哈希衝突，則觸發擴容機制，數組容量翻倍。</p>\n<p>總結下 HashMap 中解決哈希衝突的方式：</p>\n<ol>\n<li>使用鏈表 — 拉鍊法；</li>\n<li>使用紅黑二叉樹；</li>\n<li>擴容底層數組；</li>\n<li>強制數組容量爲 2 之幂次；</li>\n<li>將元素的 hash 值的高位分散到低位等等。</li>\n</ol>\n<p><code>ArrayList</code>、<code>HashSet</code>、<code>HashMap</code> 都是線程不安全的。在多線程環境下應使用 J.U.C 包下的對應的並發類 <code>CopyOnWriteArrayList</code> 、<code>ConcurrentHashMap</code> （<code>HashSet</code> 用<code>ConcurrentHashMap</code> 的 keySet 可得 Set 視圖）。<code>CopyOnWriteArrayList</code> 會在寫時加鎖並複製集合進行操作；<code>ConcurrentHashMap</code> 在 JDK 1.7 使用分段鎖，在 JDK 1.8 取消分段鎖採用 CAS（樂觀鎖） 和 synchronized（悲觀鎖） 只對鏈表或紅黑二叉樹的節點加鎖。</p>\n<a id=\"more\"></a>\n\n<h2 id=\"概覽\"><a href=\"#概覽\" class=\"headerlink\" title=\"概覽\"></a>概覽</h2><p>集合是相對數組來說，更靈活多樣的容器。Java 的集合框架肇始於兩大接口，Collection 和 Map。Collection 下有 List、Queue 和 Set 等等接口，然後衍生出 ArrayList、LinkedList、HashSet、TreeSet、LinkedHashSet 等等實現；Map 下有 HashMap、TreeMap 等重要子類。</p>\n<p><img src=\"/2020/12/02/it/java/java-collection/Untitled.png\" alt></p>\n<h3 id=\"List、Set、Map-三者之區別\"><a href=\"#List、Set、Map-三者之區別\" class=\"headerlink\" title=\"List、Set、Map 三者之區別\"></a>List、Set、Map 三者之區別</h3><ol>\n<li>List：存儲的元素有序、可重複。</li>\n<li>Set：存儲的元素無序、不可重複。</li>\n<li>Map：使用鍵值對存儲，一鍵一值，Key 無序、不可重複；Value 無序、可重複。</li>\n</ol>\n<h3 id=\"List、Set、Map-三者之底層數據結構\"><a href=\"#List、Set、Map-三者之底層數據結構\" class=\"headerlink\" title=\"List、Set、Map 三者之底層數據結構\"></a>List、Set、Map 三者之底層數據結構</h3><ol>\n<li>List<ul>\n<li>ArrayList：Object 數組</li>\n<li>Vector：Object 數組</li>\n<li>LinkedList：雙向鏈表（JDK 1.6 之前爲循環鏈表）</li>\n</ul>\n</li>\n<li>Set<ul>\n<li>HashSet（無序、唯一）：基於 HashMap</li>\n<li>LinkedHashSet：基於 LinkedHashMap</li>\n<li>TreeSet（有序、唯一）：紅黑樹（自平衡的排序二叉樹）</li>\n</ul>\n</li>\n<li>Map<ul>\n<li>HashMap：數組 + 鏈表 + 紅黑樹（鏈表長於閾值即轉爲紅黑樹以減少搜索時間；閾值默認爲 8；JDK 1.8 之前沒有紅黑樹）</li>\n<li>LinkedHashMap：繼承自 HashMap，但多了一條雙向鏈表</li>\n<li>Hashtable：數組 + 鏈表</li>\n<li>TreeMap：紅黑樹（自平衡的排序二叉樹）</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"Iterator-迭代器\"><a href=\"#Iterator-迭代器\" class=\"headerlink\" title=\"Iterator 迭代器\"></a>Iterator 迭代器</h3><p>迭代器就是 Iterator 接口，它抽象出迭代一個集合需要的方法，<code>hasNext()</code> 和 <code>next()</code> 方法，以便集合類實現該接口，從而方便對集合的遍歷。有了迭代器就可以在迭代集合元素時更改元素而不拋出 <code>ConcurrentModificationException</code> 了。</p>\n<p>爲什麼？因爲非採用 Iterator 進行遍歷時更改元素會修改到 <code>modCount</code> 變量（用於紀錄集合結構性改變的次數）的值，而沒有修改 <code>expectedModCount</code> 的值，基於 fail-fast 機制檢查兩值是否相同時會拋出異常；而使用 Iterator 遍歷時更改元素會同時修改 <code>modCount</code> 和 <code>expectedModCount</code>，兩者相等，不會拋出異常。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">Map&lt;Integer, String&gt; map = <span class=\"keyword\">new</span> HashMap();</span><br><span class=\"line\">map.put(<span class=\"number\">1</span>, <span class=\"string\">\"Java\"</span>);</span><br><span class=\"line\">map.put(<span class=\"number\">2</span>, <span class=\"string\">\"Python\"</span>);</span><br><span class=\"line\">map.put(<span class=\"number\">2</span>, <span class=\"string\">\"Go\"</span>);</span><br><span class=\"line\">Iterator&lt;Map.Entry&lt;Integer, String&gt;&gt; iterator = map.entrySet().iterator();</span><br><span class=\"line\"><span class=\"keyword\">while</span> (iterator.hasNext()) &#123;</span><br><span class=\"line\">  Map.Entry&lt;Integer, String&gt; entry = iterator.next();</span><br><span class=\"line\">  System.out.println(entry.getKey() + entry.getValue());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"有哪些集合是線程不安全的？怎麼解決？\"><a href=\"#有哪些集合是線程不安全的？怎麼解決？\" class=\"headerlink\" title=\"有哪些集合是線程不安全的？怎麼解決？\"></a>有哪些集合是線程不安全的？怎麼解決？</h3><p>常用的 <code>ArrayList</code>、<code>LinkedList</code>、<code>HashMap</code>、<code>HashSet</code>、<code>TreeSet</code>、<code>TreeMap</code>、<code>PriorityQueue</code> 都不是線程安全的。解決方法就是用 <code>java.util.concurrent</code> 包提供的線程安全的集合來代替：</p>\n<ol>\n<li><code>ConcurrentHashMap</code> 代替 <code>HashMap</code>；</li>\n<li><code>CopyOnWriteArrayList</code> 代替 <code>ArrayList</code>；</li>\n<li><code>ConcurrentLinkedQueue</code> 代替 <code>LinkedList</code> ；</li>\n<li><code>BlockingQueue</code> 接口下的 <code>PriorityBlockingQueue</code>、<code>LinkedBlockingQueue</code> 等阻塞隊列代替 <code>PriorityQueue</code>  等；</li>\n<li><code>ConcurrentSkipListMap</code>  代替 <code>TreeMap</code> ，實現多線程下保證按 Key 的順序存儲元素。</li>\n</ol>\n<h3 id=\"length、length-、size-三者用途\"><a href=\"#length、length-、size-三者用途\" class=\"headerlink\" title=\"length、length()、size() 三者用途\"></a><code>length</code>、<code>length()</code>、<code>size()</code> 三者用途</h3><ol>\n<li><code>length</code>：用於數組。</li>\n<li><code>length()</code>：用於字符串。</li>\n<li><code>size()</code>：用於集合。</li>\n</ol>\n<h3 id=\"Collections-工具類的使用\"><a href=\"#Collections-工具類的使用\" class=\"headerlink\" title=\"Collections 工具類的使用\"></a>Collections 工具類的使用</h3><ul>\n<li><p>排序</p>\n  <figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//反轉</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">reverse</span><span class=\"params\">(List list)</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"comment\">//隨機排序</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">shuffle</span><span class=\"params\">(List list)</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"comment\">//按自然排序的升序排序</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">sort</span><span class=\"params\">(List list)</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"comment\">//定制排序，由Comparator控制排序邏輯</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">sort</span><span class=\"params\">(List list, Comparator c)</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"comment\">//交換兩個索引位置的元素</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">swap</span><span class=\"params\">(List list, <span class=\"keyword\">int</span> i , <span class=\"keyword\">int</span> j)</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"comment\">//旋轉。當distance為正數時，將list後distance個元素整體移到前面。當distance為負數時，將 list的前distance個元素整體移到後面</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">rotate</span><span class=\"params\">(List list, <span class=\"keyword\">int</span> distance)</span></span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查找替換統計</p>\n  <figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//對List進行二分查找，返回索引，注意List必須是有序的</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">binarySearch</span><span class=\"params\">(List list, Object key)</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"comment\">//根據元素的自然順序，返回最大的元素。 類比int min(Collection coll)</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">max</span><span class=\"params\">(Collection coll)</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"comment\">//根據定制排序，返回最大元素，排序規則由Comparatator類控制。類比int min(Collection coll, Comparator c)</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">max</span><span class=\"params\">(Collection coll, Comparator c)</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"comment\">//用指定的元素代替指定list中的所有元素</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">fill</span><span class=\"params\">(List list, Object obj)</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"comment\">//用新元素替換舊元素</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">replaceAll</span><span class=\"params\">(List list, Object oldVal, Object newVal)</span> </span></span><br><span class=\"line\"><span class=\"function\"><span class=\"comment\">//統計元素出現次數</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">frequency</span><span class=\"params\">(Collection c, Object o)</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"comment\">//統計target在list中第一次出現的索引，找不到則返回-1，類比int lastIndexOfSubList(List source, list target)</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">indexOfSubList</span><span class=\"params\">(List list, List target)</span></span></span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"List\"><a href=\"#List\" class=\"headerlink\" title=\"List\"></a>List</h2><h3 id=\"比較-ArrayList-與-LinkedList\"><a href=\"#比較-ArrayList-與-LinkedList\" class=\"headerlink\" title=\"比較 ArrayList 與 LinkedList\"></a>比較 ArrayList 與 LinkedList</h3><p>共同點：</p>\n<ol>\n<li>都實現了 List 接口；</li>\n<li>都是不同步的，不保證線程安全。</li>\n</ol>\n<p>不同點：</p>\n<ol>\n<li><strong>底層數據結構不同</strong>。ArrayList 是對象數組；LinkedList 是雙向鏈表（JDK 1.6 之前爲循環列表）。</li>\n<li><strong>插入和刪除的時間複雜度不同</strong>。ArrayList 追加元素的複雜度爲 O(1)，指定位置 i 插入或刪除元素的複雜度爲 O(n-i)；LinkedList 追加元素和刪除末端元素的時間複雜度爲 O(1)，指定位置 i 插入或刪除元素的時間複雜度近似 O(n)。</li>\n<li><strong>對快速隨機訪問的支持不同</strong>。ArrayList 支持快速隨機訪問；LinkedList 不支持。</li>\n<li><strong>對空間的利用不同</strong>。ArrayList 末尾會預留一定的空間以便元素新增；LinkedList 則是會在每個元素多存儲了指針數據。</li>\n</ol>\n<ul>\n<li><p>比較雙向鏈表與雙向循環鏈表</p>\n<p>  <img src=\"/2020/12/02/it/java/java-collection/Untitled%201.png\" alt></p>\n<p>  <img src=\"/2020/12/02/it/java/java-collection/Untitled%202.png\" alt></p>\n</li>\n</ul>\n<h3 id=\"ArrayList-擴容機制\"><a href=\"#ArrayList-擴容機制\" class=\"headerlink\" title=\"ArrayList 擴容機制\"></a>ArrayList 擴容機制</h3><p>ArrayList 底層是對象數組，其容量可以動態增長。在添加大量元素之前，建議調用 <code>ensureCapacity</code> 方法擴容，以減少遞增式再分配內存的次數，提升程序效率。</p>\n<p>其擴容機制大致是這樣的：ArrayList 提供了默認構造方法，通過默認構造方法構造對象，默認容量值爲 10 ，但此時未分配相應內存空間，而是<strong>等到首次添加元素時才開始初始化</strong>一個空間爲 10 的對象數組。當第 11 個元素加入時會觸發擴容機制，<strong>容量會擴充到原來的 1.5 倍</strong>（<code>newCapacity = oldCapacity + oldCapacity &gt;&gt; 2</code>），即變爲 15。如通過指定相應的容量大小的構造方法構造對象且指定的容量值大於 0 ，則一開始就會分配相應的內存空間。</p>\n<h3 id=\"快速隨機訪問-RandomAccess\"><a href=\"#快速隨機訪問-RandomAccess\" class=\"headerlink\" title=\"快速隨機訪問 RandomAccess\"></a>快速隨機訪問 RandomAccess</h3><p>RandomAccess 接口爲空實現，僅僅標識著實現類具備快速隨機訪問的能力。ArrayList 實現了該接口，而 LinkedList 未實現。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">RandomAccess</span> </span>&#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"System-arraycopy-與-Arrays-copyOf-方法\"><a href=\"#System-arraycopy-與-Arrays-copyOf-方法\" class=\"headerlink\" title=\"System.arraycopy() 與 Arrays.copyOf() 方法\"></a><code>System.arraycopy()</code> 與 <code>Arrays.copyOf()</code> 方法</h3><ol>\n<li><code>System.arraycopy()</code> 方法用於源數組到目標數組之間的數據拷貝；</li>\n<li><code>Arrays.copyOf()</code> 方法用於給源數組擴容，底層調用<code>System.arraycopy()</code> 。</li>\n</ol>\n<h3 id=\"CopyOnWriteArrayList-的特點\"><a href=\"#CopyOnWriteArrayList-的特點\" class=\"headerlink\" title=\"CopyOnWriteArrayList 的特點\"></a>CopyOnWriteArrayList 的特點</h3><ol>\n<li>寫時會加鎖並複製整個集合；</li>\n<li>讀時可能讀到舊數據。</li>\n</ol>\n<h3 id=\"如何移除列表中的元素\"><a href=\"#如何移除列表中的元素\" class=\"headerlink\" title=\"如何移除列表中的元素\"></a><strong>如何移除列表中的元素</strong></h3><p>首先，不能在 foreach 循環中移除元素，根據 fail-fast（快速失敗） 機制，會拋出 <code>ConcurrentModificationException</code> （並發修改異常）。</p>\n<p>可以採用 <code>iterator</code> 或者 <code>Collection.removeIf()</code> 方法移除列表元素。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">String[] arrs = &#123;<span class=\"string\">\"a\"</span>, <span class=\"string\">\"b\"</span>, <span class=\"string\">\"c\"</span>&#125;;</span><br><span class=\"line\">List&lt;String&gt; list = Arrays.stream(arrs).collect(Collectors.toList());</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 採用 iterator</span></span><br><span class=\"line\">Iterator&lt;String&gt; iterator = list.iterator();</span><br><span class=\"line\"><span class=\"keyword\">while</span> (iterator.hasNext()) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"string\">\"a\"</span>.equals(iterator.next())) &#123;</span><br><span class=\"line\">        iterator.remove();</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 採用 removeIf 方法，\"a\"::equals 等價於 x -&gt; \"a\".equals(x)</span></span><br><span class=\"line\">list.removeIf(<span class=\"string\">\"a\"</span>::equals); </span><br><span class=\"line\"></span><br><span class=\"line\">System.out.println(list);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"正確使用-Arrays-asList\"><a href=\"#正確使用-Arrays-asList\" class=\"headerlink\" title=\"正確使用 Arrays.asList\"></a><strong>正確使用 Arrays.asList</strong></h3><p>如果非要在 <code>foreach</code> 循環中刪除元素，還可以使用 <code>CopyOnWriteArrayList</code>，此集合是 <code>fail-safe</code> 的。<code>CopyOnWriteArrayList</code> 修改元素時會 copy 一個新列表進行修改，不會改變迭代中的列表，因此是安全的，但會產生新的列表作爲代價。</p>\n<p>Arrays 工具類有一個靜態方法 <code>asList(T... a)</code>，能將<strong>對象</strong>數組包裝成一個 List，底層數據依然是原數組，原數組改變，List 也隨之改變，但 List 本身的 <code>add</code>/<code>remove</code>/<code>clear</code> 並不可用，調用會拋出 <code>UnsupportedOperationException</code>。</p>\n<p>Arrays 類中關於 <code>asList</code> 方法的代碼如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> &lt;T&gt; <span class=\"function\">List&lt;T&gt; <span class=\"title\">asList</span><span class=\"params\">(T... a)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 這裏的 ArrayList 是 Arrays 類中定義的私有靜態類，不是 java.util.ArrayList</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> ArrayList&lt;&gt;(a);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>爲什麼 <code>asList</code> 方法傳入的必須是對象數組呢？</p>\n<p>你看上面的代碼，泛型，沒錯泛型只能是對象啊，基本類型是不行的。</p>\n<p>傳入基本類型的數組會怎樣呢？請看下面代碼：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span>[] ints = &#123;<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>&#125;;</span><br><span class=\"line\"><span class=\"comment\">// 此時的泛型是 int[] 對象，而非 int</span></span><br><span class=\"line\">List&lt;<span class=\"keyword\">int</span>[]&gt; list = Arrays.asList(ints);</span><br><span class=\"line\"><span class=\"comment\">// list 的大小爲 1，就是 ints 這個數組對象</span></span><br><span class=\"line\">System.out.println(list.size());</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"把數組轉爲-java-util-ArrayList\"><a href=\"#把數組轉爲-java-util-ArrayList\" class=\"headerlink\" title=\"把數組轉爲 java.util.ArrayList\"></a><strong>把數組轉爲 <code>java.util.ArrayList</code></strong></h3><p>那麼，如何簡便地把一個數組轉爲普遍意義上的 ArrayList 呢？</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 1) 使用 ArrayList 的帶參構造方法</span></span><br><span class=\"line\">List&lt;String&gt; list = <span class=\"keyword\">new</span> ArrayList&lt;&gt;(Arrays.asList(arrs));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 2) 使用 Java 8 的 Stream API</span></span><br><span class=\"line\">List&lt;String&gt; list = Arrays.stream(arrs).collect(Collectors.toList());</span><br><span class=\"line\"><span class=\"comment\">// boxed 方法可以把基本類型轉成包裝類型</span></span><br><span class=\"line\">List&lt;Integer&gt; intList = Arrays.stream(ints).boxed().collect(Collectors.toList());</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 3) 使用 Guava 包的 API</span></span><br><span class=\"line\">ImmutableList&lt;String[]&gt; list = ImmutableList.of(arrs);</span><br><span class=\"line\">ImmutableList&lt;String&gt; list1 = ImmutableList.copyOf(arrs);</span><br><span class=\"line\">ArrayList&lt;String&gt; list2 = Lists.newArrayList(arrs);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 4) 使用 Java 9 的 API</span></span><br><span class=\"line\">List&lt;String&gt; list = List.of(arrs);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"將-List-轉爲數組\"><a href=\"#將-List-轉爲數組\" class=\"headerlink\" title=\"將 List 轉爲數組\"></a><strong>將 List 轉爲數組</strong></h3><p>使用 List 的 <code>toArray</code> 方法可以將 List 轉爲數組，代碼如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// new String[0] 僅僅爲了告知類型返回數組的類型</span></span><br><span class=\"line\">String[] strings = list.toArray(<span class=\"keyword\">new</span> String[<span class=\"number\">0</span>]);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Set\"><a href=\"#Set\" class=\"headerlink\" title=\"Set\"></a>Set</h2><h3 id=\"無序性和不可重複性的含義\"><a href=\"#無序性和不可重複性的含義\" class=\"headerlink\" title=\"無序性和不可重複性的含義\"></a>無序性和不可重複性的含義</h3><p>無序性並不等同於隨機性，而是根據數據的哈希值決定其存儲位置，使用者無法指定其存儲順序。</p>\n<p>不可重複性是指添加的元素按 equals 方法判斷結果爲 false。</p>\n<h3 id=\"比較-HashSet、LinkedHashSet-和-TreeSet\"><a href=\"#比較-HashSet、LinkedHashSet-和-TreeSet\" class=\"headerlink\" title=\"比較 HashSet、LinkedHashSet 和 TreeSet\"></a>比較 HashSet、LinkedHashSet 和 TreeSet</h3><p>共同點：</p>\n<ol>\n<li>都實現了 Set 接口；</li>\n<li>元素不可重複；</li>\n<li>都是線程不安全的。</li>\n</ol>\n<p>不同點：</p>\n<ol>\n<li><strong>底層數據接口不同</strong>。HashSet 底層是 HashMap；LinkedHashSet 底層是 LinkedHashMap；TreeSet 底層是紅黑樹。</li>\n<li><strong>有序性不同</strong>。HashSet 無序；LinkedHashSet 和 TreeSet 有序。TreeSet 還可以自定義排序。</li>\n</ol>\n<h3 id=\"自定義排序的實現\"><a href=\"#自定義排序的實現\" class=\"headerlink\" title=\"自定義排序的實現\"></a>自定義排序的實現</h3><p>自定義排序最通用的就是給要排序的類實現一個 Comparable 接口，隨後可以使用 Collection.sort 方法進行排序。又或者不實現 Comparable 接口，而是傳入 Comparator 到 Collection.sort 方法中。</p>\n<h3 id=\"HashSet-如何檢查重複\"><a href=\"#HashSet-如何檢查重複\" class=\"headerlink\" title=\"HashSet 如何檢查重複\"></a>HashSet 如何檢查重複</h3><p>HashSet 集合進行元素重複校驗時先比較 hashcode ，當 hashcode 一樣時再調用 equals，提高了校驗效率。因此，如果只重寫 equals 方法而不重寫 hashcode 方法，會出現 equals 返回 true，而 hashcode 不等的情況，這樣如果要求 HashSet 去重就會失敗。</p>\n<h2 id=\"Map\"><a href=\"#Map\" class=\"headerlink\" title=\"Map\"></a>Map</h2><h3 id=\"比較-HashMap-與-TreeMap\"><a href=\"#比較-HashMap-與-TreeMap\" class=\"headerlink\" title=\"比較 HashMap 與 TreeMap\"></a>比較 HashMap 與 TreeMap</h3><p>共同點：</p>\n<ol>\n<li>都繼承自 AbstractMap，間接實現了 Map 接口；</li>\n<li>都是線程不安全的。</li>\n</ol>\n<p>不同點：</p>\n<ol>\n<li><strong>底層數據結構不同</strong>。HashMap 底層是數組 + 鏈表 + 紅黑樹（鏈表長於閾值即轉爲紅黑樹以減少搜索時間；閾值默認爲 8；JDK 1.8 之前沒有紅黑樹）；TreeMap 底層是紅黑樹。</li>\n<li><strong>HashMap 無搜索和排序的能力</strong>。TreeMap 實現了 NavigableMap 接口，使其有對集合內元素搜索的能力；實現了 SortMap 接口，使其有對集合內元素根據鍵排序的能力。</li>\n</ol>\n<h3 id=\"HashMap-底層實現\"><a href=\"#HashMap-底層實現\" class=\"headerlink\" title=\"HashMap 底層實現\"></a>HashMap 底層實現</h3><p>JDK 1.7 或之前，HashMap 的底層實現是數組+鏈表。該數組的定義如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">transient</span> Node&lt;K,V&gt;[] table;</span><br></pre></td></tr></table></figure>\n\n<p>Node 存儲了鍵、值、哈希值和下一個節點，是一個鏈表，也就是說 Node 數組就是一個鏈表數組。</p>\n<p><img src=\"/2020/12/02/it/java/java-collection/Untitled%203.png\" alt></p>\n<p>該數組默認大小是 <code>1 &lt;&lt; 4 = 16</code> 。調用 put 方法增加元素時，通過散列算法（hash方法，也稱之爲擾動函數）算得元素的 hash 值，然後計算其應插入的桶（數組中的一個位置）。如果該位置已有元素，就會產生哈希衝突（或稱碰撞），此時通過<strong>拉鍊法</strong>解決。當 Map 中包含的元素數量大於等於 <code>threshold = loadFactor * capacity</code> （loadFactor 默認爲 0.75f），且新建的元素剛好落在一個非空的桶上時，會觸發擴容機制，將數組容量擴大 2 倍。</p>\n<p>JDK 1.8 開始，HashMap 的底層實現是數組+鏈表+紅黑樹，<strong>當鏈表長度大於閾值（默認爲 8），且當前數組長度大於等於 64 時，該鏈表會轉爲紅黑樹，以減少搜索時間。</strong></p>\n<p><img src=\"/2020/12/02/it/java/java-collection/Untitled%204.png\" alt></p>\n<p><strong>（1）散列算法</strong></p>\n<p>首先獲取 key 的 hash 值，然後將高位的 hash 分散到低位，以便減少哈希衝突。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// JDK 1.7</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">hash</span><span class=\"params\">(<span class=\"keyword\">int</span> h)</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// This function ensures that hashCodes that differ only by</span></span><br><span class=\"line\">  <span class=\"comment\">// constant multiples at each bit position have a bounded</span></span><br><span class=\"line\">  <span class=\"comment\">// number of collisions (approximately 8 at default load factor).</span></span><br><span class=\"line\">  h ^= (h &gt;&gt;&gt; <span class=\"number\">20</span>) ^ (h &gt;&gt;&gt; <span class=\"number\">12</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> h ^ (h &gt;&gt;&gt; <span class=\"number\">7</span>) ^ (h &gt;&gt;&gt; <span class=\"number\">4</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// JDK 1.8</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> <span class=\"title\">hash</span><span class=\"params\">(Object key)</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> h;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (key == <span class=\"keyword\">null</span>) ? <span class=\"number\">0</span> : (h = key.hashCode()) ^ (h &gt;&gt;&gt; <span class=\"number\">16</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>（2）插入算法</strong></p>\n<p>如何根據散列值確定要插入的數組位置呢？因爲保證了數組長度爲 2 之幂次，所以確定插入位置時的取餘算法 <code>hash % length</code> 等價於 <code>h &amp; (length-1)</code>。簡單起見，假定 hash 爲 0100 1010； length 是 8，其二進制爲 0000 1000，取餘爲 <code>hash % length</code> = 0000 0010 = <code>h &amp; (length-1)</code>。此處 hash 值的高位 0100 並沒有用到，會造成高位不同而低位相同的 hash 值衝突，這也是散列算法要將高位分散到低位的緣故。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">* Returns index for hash code h.</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">indexFor</span><span class=\"params\">(<span class=\"keyword\">int</span> h, <span class=\"keyword\">int</span> length)</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> h &amp; (length-<span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>（3）拉鍊法</strong></p>\n<p>將衝突的值加到鏈表中。</p>\n<p><strong>（4）保證數組長度爲 2 之幂次的方法</strong></p>\n<ul>\n<li><p>方法一（JDK 1.8 或以前）：將原數二進制表示的第一個非零位後面的所有零位填滿爲 1，然後再加 1。</p>\n  <figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> <span class=\"title\">tableSizeFor</span><span class=\"params\">(<span class=\"keyword\">int</span> cap)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = cap - <span class=\"number\">1</span>;</span><br><span class=\"line\">    n |= n &gt;&gt;&gt; <span class=\"number\">1</span>;</span><br><span class=\"line\">    n |= n &gt;&gt;&gt; <span class=\"number\">2</span>;</span><br><span class=\"line\">    n |= n &gt;&gt;&gt; <span class=\"number\">4</span>;</span><br><span class=\"line\">    n |= n &gt;&gt;&gt; <span class=\"number\">8</span>;</span><br><span class=\"line\">    n |= n &gt;&gt;&gt; <span class=\"number\">16</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (n &lt; <span class=\"number\">0</span>) ? <span class=\"number\">1</span> : (n &gt;= MAXIMUM_CAPACITY) ? MAXIMUM_CAPACITY : n + <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>方法二（JDK 15）：計算原數二進制表示的第一個非零位前面零的數量 k，然後將 -1 (其二進制形式全是1)無符號右移 k 位再加 1。</p>\n  <figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// HashMap.java</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> <span class=\"title\">tableSizeFor</span><span class=\"params\">(<span class=\"keyword\">int</span> cap)</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> n = -<span class=\"number\">1</span> &gt;&gt;&gt; Integer.numberOfLeadingZeros(cap - <span class=\"number\">1</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (n &lt; <span class=\"number\">0</span>) ? <span class=\"number\">1</span> : (n &gt;= MAXIMUM_CAPACITY) ? MAXIMUM_CAPACITY : n + <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Integer.java</span></span><br><span class=\"line\"><span class=\"comment\">// 取得整數二進制表示前面的零位數量</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">numberOfLeadingZeros</span><span class=\"params\">(<span class=\"keyword\">int</span> i)</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// HD, Count leading 0's</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (i &lt;= <span class=\"number\">0</span>)</span><br><span class=\"line\">      <span class=\"keyword\">return</span> i == <span class=\"number\">0</span> ? <span class=\"number\">32</span> : <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> n = <span class=\"number\">31</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (i &gt;= <span class=\"number\">1</span> &lt;&lt; <span class=\"number\">16</span>) &#123; n -= <span class=\"number\">16</span>; i &gt;&gt;&gt;= <span class=\"number\">16</span>; &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (i &gt;= <span class=\"number\">1</span> &lt;&lt;  <span class=\"number\">8</span>) &#123; n -=  <span class=\"number\">8</span>; i &gt;&gt;&gt;=  <span class=\"number\">8</span>; &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (i &gt;= <span class=\"number\">1</span> &lt;&lt;  <span class=\"number\">4</span>) &#123; n -=  <span class=\"number\">4</span>; i &gt;&gt;&gt;=  <span class=\"number\">4</span>; &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (i &gt;= <span class=\"number\">1</span> &lt;&lt;  <span class=\"number\">2</span>) &#123; n -=  <span class=\"number\">2</span>; i &gt;&gt;&gt;=  <span class=\"number\">2</span>; &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> n - (i &gt;&gt;&gt; <span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>方法三（不推薦）：將原數以 2 爲底取對數，然後再取其 ceil 值，將其作爲 2 的指數計算即可。</p>\n  <figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> n = (<span class=\"keyword\">int</span>) Math.pow(<span class=\"number\">2</span>, (<span class=\"keyword\">int</span>) Math.ceil(Math.log(cap) / Math.log(<span class=\"number\">2</span>)));</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h3 id=\"遍歷-HashMap-的幾種方式\"><a href=\"#遍歷-HashMap-的幾種方式\" class=\"headerlink\" title=\"遍歷 HashMap 的幾種方式\"></a>遍歷 HashMap 的幾種方式</h3><p>HashMap 有四大類遍歷方式：iterator、for、lambda 和 stream。性能上 stream 的並行循環最高，其他的差別不大。安全性上在遍歷時應使用 <code>iterator.remove</code>方法刪除元素或者用 stream 的 <code>filter</code> 過濾不需要的數據再進行循環。參見 <a href=\"https://mp.weixin.qq.com/s/Zz6mofCtmYpABDL1ap04ow\" target=\"_blank\" rel=\"noopener\">https://mp.weixin.qq.com/s/Zz6mofCtmYpABDL1ap04ow</a></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">Map&lt;String, String&gt; map = <span class=\"keyword\">new</span> HashMap&lt;&gt;();</span><br><span class=\"line\">map.put(<span class=\"string\">\"lang\"</span>, <span class=\"string\">\"java\"</span>);</span><br><span class=\"line\">map.put(<span class=\"string\">\"sys\"</span>, <span class=\"string\">\"linux\"</span>);</span><br><span class=\"line\"><span class=\"comment\">// iterator</span></span><br><span class=\"line\">Iterator&lt;Map.Entry&lt;String, String&gt;&gt; iterator = map.entrySet().iterator();</span><br><span class=\"line\"><span class=\"keyword\">while</span> (iterator.hasNext()) &#123;</span><br><span class=\"line\">  Map.Entry&lt;String, String&gt; entry = iterator.next();</span><br><span class=\"line\">  System.out.println(entry.getKey() + <span class=\"string\">\":\"</span> + entry.getValue());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// for，增強 for 循環，使用了迭代器</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (Map.Entry&lt;String, String&gt; entry : map.entrySet()) &#123;</span><br><span class=\"line\">  System.out.println(entry.getKey() + <span class=\"string\">\":\"</span> + entry.getValue());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// lambda</span></span><br><span class=\"line\">map.forEach((key, value) -&gt; &#123;</span><br><span class=\"line\">  System.out.println(key + <span class=\"string\">\":\"</span> + value);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// stream</span></span><br><span class=\"line\">map.entrySet().parallelStream().forEach((entry) -&gt; &#123;</span><br><span class=\"line\">  System.out.println(entry.getKey() + <span class=\"string\">\":\"</span> + entry.getValue());</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"ConcurrentHashMap-線程安全的原因\"><a href=\"#ConcurrentHashMap-線程安全的原因\" class=\"headerlink\" title=\"ConcurrentHashMap 線程安全的原因\"></a>ConcurrentHashMap 線程安全的原因</h3><p>我們知道 HashMap 是線程不安全的，在多線程環境下需要用 ConcurrentHashMap 代替。那麼，ConcurrentHashMap 是怎麼實現線程安全的呢？</p>\n<p>JDK 1.7 時，採用<strong>分段鎖</strong>，主幹是一個 Segment 數組，Segment 裏維護著一個 HashEntry 數組。對同一 Segment 的數據進行操作需要考慮鎖競爭，不同的則不需要。</p>\n<p><img src=\"/2020/12/02/it/java/java-collection/Untitled%205.png\" alt></p>\n<p>JDK 1.8 開始取消了分段鎖，採用 <strong>CAS（樂觀鎖） 和 synchronized（悲觀鎖）</strong> 來保證並發安全。synchronized 只鎖定當前鏈表或紅黑二叉樹的首節點，這樣只要 hash 不衝突，就不會產生並發。</p>\n<p><img src=\"/2020/12/02/it/java/java-collection/Untitled%206.png\" alt></p>\n","site":{"data":{}},"excerpt":"<p>Java 集合分 List、Set、Map 三大類，其中 List 和 Set 實現了 Collection 接口。List 的特點是數據有序、可重複；Set 的特點是數據無序、不可重複；Map 存儲鍵值映射，Key 不可重複，Value 可重複，且一個 Key 只能對應一個 Value。</p>\n<p>List 有一實現 <code>ArrayList</code>，其底層實現是對象數組，默認容量是 10，但等到首次添加元素時才分配內存，每次遞增爲上次容量的 1.5 倍。在添加大量元素之前，建議調用 <code>ensureCapacity</code> 方法擴容，以減少遞增式再分配內存的次數。</p>\n<p>Set 有一實現 <code>HashSet</code>，其底層實現是 <code>HashMap</code> ，其檢查重複的機制有賴於 <code>hashCode</code> 和 <code>equals</code> 方法。</p>\n<p>Map 有一實現 <code>HashMap</code> ，JDK 1.8 之後其底層實現是：<strong>數組 + 鏈表 + 紅黑二叉樹</strong>。紅黑樹是爲了減少搜索時間，默認當鏈表長度大於 8 且當前數組長度大於等於 64 時，鏈表會轉爲紅黑樹。數組默認容量是 16，通過帶參構造方法傳入的容量值如非 2 的幂次會自動向上轉爲 2 的幂次，以便元素散列存儲（元素位置才可通過 <code>hash &amp; (length-1)</code> 確定）。添加元素時，若元素數量大於數組長度的 75% 且該元素存在哈希衝突，則觸發擴容機制，數組容量翻倍。</p>\n<p>總結下 HashMap 中解決哈希衝突的方式：</p>\n<ol>\n<li>使用鏈表 — 拉鍊法；</li>\n<li>使用紅黑二叉樹；</li>\n<li>擴容底層數組；</li>\n<li>強制數組容量爲 2 之幂次；</li>\n<li>將元素的 hash 值的高位分散到低位等等。</li>\n</ol>\n<p><code>ArrayList</code>、<code>HashSet</code>、<code>HashMap</code> 都是線程不安全的。在多線程環境下應使用 J.U.C 包下的對應的並發類 <code>CopyOnWriteArrayList</code> 、<code>ConcurrentHashMap</code> （<code>HashSet</code> 用<code>ConcurrentHashMap</code> 的 keySet 可得 Set 視圖）。<code>CopyOnWriteArrayList</code> 會在寫時加鎖並複製集合進行操作；<code>ConcurrentHashMap</code> 在 JDK 1.7 使用分段鎖，在 JDK 1.8 取消分段鎖採用 CAS（樂觀鎖） 和 synchronized（悲觀鎖） 只對鏈表或紅黑二叉樹的節點加鎖。</p>","more":"<h2 id=\"概覽\"><a href=\"#概覽\" class=\"headerlink\" title=\"概覽\"></a>概覽</h2><p>集合是相對數組來說，更靈活多樣的容器。Java 的集合框架肇始於兩大接口，Collection 和 Map。Collection 下有 List、Queue 和 Set 等等接口，然後衍生出 ArrayList、LinkedList、HashSet、TreeSet、LinkedHashSet 等等實現；Map 下有 HashMap、TreeMap 等重要子類。</p>\n<p><img src=\"/2020/12/02/it/java/java-collection/Untitled.png\" alt></p>\n<h3 id=\"List、Set、Map-三者之區別\"><a href=\"#List、Set、Map-三者之區別\" class=\"headerlink\" title=\"List、Set、Map 三者之區別\"></a>List、Set、Map 三者之區別</h3><ol>\n<li>List：存儲的元素有序、可重複。</li>\n<li>Set：存儲的元素無序、不可重複。</li>\n<li>Map：使用鍵值對存儲，一鍵一值，Key 無序、不可重複；Value 無序、可重複。</li>\n</ol>\n<h3 id=\"List、Set、Map-三者之底層數據結構\"><a href=\"#List、Set、Map-三者之底層數據結構\" class=\"headerlink\" title=\"List、Set、Map 三者之底層數據結構\"></a>List、Set、Map 三者之底層數據結構</h3><ol>\n<li>List<ul>\n<li>ArrayList：Object 數組</li>\n<li>Vector：Object 數組</li>\n<li>LinkedList：雙向鏈表（JDK 1.6 之前爲循環鏈表）</li>\n</ul>\n</li>\n<li>Set<ul>\n<li>HashSet（無序、唯一）：基於 HashMap</li>\n<li>LinkedHashSet：基於 LinkedHashMap</li>\n<li>TreeSet（有序、唯一）：紅黑樹（自平衡的排序二叉樹）</li>\n</ul>\n</li>\n<li>Map<ul>\n<li>HashMap：數組 + 鏈表 + 紅黑樹（鏈表長於閾值即轉爲紅黑樹以減少搜索時間；閾值默認爲 8；JDK 1.8 之前沒有紅黑樹）</li>\n<li>LinkedHashMap：繼承自 HashMap，但多了一條雙向鏈表</li>\n<li>Hashtable：數組 + 鏈表</li>\n<li>TreeMap：紅黑樹（自平衡的排序二叉樹）</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"Iterator-迭代器\"><a href=\"#Iterator-迭代器\" class=\"headerlink\" title=\"Iterator 迭代器\"></a>Iterator 迭代器</h3><p>迭代器就是 Iterator 接口，它抽象出迭代一個集合需要的方法，<code>hasNext()</code> 和 <code>next()</code> 方法，以便集合類實現該接口，從而方便對集合的遍歷。有了迭代器就可以在迭代集合元素時更改元素而不拋出 <code>ConcurrentModificationException</code> 了。</p>\n<p>爲什麼？因爲非採用 Iterator 進行遍歷時更改元素會修改到 <code>modCount</code> 變量（用於紀錄集合結構性改變的次數）的值，而沒有修改 <code>expectedModCount</code> 的值，基於 fail-fast 機制檢查兩值是否相同時會拋出異常；而使用 Iterator 遍歷時更改元素會同時修改 <code>modCount</code> 和 <code>expectedModCount</code>，兩者相等，不會拋出異常。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">Map&lt;Integer, String&gt; map = <span class=\"keyword\">new</span> HashMap();</span><br><span class=\"line\">map.put(<span class=\"number\">1</span>, <span class=\"string\">\"Java\"</span>);</span><br><span class=\"line\">map.put(<span class=\"number\">2</span>, <span class=\"string\">\"Python\"</span>);</span><br><span class=\"line\">map.put(<span class=\"number\">2</span>, <span class=\"string\">\"Go\"</span>);</span><br><span class=\"line\">Iterator&lt;Map.Entry&lt;Integer, String&gt;&gt; iterator = map.entrySet().iterator();</span><br><span class=\"line\"><span class=\"keyword\">while</span> (iterator.hasNext()) &#123;</span><br><span class=\"line\">  Map.Entry&lt;Integer, String&gt; entry = iterator.next();</span><br><span class=\"line\">  System.out.println(entry.getKey() + entry.getValue());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"有哪些集合是線程不安全的？怎麼解決？\"><a href=\"#有哪些集合是線程不安全的？怎麼解決？\" class=\"headerlink\" title=\"有哪些集合是線程不安全的？怎麼解決？\"></a>有哪些集合是線程不安全的？怎麼解決？</h3><p>常用的 <code>ArrayList</code>、<code>LinkedList</code>、<code>HashMap</code>、<code>HashSet</code>、<code>TreeSet</code>、<code>TreeMap</code>、<code>PriorityQueue</code> 都不是線程安全的。解決方法就是用 <code>java.util.concurrent</code> 包提供的線程安全的集合來代替：</p>\n<ol>\n<li><code>ConcurrentHashMap</code> 代替 <code>HashMap</code>；</li>\n<li><code>CopyOnWriteArrayList</code> 代替 <code>ArrayList</code>；</li>\n<li><code>ConcurrentLinkedQueue</code> 代替 <code>LinkedList</code> ；</li>\n<li><code>BlockingQueue</code> 接口下的 <code>PriorityBlockingQueue</code>、<code>LinkedBlockingQueue</code> 等阻塞隊列代替 <code>PriorityQueue</code>  等；</li>\n<li><code>ConcurrentSkipListMap</code>  代替 <code>TreeMap</code> ，實現多線程下保證按 Key 的順序存儲元素。</li>\n</ol>\n<h3 id=\"length、length-、size-三者用途\"><a href=\"#length、length-、size-三者用途\" class=\"headerlink\" title=\"length、length()、size() 三者用途\"></a><code>length</code>、<code>length()</code>、<code>size()</code> 三者用途</h3><ol>\n<li><code>length</code>：用於數組。</li>\n<li><code>length()</code>：用於字符串。</li>\n<li><code>size()</code>：用於集合。</li>\n</ol>\n<h3 id=\"Collections-工具類的使用\"><a href=\"#Collections-工具類的使用\" class=\"headerlink\" title=\"Collections 工具類的使用\"></a>Collections 工具類的使用</h3><ul>\n<li><p>排序</p>\n  <figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//反轉</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">reverse</span><span class=\"params\">(List list)</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"comment\">//隨機排序</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">shuffle</span><span class=\"params\">(List list)</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"comment\">//按自然排序的升序排序</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">sort</span><span class=\"params\">(List list)</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"comment\">//定制排序，由Comparator控制排序邏輯</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">sort</span><span class=\"params\">(List list, Comparator c)</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"comment\">//交換兩個索引位置的元素</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">swap</span><span class=\"params\">(List list, <span class=\"keyword\">int</span> i , <span class=\"keyword\">int</span> j)</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"comment\">//旋轉。當distance為正數時，將list後distance個元素整體移到前面。當distance為負數時，將 list的前distance個元素整體移到後面</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">rotate</span><span class=\"params\">(List list, <span class=\"keyword\">int</span> distance)</span></span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查找替換統計</p>\n  <figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//對List進行二分查找，返回索引，注意List必須是有序的</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">binarySearch</span><span class=\"params\">(List list, Object key)</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"comment\">//根據元素的自然順序，返回最大的元素。 類比int min(Collection coll)</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">max</span><span class=\"params\">(Collection coll)</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"comment\">//根據定制排序，返回最大元素，排序規則由Comparatator類控制。類比int min(Collection coll, Comparator c)</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">max</span><span class=\"params\">(Collection coll, Comparator c)</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"comment\">//用指定的元素代替指定list中的所有元素</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">fill</span><span class=\"params\">(List list, Object obj)</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"comment\">//用新元素替換舊元素</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">replaceAll</span><span class=\"params\">(List list, Object oldVal, Object newVal)</span> </span></span><br><span class=\"line\"><span class=\"function\"><span class=\"comment\">//統計元素出現次數</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">frequency</span><span class=\"params\">(Collection c, Object o)</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"comment\">//統計target在list中第一次出現的索引，找不到則返回-1，類比int lastIndexOfSubList(List source, list target)</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">indexOfSubList</span><span class=\"params\">(List list, List target)</span></span></span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"List\"><a href=\"#List\" class=\"headerlink\" title=\"List\"></a>List</h2><h3 id=\"比較-ArrayList-與-LinkedList\"><a href=\"#比較-ArrayList-與-LinkedList\" class=\"headerlink\" title=\"比較 ArrayList 與 LinkedList\"></a>比較 ArrayList 與 LinkedList</h3><p>共同點：</p>\n<ol>\n<li>都實現了 List 接口；</li>\n<li>都是不同步的，不保證線程安全。</li>\n</ol>\n<p>不同點：</p>\n<ol>\n<li><strong>底層數據結構不同</strong>。ArrayList 是對象數組；LinkedList 是雙向鏈表（JDK 1.6 之前爲循環列表）。</li>\n<li><strong>插入和刪除的時間複雜度不同</strong>。ArrayList 追加元素的複雜度爲 O(1)，指定位置 i 插入或刪除元素的複雜度爲 O(n-i)；LinkedList 追加元素和刪除末端元素的時間複雜度爲 O(1)，指定位置 i 插入或刪除元素的時間複雜度近似 O(n)。</li>\n<li><strong>對快速隨機訪問的支持不同</strong>。ArrayList 支持快速隨機訪問；LinkedList 不支持。</li>\n<li><strong>對空間的利用不同</strong>。ArrayList 末尾會預留一定的空間以便元素新增；LinkedList 則是會在每個元素多存儲了指針數據。</li>\n</ol>\n<ul>\n<li><p>比較雙向鏈表與雙向循環鏈表</p>\n<p>  <img src=\"/2020/12/02/it/java/java-collection/Untitled%201.png\" alt></p>\n<p>  <img src=\"/2020/12/02/it/java/java-collection/Untitled%202.png\" alt></p>\n</li>\n</ul>\n<h3 id=\"ArrayList-擴容機制\"><a href=\"#ArrayList-擴容機制\" class=\"headerlink\" title=\"ArrayList 擴容機制\"></a>ArrayList 擴容機制</h3><p>ArrayList 底層是對象數組，其容量可以動態增長。在添加大量元素之前，建議調用 <code>ensureCapacity</code> 方法擴容，以減少遞增式再分配內存的次數，提升程序效率。</p>\n<p>其擴容機制大致是這樣的：ArrayList 提供了默認構造方法，通過默認構造方法構造對象，默認容量值爲 10 ，但此時未分配相應內存空間，而是<strong>等到首次添加元素時才開始初始化</strong>一個空間爲 10 的對象數組。當第 11 個元素加入時會觸發擴容機制，<strong>容量會擴充到原來的 1.5 倍</strong>（<code>newCapacity = oldCapacity + oldCapacity &gt;&gt; 2</code>），即變爲 15。如通過指定相應的容量大小的構造方法構造對象且指定的容量值大於 0 ，則一開始就會分配相應的內存空間。</p>\n<h3 id=\"快速隨機訪問-RandomAccess\"><a href=\"#快速隨機訪問-RandomAccess\" class=\"headerlink\" title=\"快速隨機訪問 RandomAccess\"></a>快速隨機訪問 RandomAccess</h3><p>RandomAccess 接口爲空實現，僅僅標識著實現類具備快速隨機訪問的能力。ArrayList 實現了該接口，而 LinkedList 未實現。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">RandomAccess</span> </span>&#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"System-arraycopy-與-Arrays-copyOf-方法\"><a href=\"#System-arraycopy-與-Arrays-copyOf-方法\" class=\"headerlink\" title=\"System.arraycopy() 與 Arrays.copyOf() 方法\"></a><code>System.arraycopy()</code> 與 <code>Arrays.copyOf()</code> 方法</h3><ol>\n<li><code>System.arraycopy()</code> 方法用於源數組到目標數組之間的數據拷貝；</li>\n<li><code>Arrays.copyOf()</code> 方法用於給源數組擴容，底層調用<code>System.arraycopy()</code> 。</li>\n</ol>\n<h3 id=\"CopyOnWriteArrayList-的特點\"><a href=\"#CopyOnWriteArrayList-的特點\" class=\"headerlink\" title=\"CopyOnWriteArrayList 的特點\"></a>CopyOnWriteArrayList 的特點</h3><ol>\n<li>寫時會加鎖並複製整個集合；</li>\n<li>讀時可能讀到舊數據。</li>\n</ol>\n<h3 id=\"如何移除列表中的元素\"><a href=\"#如何移除列表中的元素\" class=\"headerlink\" title=\"如何移除列表中的元素\"></a><strong>如何移除列表中的元素</strong></h3><p>首先，不能在 foreach 循環中移除元素，根據 fail-fast（快速失敗） 機制，會拋出 <code>ConcurrentModificationException</code> （並發修改異常）。</p>\n<p>可以採用 <code>iterator</code> 或者 <code>Collection.removeIf()</code> 方法移除列表元素。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">String[] arrs = &#123;<span class=\"string\">\"a\"</span>, <span class=\"string\">\"b\"</span>, <span class=\"string\">\"c\"</span>&#125;;</span><br><span class=\"line\">List&lt;String&gt; list = Arrays.stream(arrs).collect(Collectors.toList());</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 採用 iterator</span></span><br><span class=\"line\">Iterator&lt;String&gt; iterator = list.iterator();</span><br><span class=\"line\"><span class=\"keyword\">while</span> (iterator.hasNext()) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"string\">\"a\"</span>.equals(iterator.next())) &#123;</span><br><span class=\"line\">        iterator.remove();</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 採用 removeIf 方法，\"a\"::equals 等價於 x -&gt; \"a\".equals(x)</span></span><br><span class=\"line\">list.removeIf(<span class=\"string\">\"a\"</span>::equals); </span><br><span class=\"line\"></span><br><span class=\"line\">System.out.println(list);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"正確使用-Arrays-asList\"><a href=\"#正確使用-Arrays-asList\" class=\"headerlink\" title=\"正確使用 Arrays.asList\"></a><strong>正確使用 Arrays.asList</strong></h3><p>如果非要在 <code>foreach</code> 循環中刪除元素，還可以使用 <code>CopyOnWriteArrayList</code>，此集合是 <code>fail-safe</code> 的。<code>CopyOnWriteArrayList</code> 修改元素時會 copy 一個新列表進行修改，不會改變迭代中的列表，因此是安全的，但會產生新的列表作爲代價。</p>\n<p>Arrays 工具類有一個靜態方法 <code>asList(T... a)</code>，能將<strong>對象</strong>數組包裝成一個 List，底層數據依然是原數組，原數組改變，List 也隨之改變，但 List 本身的 <code>add</code>/<code>remove</code>/<code>clear</code> 並不可用，調用會拋出 <code>UnsupportedOperationException</code>。</p>\n<p>Arrays 類中關於 <code>asList</code> 方法的代碼如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> &lt;T&gt; <span class=\"function\">List&lt;T&gt; <span class=\"title\">asList</span><span class=\"params\">(T... a)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 這裏的 ArrayList 是 Arrays 類中定義的私有靜態類，不是 java.util.ArrayList</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> ArrayList&lt;&gt;(a);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>爲什麼 <code>asList</code> 方法傳入的必須是對象數組呢？</p>\n<p>你看上面的代碼，泛型，沒錯泛型只能是對象啊，基本類型是不行的。</p>\n<p>傳入基本類型的數組會怎樣呢？請看下面代碼：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span>[] ints = &#123;<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>&#125;;</span><br><span class=\"line\"><span class=\"comment\">// 此時的泛型是 int[] 對象，而非 int</span></span><br><span class=\"line\">List&lt;<span class=\"keyword\">int</span>[]&gt; list = Arrays.asList(ints);</span><br><span class=\"line\"><span class=\"comment\">// list 的大小爲 1，就是 ints 這個數組對象</span></span><br><span class=\"line\">System.out.println(list.size());</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"把數組轉爲-java-util-ArrayList\"><a href=\"#把數組轉爲-java-util-ArrayList\" class=\"headerlink\" title=\"把數組轉爲 java.util.ArrayList\"></a><strong>把數組轉爲 <code>java.util.ArrayList</code></strong></h3><p>那麼，如何簡便地把一個數組轉爲普遍意義上的 ArrayList 呢？</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 1) 使用 ArrayList 的帶參構造方法</span></span><br><span class=\"line\">List&lt;String&gt; list = <span class=\"keyword\">new</span> ArrayList&lt;&gt;(Arrays.asList(arrs));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 2) 使用 Java 8 的 Stream API</span></span><br><span class=\"line\">List&lt;String&gt; list = Arrays.stream(arrs).collect(Collectors.toList());</span><br><span class=\"line\"><span class=\"comment\">// boxed 方法可以把基本類型轉成包裝類型</span></span><br><span class=\"line\">List&lt;Integer&gt; intList = Arrays.stream(ints).boxed().collect(Collectors.toList());</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 3) 使用 Guava 包的 API</span></span><br><span class=\"line\">ImmutableList&lt;String[]&gt; list = ImmutableList.of(arrs);</span><br><span class=\"line\">ImmutableList&lt;String&gt; list1 = ImmutableList.copyOf(arrs);</span><br><span class=\"line\">ArrayList&lt;String&gt; list2 = Lists.newArrayList(arrs);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 4) 使用 Java 9 的 API</span></span><br><span class=\"line\">List&lt;String&gt; list = List.of(arrs);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"將-List-轉爲數組\"><a href=\"#將-List-轉爲數組\" class=\"headerlink\" title=\"將 List 轉爲數組\"></a><strong>將 List 轉爲數組</strong></h3><p>使用 List 的 <code>toArray</code> 方法可以將 List 轉爲數組，代碼如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// new String[0] 僅僅爲了告知類型返回數組的類型</span></span><br><span class=\"line\">String[] strings = list.toArray(<span class=\"keyword\">new</span> String[<span class=\"number\">0</span>]);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Set\"><a href=\"#Set\" class=\"headerlink\" title=\"Set\"></a>Set</h2><h3 id=\"無序性和不可重複性的含義\"><a href=\"#無序性和不可重複性的含義\" class=\"headerlink\" title=\"無序性和不可重複性的含義\"></a>無序性和不可重複性的含義</h3><p>無序性並不等同於隨機性，而是根據數據的哈希值決定其存儲位置，使用者無法指定其存儲順序。</p>\n<p>不可重複性是指添加的元素按 equals 方法判斷結果爲 false。</p>\n<h3 id=\"比較-HashSet、LinkedHashSet-和-TreeSet\"><a href=\"#比較-HashSet、LinkedHashSet-和-TreeSet\" class=\"headerlink\" title=\"比較 HashSet、LinkedHashSet 和 TreeSet\"></a>比較 HashSet、LinkedHashSet 和 TreeSet</h3><p>共同點：</p>\n<ol>\n<li>都實現了 Set 接口；</li>\n<li>元素不可重複；</li>\n<li>都是線程不安全的。</li>\n</ol>\n<p>不同點：</p>\n<ol>\n<li><strong>底層數據接口不同</strong>。HashSet 底層是 HashMap；LinkedHashSet 底層是 LinkedHashMap；TreeSet 底層是紅黑樹。</li>\n<li><strong>有序性不同</strong>。HashSet 無序；LinkedHashSet 和 TreeSet 有序。TreeSet 還可以自定義排序。</li>\n</ol>\n<h3 id=\"自定義排序的實現\"><a href=\"#自定義排序的實現\" class=\"headerlink\" title=\"自定義排序的實現\"></a>自定義排序的實現</h3><p>自定義排序最通用的就是給要排序的類實現一個 Comparable 接口，隨後可以使用 Collection.sort 方法進行排序。又或者不實現 Comparable 接口，而是傳入 Comparator 到 Collection.sort 方法中。</p>\n<h3 id=\"HashSet-如何檢查重複\"><a href=\"#HashSet-如何檢查重複\" class=\"headerlink\" title=\"HashSet 如何檢查重複\"></a>HashSet 如何檢查重複</h3><p>HashSet 集合進行元素重複校驗時先比較 hashcode ，當 hashcode 一樣時再調用 equals，提高了校驗效率。因此，如果只重寫 equals 方法而不重寫 hashcode 方法，會出現 equals 返回 true，而 hashcode 不等的情況，這樣如果要求 HashSet 去重就會失敗。</p>\n<h2 id=\"Map\"><a href=\"#Map\" class=\"headerlink\" title=\"Map\"></a>Map</h2><h3 id=\"比較-HashMap-與-TreeMap\"><a href=\"#比較-HashMap-與-TreeMap\" class=\"headerlink\" title=\"比較 HashMap 與 TreeMap\"></a>比較 HashMap 與 TreeMap</h3><p>共同點：</p>\n<ol>\n<li>都繼承自 AbstractMap，間接實現了 Map 接口；</li>\n<li>都是線程不安全的。</li>\n</ol>\n<p>不同點：</p>\n<ol>\n<li><strong>底層數據結構不同</strong>。HashMap 底層是數組 + 鏈表 + 紅黑樹（鏈表長於閾值即轉爲紅黑樹以減少搜索時間；閾值默認爲 8；JDK 1.8 之前沒有紅黑樹）；TreeMap 底層是紅黑樹。</li>\n<li><strong>HashMap 無搜索和排序的能力</strong>。TreeMap 實現了 NavigableMap 接口，使其有對集合內元素搜索的能力；實現了 SortMap 接口，使其有對集合內元素根據鍵排序的能力。</li>\n</ol>\n<h3 id=\"HashMap-底層實現\"><a href=\"#HashMap-底層實現\" class=\"headerlink\" title=\"HashMap 底層實現\"></a>HashMap 底層實現</h3><p>JDK 1.7 或之前，HashMap 的底層實現是數組+鏈表。該數組的定義如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">transient</span> Node&lt;K,V&gt;[] table;</span><br></pre></td></tr></table></figure>\n\n<p>Node 存儲了鍵、值、哈希值和下一個節點，是一個鏈表，也就是說 Node 數組就是一個鏈表數組。</p>\n<p><img src=\"/2020/12/02/it/java/java-collection/Untitled%203.png\" alt></p>\n<p>該數組默認大小是 <code>1 &lt;&lt; 4 = 16</code> 。調用 put 方法增加元素時，通過散列算法（hash方法，也稱之爲擾動函數）算得元素的 hash 值，然後計算其應插入的桶（數組中的一個位置）。如果該位置已有元素，就會產生哈希衝突（或稱碰撞），此時通過<strong>拉鍊法</strong>解決。當 Map 中包含的元素數量大於等於 <code>threshold = loadFactor * capacity</code> （loadFactor 默認爲 0.75f），且新建的元素剛好落在一個非空的桶上時，會觸發擴容機制，將數組容量擴大 2 倍。</p>\n<p>JDK 1.8 開始，HashMap 的底層實現是數組+鏈表+紅黑樹，<strong>當鏈表長度大於閾值（默認爲 8），且當前數組長度大於等於 64 時，該鏈表會轉爲紅黑樹，以減少搜索時間。</strong></p>\n<p><img src=\"/2020/12/02/it/java/java-collection/Untitled%204.png\" alt></p>\n<p><strong>（1）散列算法</strong></p>\n<p>首先獲取 key 的 hash 值，然後將高位的 hash 分散到低位，以便減少哈希衝突。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// JDK 1.7</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">hash</span><span class=\"params\">(<span class=\"keyword\">int</span> h)</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// This function ensures that hashCodes that differ only by</span></span><br><span class=\"line\">  <span class=\"comment\">// constant multiples at each bit position have a bounded</span></span><br><span class=\"line\">  <span class=\"comment\">// number of collisions (approximately 8 at default load factor).</span></span><br><span class=\"line\">  h ^= (h &gt;&gt;&gt; <span class=\"number\">20</span>) ^ (h &gt;&gt;&gt; <span class=\"number\">12</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> h ^ (h &gt;&gt;&gt; <span class=\"number\">7</span>) ^ (h &gt;&gt;&gt; <span class=\"number\">4</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// JDK 1.8</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> <span class=\"title\">hash</span><span class=\"params\">(Object key)</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> h;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (key == <span class=\"keyword\">null</span>) ? <span class=\"number\">0</span> : (h = key.hashCode()) ^ (h &gt;&gt;&gt; <span class=\"number\">16</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>（2）插入算法</strong></p>\n<p>如何根據散列值確定要插入的數組位置呢？因爲保證了數組長度爲 2 之幂次，所以確定插入位置時的取餘算法 <code>hash % length</code> 等價於 <code>h &amp; (length-1)</code>。簡單起見，假定 hash 爲 0100 1010； length 是 8，其二進制爲 0000 1000，取餘爲 <code>hash % length</code> = 0000 0010 = <code>h &amp; (length-1)</code>。此處 hash 值的高位 0100 並沒有用到，會造成高位不同而低位相同的 hash 值衝突，這也是散列算法要將高位分散到低位的緣故。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">* Returns index for hash code h.</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">indexFor</span><span class=\"params\">(<span class=\"keyword\">int</span> h, <span class=\"keyword\">int</span> length)</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> h &amp; (length-<span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>（3）拉鍊法</strong></p>\n<p>將衝突的值加到鏈表中。</p>\n<p><strong>（4）保證數組長度爲 2 之幂次的方法</strong></p>\n<ul>\n<li><p>方法一（JDK 1.8 或以前）：將原數二進制表示的第一個非零位後面的所有零位填滿爲 1，然後再加 1。</p>\n  <figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> <span class=\"title\">tableSizeFor</span><span class=\"params\">(<span class=\"keyword\">int</span> cap)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = cap - <span class=\"number\">1</span>;</span><br><span class=\"line\">    n |= n &gt;&gt;&gt; <span class=\"number\">1</span>;</span><br><span class=\"line\">    n |= n &gt;&gt;&gt; <span class=\"number\">2</span>;</span><br><span class=\"line\">    n |= n &gt;&gt;&gt; <span class=\"number\">4</span>;</span><br><span class=\"line\">    n |= n &gt;&gt;&gt; <span class=\"number\">8</span>;</span><br><span class=\"line\">    n |= n &gt;&gt;&gt; <span class=\"number\">16</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (n &lt; <span class=\"number\">0</span>) ? <span class=\"number\">1</span> : (n &gt;= MAXIMUM_CAPACITY) ? MAXIMUM_CAPACITY : n + <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>方法二（JDK 15）：計算原數二進制表示的第一個非零位前面零的數量 k，然後將 -1 (其二進制形式全是1)無符號右移 k 位再加 1。</p>\n  <figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// HashMap.java</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> <span class=\"title\">tableSizeFor</span><span class=\"params\">(<span class=\"keyword\">int</span> cap)</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> n = -<span class=\"number\">1</span> &gt;&gt;&gt; Integer.numberOfLeadingZeros(cap - <span class=\"number\">1</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (n &lt; <span class=\"number\">0</span>) ? <span class=\"number\">1</span> : (n &gt;= MAXIMUM_CAPACITY) ? MAXIMUM_CAPACITY : n + <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Integer.java</span></span><br><span class=\"line\"><span class=\"comment\">// 取得整數二進制表示前面的零位數量</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">numberOfLeadingZeros</span><span class=\"params\">(<span class=\"keyword\">int</span> i)</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// HD, Count leading 0's</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (i &lt;= <span class=\"number\">0</span>)</span><br><span class=\"line\">      <span class=\"keyword\">return</span> i == <span class=\"number\">0</span> ? <span class=\"number\">32</span> : <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> n = <span class=\"number\">31</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (i &gt;= <span class=\"number\">1</span> &lt;&lt; <span class=\"number\">16</span>) &#123; n -= <span class=\"number\">16</span>; i &gt;&gt;&gt;= <span class=\"number\">16</span>; &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (i &gt;= <span class=\"number\">1</span> &lt;&lt;  <span class=\"number\">8</span>) &#123; n -=  <span class=\"number\">8</span>; i &gt;&gt;&gt;=  <span class=\"number\">8</span>; &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (i &gt;= <span class=\"number\">1</span> &lt;&lt;  <span class=\"number\">4</span>) &#123; n -=  <span class=\"number\">4</span>; i &gt;&gt;&gt;=  <span class=\"number\">4</span>; &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (i &gt;= <span class=\"number\">1</span> &lt;&lt;  <span class=\"number\">2</span>) &#123; n -=  <span class=\"number\">2</span>; i &gt;&gt;&gt;=  <span class=\"number\">2</span>; &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> n - (i &gt;&gt;&gt; <span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>方法三（不推薦）：將原數以 2 爲底取對數，然後再取其 ceil 值，將其作爲 2 的指數計算即可。</p>\n  <figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> n = (<span class=\"keyword\">int</span>) Math.pow(<span class=\"number\">2</span>, (<span class=\"keyword\">int</span>) Math.ceil(Math.log(cap) / Math.log(<span class=\"number\">2</span>)));</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h3 id=\"遍歷-HashMap-的幾種方式\"><a href=\"#遍歷-HashMap-的幾種方式\" class=\"headerlink\" title=\"遍歷 HashMap 的幾種方式\"></a>遍歷 HashMap 的幾種方式</h3><p>HashMap 有四大類遍歷方式：iterator、for、lambda 和 stream。性能上 stream 的並行循環最高，其他的差別不大。安全性上在遍歷時應使用 <code>iterator.remove</code>方法刪除元素或者用 stream 的 <code>filter</code> 過濾不需要的數據再進行循環。參見 <a href=\"https://mp.weixin.qq.com/s/Zz6mofCtmYpABDL1ap04ow\" target=\"_blank\" rel=\"noopener\">https://mp.weixin.qq.com/s/Zz6mofCtmYpABDL1ap04ow</a></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">Map&lt;String, String&gt; map = <span class=\"keyword\">new</span> HashMap&lt;&gt;();</span><br><span class=\"line\">map.put(<span class=\"string\">\"lang\"</span>, <span class=\"string\">\"java\"</span>);</span><br><span class=\"line\">map.put(<span class=\"string\">\"sys\"</span>, <span class=\"string\">\"linux\"</span>);</span><br><span class=\"line\"><span class=\"comment\">// iterator</span></span><br><span class=\"line\">Iterator&lt;Map.Entry&lt;String, String&gt;&gt; iterator = map.entrySet().iterator();</span><br><span class=\"line\"><span class=\"keyword\">while</span> (iterator.hasNext()) &#123;</span><br><span class=\"line\">  Map.Entry&lt;String, String&gt; entry = iterator.next();</span><br><span class=\"line\">  System.out.println(entry.getKey() + <span class=\"string\">\":\"</span> + entry.getValue());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// for，增強 for 循環，使用了迭代器</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (Map.Entry&lt;String, String&gt; entry : map.entrySet()) &#123;</span><br><span class=\"line\">  System.out.println(entry.getKey() + <span class=\"string\">\":\"</span> + entry.getValue());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// lambda</span></span><br><span class=\"line\">map.forEach((key, value) -&gt; &#123;</span><br><span class=\"line\">  System.out.println(key + <span class=\"string\">\":\"</span> + value);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// stream</span></span><br><span class=\"line\">map.entrySet().parallelStream().forEach((entry) -&gt; &#123;</span><br><span class=\"line\">  System.out.println(entry.getKey() + <span class=\"string\">\":\"</span> + entry.getValue());</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"ConcurrentHashMap-線程安全的原因\"><a href=\"#ConcurrentHashMap-線程安全的原因\" class=\"headerlink\" title=\"ConcurrentHashMap 線程安全的原因\"></a>ConcurrentHashMap 線程安全的原因</h3><p>我們知道 HashMap 是線程不安全的，在多線程環境下需要用 ConcurrentHashMap 代替。那麼，ConcurrentHashMap 是怎麼實現線程安全的呢？</p>\n<p>JDK 1.7 時，採用<strong>分段鎖</strong>，主幹是一個 Segment 數組，Segment 裏維護著一個 HashEntry 數組。對同一 Segment 的數據進行操作需要考慮鎖競爭，不同的則不需要。</p>\n<p><img src=\"/2020/12/02/it/java/java-collection/Untitled%205.png\" alt></p>\n<p>JDK 1.8 開始取消了分段鎖，採用 <strong>CAS（樂觀鎖） 和 synchronized（悲觀鎖）</strong> 來保證並發安全。synchronized 只鎖定當前鏈表或紅黑二叉樹的首節點，這樣只要 hash 不衝突，就不會產生並發。</p>\n<p><img src=\"/2020/12/02/it/java/java-collection/Untitled%206.png\" alt></p>"},{"title":"詩經·秦風‧蒹葭 (甲子話注音版)","p":"language/min/sigêng-giamgia","_content":"\n![](sigêng-giamgia/202010060948.jpg)\n\n{% aplayer \"蒹葭\" \"Hua\" \"2020/10/06/language/min/sigêng-giamgia/蒹葭.m4a\" \"/music.png\" %}\n\n蒹葭[^1]蒼蒼[^2]，白露爲霜。所謂伊人，在水一方。溯洄[^3]從之，道阻且長。溯游[^4]從之，宛在水中央。[^5]\ngiam¹ gia¹ cng¹ cng¹, bêh⁸ lao³ ui⁵ sng¹. so² ui³ i¹ ring⁵‚ do¹ zui² zêg⁸ hng¹. sog⁴ hoi⁵ ciong⁵ zu¹‚ dao⁶ zo² cian² dng⁵. sog⁴ iu⁵ ciong⁵ zu¹‚ uang² do¹ zui² dang¹ ng¹.\n\n蒹葭萋萋，白露未晞[^6]。所謂伊人，在水之湄[^7]。溯洄從之，道阻且躋。溯游從之，宛在水中坻[^8]。[^9]\ngiam¹ gia¹ ci¹ ci¹‚ bêh⁸ lao³ bhoi⁷ hi¹. so² ui³ i¹ ring⁵‚ do¹ zui² zu¹ mi⁵. sog⁴ hoi⁵ ciong⁵ zu¹‚ dao⁶ zo² cian² zi³. sog⁴ iu⁵ ciong¹ zu¹‚ uang² do¹ zui² dang¹ di².\n\n蒹葭采采，白露未已[^10]。所謂伊人，在水之涘[^11]。溯洄從之，道阻且右[^12]。溯游從之，宛在水中沚[^13]。[^14]_ giam¹ gia¹ cai² cai²‚ bêh⁸ lao³ bhoi⁷ in². so² ui³ i¹ ring⁵‚ do¹ zui² zu¹ su⁶. sog⁴ hoi⁵ ciong⁵ zu¹‚ dao⁶ zo² cian² iu⁶. sog⁴ iu⁵ ciong¹ zu¹‚ uang² do¹ zui² dang¹ zi².\n\n[^1]:\t「蒹」，荻草；「葭」，蘆草。\n\n[^2]:\t按今讀應爲「cang¹」，但根據韻腳應讀「cng¹」，且「倉」字甲子話亦讀作「cng¹」。\n\n[^3]:\t逆著河流走。\n\n[^4]:\t順著河流走。\n\n[^5]:\t蒼、霜、方、長、央，陽部。\n\n[^6]:\t露水未乾。\n\n[^7]:\t水草交接處，即岸邊。\n\n[^8]:\t水中小沙洲。\n\n[^9]:\t萋、晞、湄、躋、坻，脂部。\n\n[^10]:\t「已」完全。言露水還未完全乾。\n\n[^11]:\t岸邊。\n\n[^12]:\t水路彎曲。\n\n[^13]:\t水中小沙洲。\n\n[^14]:\t采、已、涘、右、沚，之部。","source":"_posts/language/min/sigêng-giamgia.md","raw":"---\ntitle: 詩經·秦風‧蒹葭 (甲子話注音版)\np: language/min/sigêng-giamgia\ntags:\n- 詩經\n- 甲子話\n- 閩南語\n---\n\n![](sigêng-giamgia/202010060948.jpg)\n\n{% aplayer \"蒹葭\" \"Hua\" \"2020/10/06/language/min/sigêng-giamgia/蒹葭.m4a\" \"/music.png\" %}\n\n蒹葭[^1]蒼蒼[^2]，白露爲霜。所謂伊人，在水一方。溯洄[^3]從之，道阻且長。溯游[^4]從之，宛在水中央。[^5]\ngiam¹ gia¹ cng¹ cng¹, bêh⁸ lao³ ui⁵ sng¹. so² ui³ i¹ ring⁵‚ do¹ zui² zêg⁸ hng¹. sog⁴ hoi⁵ ciong⁵ zu¹‚ dao⁶ zo² cian² dng⁵. sog⁴ iu⁵ ciong⁵ zu¹‚ uang² do¹ zui² dang¹ ng¹.\n\n蒹葭萋萋，白露未晞[^6]。所謂伊人，在水之湄[^7]。溯洄從之，道阻且躋。溯游從之，宛在水中坻[^8]。[^9]\ngiam¹ gia¹ ci¹ ci¹‚ bêh⁸ lao³ bhoi⁷ hi¹. so² ui³ i¹ ring⁵‚ do¹ zui² zu¹ mi⁵. sog⁴ hoi⁵ ciong⁵ zu¹‚ dao⁶ zo² cian² zi³. sog⁴ iu⁵ ciong¹ zu¹‚ uang² do¹ zui² dang¹ di².\n\n蒹葭采采，白露未已[^10]。所謂伊人，在水之涘[^11]。溯洄從之，道阻且右[^12]。溯游從之，宛在水中沚[^13]。[^14]_ giam¹ gia¹ cai² cai²‚ bêh⁸ lao³ bhoi⁷ in². so² ui³ i¹ ring⁵‚ do¹ zui² zu¹ su⁶. sog⁴ hoi⁵ ciong⁵ zu¹‚ dao⁶ zo² cian² iu⁶. sog⁴ iu⁵ ciong¹ zu¹‚ uang² do¹ zui² dang¹ zi².\n\n[^1]:\t「蒹」，荻草；「葭」，蘆草。\n\n[^2]:\t按今讀應爲「cang¹」，但根據韻腳應讀「cng¹」，且「倉」字甲子話亦讀作「cng¹」。\n\n[^3]:\t逆著河流走。\n\n[^4]:\t順著河流走。\n\n[^5]:\t蒼、霜、方、長、央，陽部。\n\n[^6]:\t露水未乾。\n\n[^7]:\t水草交接處，即岸邊。\n\n[^8]:\t水中小沙洲。\n\n[^9]:\t萋、晞、湄、躋、坻，脂部。\n\n[^10]:\t「已」完全。言露水還未完全乾。\n\n[^11]:\t岸邊。\n\n[^12]:\t水路彎曲。\n\n[^13]:\t水中小沙洲。\n\n[^14]:\t采、已、涘、右、沚，之部。","slug":"language/min/sigêng-giamgia","published":1,"date":"2020-10-06T01:12:45.597Z","updated":"2020-10-07T00:34:32.609Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cki7m45kb000986w8j8rlhcvj","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css\"><p><img src=\"/2020/10/06/language/min/sigêng-giamgia/202010060948.jpg\" alt></p>\n\n        <div id=\"aplayer-RAPtseDE\" class=\"aplayer aplayer-tag-marker\" style=\"margin-bottom: 20px;\">\n            <pre class=\"aplayer-lrc-content\"></pre>\n        </div>\n        <script>\n          var ap = new APlayer({\n            element: document.getElementById(\"aplayer-RAPtseDE\"),\n            narrow: false,\n            autoplay: false,\n            showlrc: false,\n            music: {\n              title: \"蒹葭\",\n              author: \"Hua\",\n              url: \"2020/10/06/language/min/sigêng-giamgia/蒹葭.m4a\",\n              pic: \"/music.png\",\n              lrc: \"\"\n            }\n          });\n          window.aplayers || (window.aplayers = []);\n          window.aplayers.push(ap);\n        </script>\n\n<p>蒹葭<sup id=\"fnref:1\"><a href=\"#fn:1\" rel=\"footnote\"><span class=\"hint--top hint--error hint--medium hint--rounded hint--bounce\" aria-label=\"    「蒹」，荻草；「葭」，蘆草。\">[1]</span></a></sup>蒼蒼<sup id=\"fnref:2\"><a href=\"#fn:2\" rel=\"footnote\"><span class=\"hint--top hint--error hint--medium hint--rounded hint--bounce\" aria-label=\"    按今讀應爲「cang¹」，但根據韻腳應讀「cng¹」，且「倉」字甲子話亦讀作「cng¹」。\">[2]</span></a></sup>，白露爲霜。所謂伊人，在水一方。溯洄<sup id=\"fnref:3\"><a href=\"#fn:3\" rel=\"footnote\"><span class=\"hint--top hint--error hint--medium hint--rounded hint--bounce\" aria-label=\"    逆著河流走。\">[3]</span></a></sup>從之，道阻且長。溯游<sup id=\"fnref:4\"><a href=\"#fn:4\" rel=\"footnote\"><span class=\"hint--top hint--error hint--medium hint--rounded hint--bounce\" aria-label=\"    順著河流走。\">[4]</span></a></sup>從之，宛在水中央。<sup id=\"fnref:5\"><a href=\"#fn:5\" rel=\"footnote\"><span class=\"hint--top hint--error hint--medium hint--rounded hint--bounce\" aria-label=\"    蒼、霜、方、長、央，陽部。\">[5]</span></a></sup><br>giam¹ gia¹ cng¹ cng¹, bêh⁸ lao³ ui⁵ sng¹. so² ui³ i¹ ring⁵‚ do¹ zui² zêg⁸ hng¹. sog⁴ hoi⁵ ciong⁵ zu¹‚ dao⁶ zo² cian² dng⁵. sog⁴ iu⁵ ciong⁵ zu¹‚ uang² do¹ zui² dang¹ ng¹.</p>\n<p>蒹葭萋萋，白露未晞<sup id=\"fnref:6\"><a href=\"#fn:6\" rel=\"footnote\"><span class=\"hint--top hint--error hint--medium hint--rounded hint--bounce\" aria-label=\"    露水未乾。\">[6]</span></a></sup>。所謂伊人，在水之湄<sup id=\"fnref:7\"><a href=\"#fn:7\" rel=\"footnote\"><span class=\"hint--top hint--error hint--medium hint--rounded hint--bounce\" aria-label=\"    水草交接處，即岸邊。\">[7]</span></a></sup>。溯洄從之，道阻且躋。溯游從之，宛在水中坻<sup id=\"fnref:8\"><a href=\"#fn:8\" rel=\"footnote\"><span class=\"hint--top hint--error hint--medium hint--rounded hint--bounce\" aria-label=\"    水中小沙洲。\">[8]</span></a></sup>。<sup id=\"fnref:9\"><a href=\"#fn:9\" rel=\"footnote\"><span class=\"hint--top hint--error hint--medium hint--rounded hint--bounce\" aria-label=\"    萋、晞、湄、躋、坻，脂部。\">[9]</span></a></sup><br>giam¹ gia¹ ci¹ ci¹‚ bêh⁸ lao³ bhoi⁷ hi¹. so² ui³ i¹ ring⁵‚ do¹ zui² zu¹ mi⁵. sog⁴ hoi⁵ ciong⁵ zu¹‚ dao⁶ zo² cian² zi³. sog⁴ iu⁵ ciong¹ zu¹‚ uang² do¹ zui² dang¹ di².</p>\n<p>蒹葭采采，白露未已<sup id=\"fnref:10\"><a href=\"#fn:10\" rel=\"footnote\"><span class=\"hint--top hint--error hint--medium hint--rounded hint--bounce\" aria-label=\"    「已」完全。言露水還未完全乾。\">[10]</span></a></sup>。所謂伊人，在水之涘<sup id=\"fnref:11\"><a href=\"#fn:11\" rel=\"footnote\"><span class=\"hint--top hint--error hint--medium hint--rounded hint--bounce\" aria-label=\"    岸邊。\">[11]</span></a></sup>。溯洄從之，道阻且右<sup id=\"fnref:12\"><a href=\"#fn:12\" rel=\"footnote\"><span class=\"hint--top hint--error hint--medium hint--rounded hint--bounce\" aria-label=\"    水路彎曲。\">[12]</span></a></sup>。溯游從之，宛在水中沚<sup id=\"fnref:13\"><a href=\"#fn:13\" rel=\"footnote\"><span class=\"hint--top hint--error hint--medium hint--rounded hint--bounce\" aria-label=\"    水中小沙洲。\">[13]</span></a></sup>。<sup id=\"fnref:14\"><a href=\"#fn:14\" rel=\"footnote\"><span class=\"hint--top hint--error hint--medium hint--rounded hint--bounce\" aria-label=\"    采、已、涘、右、沚，之部。\">[14]</span></a></sup>_ giam¹ gia¹ cai² cai²‚ bêh⁸ lao³ bhoi⁷ in². so² ui³ i¹ ring⁵‚ do¹ zui² zu¹ su⁶. sog⁴ hoi⁵ ciong⁵ zu¹‚ dao⁶ zo² cian² iu⁶. sog⁴ iu⁵ ciong¹ zu¹‚ uang² do¹ zui² dang¹ zi².</p>\n<div id=\"footnotes\"><hr><div id=\"footnotelist\"><ol style=\"list-style: none; padding-left: 0; margin-left: 40px\"><li id=\"fn:1\"><span style=\"display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px\">1.</span><span style=\"display: inline-block; vertical-align: top; margin-left: 10px;\">「蒹」，荻草；「葭」，蘆草。<a href=\"#fnref:1\" rev=\"footnote\"> ↩</a></span></li><li id=\"fn:2\"><span style=\"display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px\">2.</span><span style=\"display: inline-block; vertical-align: top; margin-left: 10px;\">按今讀應爲「cang¹」，但根據韻腳應讀「cng¹」，且「倉」字甲子話亦讀作「cng¹」。<a href=\"#fnref:2\" rev=\"footnote\"> ↩</a></span></li><li id=\"fn:3\"><span style=\"display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px\">3.</span><span style=\"display: inline-block; vertical-align: top; margin-left: 10px;\">逆著河流走。<a href=\"#fnref:3\" rev=\"footnote\"> ↩</a></span></li><li id=\"fn:4\"><span style=\"display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px\">4.</span><span style=\"display: inline-block; vertical-align: top; margin-left: 10px;\">順著河流走。<a href=\"#fnref:4\" rev=\"footnote\"> ↩</a></span></li><li id=\"fn:5\"><span style=\"display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px\">5.</span><span style=\"display: inline-block; vertical-align: top; margin-left: 10px;\">蒼、霜、方、長、央，陽部。<a href=\"#fnref:5\" rev=\"footnote\"> ↩</a></span></li><li id=\"fn:6\"><span style=\"display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px\">6.</span><span style=\"display: inline-block; vertical-align: top; margin-left: 10px;\">露水未乾。<a href=\"#fnref:6\" rev=\"footnote\"> ↩</a></span></li><li id=\"fn:7\"><span style=\"display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px\">7.</span><span style=\"display: inline-block; vertical-align: top; margin-left: 10px;\">水草交接處，即岸邊。<a href=\"#fnref:7\" rev=\"footnote\"> ↩</a></span></li><li id=\"fn:8\"><span style=\"display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px\">8.</span><span style=\"display: inline-block; vertical-align: top; margin-left: 10px;\">水中小沙洲。<a href=\"#fnref:8\" rev=\"footnote\"> ↩</a></span></li><li id=\"fn:9\"><span style=\"display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px\">9.</span><span style=\"display: inline-block; vertical-align: top; margin-left: 10px;\">萋、晞、湄、躋、坻，脂部。<a href=\"#fnref:9\" rev=\"footnote\"> ↩</a></span></li><li id=\"fn:10\"><span style=\"display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px\">10.</span><span style=\"display: inline-block; vertical-align: top; margin-left: 10px;\">「已」完全。言露水還未完全乾。<a href=\"#fnref:10\" rev=\"footnote\"> ↩</a></span></li><li id=\"fn:11\"><span style=\"display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px\">11.</span><span style=\"display: inline-block; vertical-align: top; margin-left: 10px;\">岸邊。<a href=\"#fnref:11\" rev=\"footnote\"> ↩</a></span></li><li id=\"fn:12\"><span style=\"display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px\">12.</span><span style=\"display: inline-block; vertical-align: top; margin-left: 10px;\">水路彎曲。<a href=\"#fnref:12\" rev=\"footnote\"> ↩</a></span></li><li id=\"fn:13\"><span style=\"display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px\">13.</span><span style=\"display: inline-block; vertical-align: top; margin-left: 10px;\">水中小沙洲。<a href=\"#fnref:13\" rev=\"footnote\"> ↩</a></span></li><li id=\"fn:14\"><span style=\"display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px\">14.</span><span style=\"display: inline-block; vertical-align: top; margin-left: 10px;\">采、已、涘、右、沚，之部。<a href=\"#fnref:14\" rev=\"footnote\"> ↩</a></span></li></ol></div></div>","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/2020/10/06/language/min/sigêng-giamgia/202010060948.jpg\" alt></p>\n\n        <div id=\"aplayer-RAPtseDE\" class=\"aplayer aplayer-tag-marker\" style=\"margin-bottom: 20px;\">\n            <pre class=\"aplayer-lrc-content\"></pre>\n        </div>\n        <script>\n          var ap = new APlayer({\n            element: document.getElementById(\"aplayer-RAPtseDE\"),\n            narrow: false,\n            autoplay: false,\n            showlrc: false,\n            music: {\n              title: \"蒹葭\",\n              author: \"Hua\",\n              url: \"2020/10/06/language/min/sigêng-giamgia/蒹葭.m4a\",\n              pic: \"/music.png\",\n              lrc: \"\"\n            }\n          });\n          window.aplayers || (window.aplayers = []);\n          window.aplayers.push(ap);\n        </script>\n\n<p>蒹葭<sup id=\"fnref:1\"><a href=\"#fn:1\" rel=\"footnote\"><span class=\"hint--top hint--error hint--medium hint--rounded hint--bounce\" aria-label=\"    「蒹」，荻草；「葭」，蘆草。\">[1]</span></a></sup>蒼蒼<sup id=\"fnref:2\"><a href=\"#fn:2\" rel=\"footnote\"><span class=\"hint--top hint--error hint--medium hint--rounded hint--bounce\" aria-label=\"    按今讀應爲「cang¹」，但根據韻腳應讀「cng¹」，且「倉」字甲子話亦讀作「cng¹」。\">[2]</span></a></sup>，白露爲霜。所謂伊人，在水一方。溯洄<sup id=\"fnref:3\"><a href=\"#fn:3\" rel=\"footnote\"><span class=\"hint--top hint--error hint--medium hint--rounded hint--bounce\" aria-label=\"    逆著河流走。\">[3]</span></a></sup>從之，道阻且長。溯游<sup id=\"fnref:4\"><a href=\"#fn:4\" rel=\"footnote\"><span class=\"hint--top hint--error hint--medium hint--rounded hint--bounce\" aria-label=\"    順著河流走。\">[4]</span></a></sup>從之，宛在水中央。<sup id=\"fnref:5\"><a href=\"#fn:5\" rel=\"footnote\"><span class=\"hint--top hint--error hint--medium hint--rounded hint--bounce\" aria-label=\"    蒼、霜、方、長、央，陽部。\">[5]</span></a></sup><br>giam¹ gia¹ cng¹ cng¹, bêh⁸ lao³ ui⁵ sng¹. so² ui³ i¹ ring⁵‚ do¹ zui² zêg⁸ hng¹. sog⁴ hoi⁵ ciong⁵ zu¹‚ dao⁶ zo² cian² dng⁵. sog⁴ iu⁵ ciong⁵ zu¹‚ uang² do¹ zui² dang¹ ng¹.</p>\n<p>蒹葭萋萋，白露未晞<sup id=\"fnref:6\"><a href=\"#fn:6\" rel=\"footnote\"><span class=\"hint--top hint--error hint--medium hint--rounded hint--bounce\" aria-label=\"    露水未乾。\">[6]</span></a></sup>。所謂伊人，在水之湄<sup id=\"fnref:7\"><a href=\"#fn:7\" rel=\"footnote\"><span class=\"hint--top hint--error hint--medium hint--rounded hint--bounce\" aria-label=\"    水草交接處，即岸邊。\">[7]</span></a></sup>。溯洄從之，道阻且躋。溯游從之，宛在水中坻<sup id=\"fnref:8\"><a href=\"#fn:8\" rel=\"footnote\"><span class=\"hint--top hint--error hint--medium hint--rounded hint--bounce\" aria-label=\"    水中小沙洲。\">[8]</span></a></sup>。<sup id=\"fnref:9\"><a href=\"#fn:9\" rel=\"footnote\"><span class=\"hint--top hint--error hint--medium hint--rounded hint--bounce\" aria-label=\"    萋、晞、湄、躋、坻，脂部。\">[9]</span></a></sup><br>giam¹ gia¹ ci¹ ci¹‚ bêh⁸ lao³ bhoi⁷ hi¹. so² ui³ i¹ ring⁵‚ do¹ zui² zu¹ mi⁵. sog⁴ hoi⁵ ciong⁵ zu¹‚ dao⁶ zo² cian² zi³. sog⁴ iu⁵ ciong¹ zu¹‚ uang² do¹ zui² dang¹ di².</p>\n<p>蒹葭采采，白露未已<sup id=\"fnref:10\"><a href=\"#fn:10\" rel=\"footnote\"><span class=\"hint--top hint--error hint--medium hint--rounded hint--bounce\" aria-label=\"    「已」完全。言露水還未完全乾。\">[10]</span></a></sup>。所謂伊人，在水之涘<sup id=\"fnref:11\"><a href=\"#fn:11\" rel=\"footnote\"><span class=\"hint--top hint--error hint--medium hint--rounded hint--bounce\" aria-label=\"    岸邊。\">[11]</span></a></sup>。溯洄從之，道阻且右<sup id=\"fnref:12\"><a href=\"#fn:12\" rel=\"footnote\"><span class=\"hint--top hint--error hint--medium hint--rounded hint--bounce\" aria-label=\"    水路彎曲。\">[12]</span></a></sup>。溯游從之，宛在水中沚<sup id=\"fnref:13\"><a href=\"#fn:13\" rel=\"footnote\"><span class=\"hint--top hint--error hint--medium hint--rounded hint--bounce\" aria-label=\"    水中小沙洲。\">[13]</span></a></sup>。<sup id=\"fnref:14\"><a href=\"#fn:14\" rel=\"footnote\"><span class=\"hint--top hint--error hint--medium hint--rounded hint--bounce\" aria-label=\"    采、已、涘、右、沚，之部。\">[14]</span></a></sup>_ giam¹ gia¹ cai² cai²‚ bêh⁸ lao³ bhoi⁷ in². so² ui³ i¹ ring⁵‚ do¹ zui² zu¹ su⁶. sog⁴ hoi⁵ ciong⁵ zu¹‚ dao⁶ zo² cian² iu⁶. sog⁴ iu⁵ ciong¹ zu¹‚ uang² do¹ zui² dang¹ zi².</p>\n<div id=\"footnotes\"><hr><div id=\"footnotelist\"><ol style=\"list-style: none; padding-left: 0; margin-left: 40px\"><li id=\"fn:1\"><span style=\"display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px\">1.</span><span style=\"display: inline-block; vertical-align: top; margin-left: 10px;\">「蒹」，荻草；「葭」，蘆草。<a href=\"#fnref:1\" rev=\"footnote\"> ↩</a></span></li><li id=\"fn:2\"><span style=\"display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px\">2.</span><span style=\"display: inline-block; vertical-align: top; margin-left: 10px;\">按今讀應爲「cang¹」，但根據韻腳應讀「cng¹」，且「倉」字甲子話亦讀作「cng¹」。<a href=\"#fnref:2\" rev=\"footnote\"> ↩</a></span></li><li id=\"fn:3\"><span style=\"display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px\">3.</span><span style=\"display: inline-block; vertical-align: top; margin-left: 10px;\">逆著河流走。<a href=\"#fnref:3\" rev=\"footnote\"> ↩</a></span></li><li id=\"fn:4\"><span style=\"display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px\">4.</span><span style=\"display: inline-block; vertical-align: top; margin-left: 10px;\">順著河流走。<a href=\"#fnref:4\" rev=\"footnote\"> ↩</a></span></li><li id=\"fn:5\"><span style=\"display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px\">5.</span><span style=\"display: inline-block; vertical-align: top; margin-left: 10px;\">蒼、霜、方、長、央，陽部。<a href=\"#fnref:5\" rev=\"footnote\"> ↩</a></span></li><li id=\"fn:6\"><span style=\"display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px\">6.</span><span style=\"display: inline-block; vertical-align: top; margin-left: 10px;\">露水未乾。<a href=\"#fnref:6\" rev=\"footnote\"> ↩</a></span></li><li id=\"fn:7\"><span style=\"display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px\">7.</span><span style=\"display: inline-block; vertical-align: top; margin-left: 10px;\">水草交接處，即岸邊。<a href=\"#fnref:7\" rev=\"footnote\"> ↩</a></span></li><li id=\"fn:8\"><span style=\"display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px\">8.</span><span style=\"display: inline-block; vertical-align: top; margin-left: 10px;\">水中小沙洲。<a href=\"#fnref:8\" rev=\"footnote\"> ↩</a></span></li><li id=\"fn:9\"><span style=\"display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px\">9.</span><span style=\"display: inline-block; vertical-align: top; margin-left: 10px;\">萋、晞、湄、躋、坻，脂部。<a href=\"#fnref:9\" rev=\"footnote\"> ↩</a></span></li><li id=\"fn:10\"><span style=\"display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px\">10.</span><span style=\"display: inline-block; vertical-align: top; margin-left: 10px;\">「已」完全。言露水還未完全乾。<a href=\"#fnref:10\" rev=\"footnote\"> ↩</a></span></li><li id=\"fn:11\"><span style=\"display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px\">11.</span><span style=\"display: inline-block; vertical-align: top; margin-left: 10px;\">岸邊。<a href=\"#fnref:11\" rev=\"footnote\"> ↩</a></span></li><li id=\"fn:12\"><span style=\"display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px\">12.</span><span style=\"display: inline-block; vertical-align: top; margin-left: 10px;\">水路彎曲。<a href=\"#fnref:12\" rev=\"footnote\"> ↩</a></span></li><li id=\"fn:13\"><span style=\"display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px\">13.</span><span style=\"display: inline-block; vertical-align: top; margin-left: 10px;\">水中小沙洲。<a href=\"#fnref:13\" rev=\"footnote\"> ↩</a></span></li><li id=\"fn:14\"><span style=\"display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px\">14.</span><span style=\"display: inline-block; vertical-align: top; margin-left: 10px;\">采、已、涘、右、沚，之部。<a href=\"#fnref:14\" rev=\"footnote\"> ↩</a></span></li></ol></div></div>"},{"title":"潮州話與甲子話韻母差異（稿）","p":"language/min/vowel","_content":"\n![](teochew-kahtsi-vowel/202010042112.png)\n\n## 概述\n\n本文所說的潮州話指的是狹義的潮州話，即潮州市內通行的閩南語，甲子話則是指陸豐市甲子鎮內通行的閩南語。\n通過比較，發現甲子話沒有潮州話中的 e、eh、eng、ou、iou、iouh、uê、uêh、uên、uêng、uêg、iê、iêh、iên、iêng、iêg 等韻，而與之相對應的是 u、uh、ng、ao、iao、iaoh、oi、oih、oin、uang、êng、iang、oig、io、ioh、ion、iang、iag 等等韻。\n\n## 潮州 do(to) / 甲子 dê(tê)\n\n例如：\n1. do / dê：短、代、袋\n2. to / tê：退、褪、推、胎、蛻\n\n例外：\n1. do / do：刀、多、朵、躲、倒、戴、逃、桃、在、萄\n2. to / to：討、妥、唾、橢、馱、陀、沱、跎、桃\n\n<!--more-->\n\n## 潮州 e(eh) / 甲子 u(uh)\n\n例如：\n1. e / u：於\n2. ce / cu：蛆、此、鼠、徐\n3. de / du：豬、除、鋤、箸\n4. ge / gu：車、居、舉、齲、據、距\n5. ghe / ghu：馭、御\n6. he / hu：虛、墟、噓、許、滸、魚、漁\n7. ke / ku：去、渠、瞿\n8. le / lu：汝、旅、膂、驢、閭、櫚、呂、侶、鋁、慮、濾\n9. re / ru：爾、而、荋\n10. se / su：師、思、私、斯、廝、撕、嘶、史、事、賜、駟、肆、詞、祠、伺、嗣、辭（又音si）、士、仕、似、姒（又音 sai）、嶼、祀、俟、峙、耜\n11. ze / zu：之、書、芝、孜、姿、咨、資、茲、輜、訾、齜 \n\n例外：\n1. ghe / ngo：語\n2. he / hê：許（～搭）\n3. keh / kig：乞（～丐）\n4. keh / koh：乞（～汝）\n5. re / ri：耳（木～）、洱、餌、貳、膩\n6. se / si：始\n\n☞ 甲子話中「吾」旁的基本都是發 ngo 音，如下：\n1. u / ngo： 吾\n2. nge / ngo： 語\n3. ngo / ngo：悟、晤、梧、寤、遇、愚\n\n## 潮州 eng / 甲子 ing、ng\n\n例如：\n1. eng / ing：恩、摁\n2. geng / ging：巾、斤、近、根、筋、均、鈞、謹、僅、緊、覲\n3. ngeng / nging：銀、垠、齦、鄞、元、圓\n4. heng / hing：很、狠、恨\n5. keng / king：勤、芹、鏗（又音kiang，☞ king kiang 即爲「鏗鏗」）\n6. ceng / cng：倉、瘡、艙、村、床\n7. deng / dng：當、擋、返、轉、頓、長、傳、腸、唐、堂、塘、蕩、斷、段、緞\n8. keng / kng：勸、囥、糠\n9. meng / mng：晚、門、們、捫、問\n10. neng / nng：女、軟、鑽、郎、卵、浪\n11. seng / sng：孫、喪（～事）、酸、霜、耍、蒜、算\n12. teng / tng：湯、捅、燙、褪、糖\n13. zeng / zng：莊、妝、磚、贓、樁、裝、鑽、葬、旋\n\n例外：\n1. seng / siong 桑\n2. keng / kêng：墾、懇\n\n## 潮州 eg / 甲子 ig、iag\n\n例如：\n1. keg / kig ：仡（～佬族）\n2. keg / kiag：橛、镢\n3. ngeg / ngiag：迄、訖、屹\n\n例外：\n1. ngeg / ngib：吃\n\n## 潮州 iê(iêh) / 甲子 io(ioh)\n\n例如：\n1. iê / io：腰、姚、窯、揺\n2. iêh / ioh：約、藥\n3. biê / bio：表\n4. biê & piao / pio & biao：標、飆\n5. bhiê / bhio：描、廟\n6. ciê / cio：笑、唱\n7. ciêh / cioh：尺、席\n8. diê / dio：跳、潮\n9. diêh / dioh： 著\n10. giê / gio：叫、茄、橋\n11. hiêh / hioh：葉、頁\n12. kiêh / kioh：挈/𢭪\n13. liê / lio：撈\n14. niê / nio：兩、娘、量、讓 \n15. piê / pio：票、鰾\n16. riê / rio：尿\n17. riêh / rioh：若\n18. siê / sio：相、燒、小\n19. siêh / sioh：惜、液\n20. tiê / tio：挑、糶\n21. ziê / zio：招、蕉、少、照\n22. ziêh / zioh：質、借、石\n\n## 潮州 iên / 甲子 ion\n\n例如：\n1. iên / ion：鴦、羊、陽、楊、洋、樣\n2. ciên / cion：槍、鯧、搶、牆、象、匠\n3. diên / dion：張、長、帳、脹、賬、場、丈、趙\n4. giên / gion： 姜、強、彊\n5. hiên / hion：香、鄉\n6. kiên / kion：腔\n7. siên / sion：傷、廂、箱、鑲、賞、消、相、像、常、嘗\n8. ziên / zion 漿、章、樟、蔣、掌、醬、上、癢\n\n例外： \n1. diên / dio 釣（☞ 鼻音完全脫落）\n\n## 潮州 iêng(iêg) / iang(iag)\n\n例如：\n1. iêng / iang：鳶、淵、焉、蔫、遠、咽、延、涎、衍、筵、羨、援\n2. biêng / biang：邊、砭、鞭、變、遍、便、辯\n3. ciêng / ciang：阡、遷、芊、纖、淺\n4. ciêg / ciag：切\n5. diêng / diang：鎮（又音ding）、顛（又音ding）、滇、典、展、腆、電、甸、墊、澱、腆、輾、珍\n6. giêng /giang：堅、捐、鵑、見、建、鍵\n7. hiêng /hiang：掀、顯、絢、憲、釁、獻、玄、賢、炫、嫻、癇\n8. kiêng /kiang：虔、愆、騫、犬、乾\n9. liêng / liang：臉、連、憐、蓮、吝、躪、練\n10. miêng /miang：免、勉、娩、憫、敏、緬、腼、綿\n11. ngiêng / ngiang：妍、研、齴\n12. ngiêg / ngiag：嚙（～齒）\n\n## 潮州 ing(ig) / 甲子êng(êg) 、 iang(iag)\n\n例如：\n1. mig / mêg：默、陌\n2. ing / iang：沿、鉛\n3. mig / miag：滅、蔑\n4. zing / ziang：薦\n\n例外：\n1. ing / ing：因、姻、胭、湮、引、癮、印、應、寅、演\n2. ing / hing：暈\n3. bing / bing：乒、賓、彬、斌、稟\n4. big / big：筆、必、畢、蓽、篳、弼\n5. bhig / bhig：蜜\n6. cing / cing：親、臣、秦\n7. cig / cig：七\n8. ding / ding：顛、振、鎮、塵、藤、陣\n9. cing / cim：襯\n10. king / king：輕、氫\n11. ling / ling：鄰、遴、嶙、麟\n12. ming / ming：民、氓、泯、眠、面\n13. mig / mig 密、蜜、冪、覓、謐\n14. ning / ning 恁\n15. ping / ping：牝、貧、蘋、砭、貶、屏、瓶、頻\n16. bing / ping：品\n17. ring / ring：人、仁、認\n18. sing / sing： 申、伸、紳、神、辛、莘、新、薪、身、訊、迅、汛、信、辰、娠、蜃、晨、繩、蠅、盛\n19. ting / ting： 烴、陳、澄\n20. zing / zing：甄、津、真、嗔、臻、拯、振、賑、震、晉、進、盡、燼\n21. zing / ding 珍\n\n## 潮州 iou(iouh) / 甲子 iao(iaoh)\n\n例如：\n1. iou / iao：一、幺、夭、妖、要、枵、邀、窈、搖、耀\n2. biou / biao：表、婊\n3. ciou / ciao：悄、稍、朝、嘲、瞧、晁\n4. diou / diao：刁、叼、凋、雕、吊、弔、兆、條、召、調、掉\n5. giou / giao：嬌、驕、矯、餃、攪（又音 ga/gao）、繳、撬\n6. hiou / hiao：僥、梟、驍、曉\n7. kiou / kiao：磽、蹺、敲（又音ka）、巧（又音ka）、竅、翹、喬、僑\n8. liou / liao：了、潦（又音lo）、遼、療、寥、聊、料、鷺\n9. miou / miao：杳、秒、淼、渺、妙、瞄、描（又音 bhiê）\n10. niou / niao：撓、裊、皺\n11. ngiou / ngiao：貓、堯\n12. piou / piao：飄、漂、嫖、樸\n13. piou / biao：標\n14. riou / riao：爪、擾、嬈、繞、饒\n15. siou / siao：肖、宵、消、捎、梢、霄、搜、宿、瀟、數、小、紹、肇、韶\n16. tiou / tiao：迢、挑、超、窕、柱\n17. ziou / ziao：釗、招（又音ziê）、昭、朝、焦、樵、礁、鳥、皭\n\n## 潮州 iong / 甲子 êng\n\n例如：\n1. iong / êng：永、詠、泳、榮、蠑、塋、熒、縈、螢、嬴\n\n## 潮州 ong / iong\n\n例如：\n1. dong / diong：重、中、忠、仲\n2. rong / riong：戎、絨、茸\n3. zong / ziong：眾\n4. rong / riong：仍、扔\n5. song / siong：松、訟、誦、頌\n\n例外：\n1. cong / cong：從、充、衝\n\n## 潮州 ng / 甲子 ing\n\n例如：\n1. ng / ing：尹、隱\n2. hng / hing：軒、欣、鍁、勳、殷\n\n## 潮州 oin / 甲子 ain\n\n例如：\n1. oin / ain：閒\n2. boin / bain：斑、反、板、爿\n3. coin / cain：千、蠶\n4. doin / dain：殿\n5. goin / gain：間、肩、繭\n6. hoin / hain：蜆、還、莧\n7. koin / kain：蓋\n8. soin / sain：先\n\n例外：\n1. toin / toin：睇\n2. noin / nai：蓮（☞ 鼻音完全脫落）\n\n☞  根據李新魁先生的研究，「與現代潮音比較，最重要的差異是：（1）清代潮音【-n】尾諸韻尚未並入【-ŋ】，（2）現代一些地方唸【oi】、【õ】韻母的字，清代尚唸【ai】、【ãi】。」（見李新魁《二百年前的潮州音》廣東社會科學 1993 年第 2 期）。可見甲子話之保守和存古，仍讀【ain】而非【oin】。\n\n## 潮州 uê(uêh) / 甲子 oi(oih)\n\n例如：\n1. uê / oi：鍋、穢、尉、慰、蔚、話、畫、衛\n2. uêh / oih：划、畫\n3. buê / boi：飛、杯、掊、倍、培、賠 、焙、蓓、悖、貝、狽、背、輩、佩\n4. buê / poi：陪\n5. bhuê / bhoi：尾、枚、莓、梅、酶、霉、煤、媒、未\n6. cuê / coi：吹、炊、髓、覓\n7. duê / doi：綴、兌\n8. guê / goi：瓜、果、餜、粿、裹、過、怪、卦、掛（～紙）、葵（～笠）\n9. guêh / goih：郭、橛\n10. ghuêh / ghoih8：月\n11. huê / hoi：化、華、花、貨、灰、詼、恢、火、伙、夥、歲、誨、悔、晦、回、茴、蛔、匯、會、薈、燴、瓦（～匙）\n12. huêh / hoih：血\n13. kuê / koi：科、蝌、課、稞、瘸\n14. kuêh / koih：缺、闕、闋\n15. muêh / moih：物\n16. muê / moi：每、糜、妹、昧、寐、魅、袂\n17. nuê / noi：餒\n18. puê / poi：皮、被、坯、胚、配、裴\n19. puêh / poih：詖、坺\n20. ruê / roi：枘、蚋、銳、睿\n21. suê / soi：衰、歲、帥（俗音 suai）、戍、說、稅\n22. suêh / soih：說\n23. tuê / toi：頹\n24. zuê / zoi：最、襊、罪、㩼\n\n例外：\n1. bhuêh / ghoih：襪\n2. kuê / kui：盔\n3. suêh / suah：刷、涮\n\n## 潮州 uên / 甲子 oin\n\n例如：\n1. guên / goin：關、果\n2. huên / hoin：橫\n\n## 潮州 uêng(uêg) / 甲子 uang(uag)\n\n例如：\n1. uêng / uang：彎、冤、鴛、淵、宛、苑、怨、完、莞、烷、丸、袁、轅、緣\n2. uêg / uag：曰、斡、鉞、越、粵\n3. buêng / puang：叛\n4. buêg / buag：拔、跋、魃、勃、悖、荸、餑、渤\n5. bhuêng / muan：幔（☞ 後鼻音退成鼻化音）\n6. cuêng / cuang：川、穿、舛、喘、篡、闖、串、全、醛、栓\n7. cuêg / cuag：啜、綴、輟\n8. duêng / duang：端、斷、鍛、段（又音deng）、篆\n9. guêng / guang：關、觀、冠、鰥\n10. guêg / guag：決、訣、抉、玦、聒、譎\n11. guêg / kuag：括\n12. huêng / huang：歡、番、蕃（又音hang）、翻、反、返、販、緩、幻、奐、喚、還、環、煩、寰、繁、宦、豢\n13. huêg / huag：發、髮、乏、穴、伐、罰、閥\n14. kuêng / kuang：寬、圈、髖、權、款、蜷\n15. kuêg / kuag：擴\n16. luêng / luang：暖、戀、巒、孿、鸞、亂\n17. luêg / luag：劣\n18. muêg / muag：末、沫、秣\n19. nguêng / nguang：阮、玩、頑、元、原、源、願\n20. puêng / puang：藩、判、拌（又音puan）、胖、畔、盤（又音buan）、磐、蹣\n21. puêng / puan：般（☞ 後鼻音退成鼻化音）\n22. puêg / puag：潑、銖\n23. ruêng / ruang：亂\n24. ruêg / ruag：悅\n25. suêng / suang：選、算（又音 seng）、旋、漩\n26. tuêng / tuang：湍、團、傳\n27. zuêng / zuang： 專、轉、鐫、顓、撰\n28. zuêg / zuag：拙、茁、咄、絀\n\n例外：\n1. bhuêng/mang：萬、饅、慢、漫\n2. kuêng /  kêng：傾、頃、卿\n3. huêng / hoin：衡\n4. huêg / hoig：或 、惑\n5. uêg / oig：獲 、域、役、鑊\n6. guêng / goin：囧、炯、耿、穎\n7. nguêng / ngiang：顏\n8. nguêng / iang：芫\n\n## 其餘\n1. 宿舍：潮州 suah⁴ sia³  / 甲子 sog⁴ sia³\n2. 唔肯：潮州m⁶ kêng² / 甲子m⁶ kêng² 或 m⁶ kiang²\n3. 言語：潮州 ngang⁵ ghe² / 甲子 ngiang⁵ ngo²\n4. 瓊、煢：潮州kuang⁵ / 甲子kêng⁵\n5. 舀：潮州 io² / 甲子ion² ","source":"_posts/language/min/teochew-kahtsi-vowel.md","raw":"---\ntitle: 潮州話與甲子話韻母差異（稿）\np: language/min/vowel\ntags:\n- 閩南語\n- 潮州話\n- 甲子話\n---\n\n![](teochew-kahtsi-vowel/202010042112.png)\n\n## 概述\n\n本文所說的潮州話指的是狹義的潮州話，即潮州市內通行的閩南語，甲子話則是指陸豐市甲子鎮內通行的閩南語。\n通過比較，發現甲子話沒有潮州話中的 e、eh、eng、ou、iou、iouh、uê、uêh、uên、uêng、uêg、iê、iêh、iên、iêng、iêg 等韻，而與之相對應的是 u、uh、ng、ao、iao、iaoh、oi、oih、oin、uang、êng、iang、oig、io、ioh、ion、iang、iag 等等韻。\n\n## 潮州 do(to) / 甲子 dê(tê)\n\n例如：\n1. do / dê：短、代、袋\n2. to / tê：退、褪、推、胎、蛻\n\n例外：\n1. do / do：刀、多、朵、躲、倒、戴、逃、桃、在、萄\n2. to / to：討、妥、唾、橢、馱、陀、沱、跎、桃\n\n<!--more-->\n\n## 潮州 e(eh) / 甲子 u(uh)\n\n例如：\n1. e / u：於\n2. ce / cu：蛆、此、鼠、徐\n3. de / du：豬、除、鋤、箸\n4. ge / gu：車、居、舉、齲、據、距\n5. ghe / ghu：馭、御\n6. he / hu：虛、墟、噓、許、滸、魚、漁\n7. ke / ku：去、渠、瞿\n8. le / lu：汝、旅、膂、驢、閭、櫚、呂、侶、鋁、慮、濾\n9. re / ru：爾、而、荋\n10. se / su：師、思、私、斯、廝、撕、嘶、史、事、賜、駟、肆、詞、祠、伺、嗣、辭（又音si）、士、仕、似、姒（又音 sai）、嶼、祀、俟、峙、耜\n11. ze / zu：之、書、芝、孜、姿、咨、資、茲、輜、訾、齜 \n\n例外：\n1. ghe / ngo：語\n2. he / hê：許（～搭）\n3. keh / kig：乞（～丐）\n4. keh / koh：乞（～汝）\n5. re / ri：耳（木～）、洱、餌、貳、膩\n6. se / si：始\n\n☞ 甲子話中「吾」旁的基本都是發 ngo 音，如下：\n1. u / ngo： 吾\n2. nge / ngo： 語\n3. ngo / ngo：悟、晤、梧、寤、遇、愚\n\n## 潮州 eng / 甲子 ing、ng\n\n例如：\n1. eng / ing：恩、摁\n2. geng / ging：巾、斤、近、根、筋、均、鈞、謹、僅、緊、覲\n3. ngeng / nging：銀、垠、齦、鄞、元、圓\n4. heng / hing：很、狠、恨\n5. keng / king：勤、芹、鏗（又音kiang，☞ king kiang 即爲「鏗鏗」）\n6. ceng / cng：倉、瘡、艙、村、床\n7. deng / dng：當、擋、返、轉、頓、長、傳、腸、唐、堂、塘、蕩、斷、段、緞\n8. keng / kng：勸、囥、糠\n9. meng / mng：晚、門、們、捫、問\n10. neng / nng：女、軟、鑽、郎、卵、浪\n11. seng / sng：孫、喪（～事）、酸、霜、耍、蒜、算\n12. teng / tng：湯、捅、燙、褪、糖\n13. zeng / zng：莊、妝、磚、贓、樁、裝、鑽、葬、旋\n\n例外：\n1. seng / siong 桑\n2. keng / kêng：墾、懇\n\n## 潮州 eg / 甲子 ig、iag\n\n例如：\n1. keg / kig ：仡（～佬族）\n2. keg / kiag：橛、镢\n3. ngeg / ngiag：迄、訖、屹\n\n例外：\n1. ngeg / ngib：吃\n\n## 潮州 iê(iêh) / 甲子 io(ioh)\n\n例如：\n1. iê / io：腰、姚、窯、揺\n2. iêh / ioh：約、藥\n3. biê / bio：表\n4. biê & piao / pio & biao：標、飆\n5. bhiê / bhio：描、廟\n6. ciê / cio：笑、唱\n7. ciêh / cioh：尺、席\n8. diê / dio：跳、潮\n9. diêh / dioh： 著\n10. giê / gio：叫、茄、橋\n11. hiêh / hioh：葉、頁\n12. kiêh / kioh：挈/𢭪\n13. liê / lio：撈\n14. niê / nio：兩、娘、量、讓 \n15. piê / pio：票、鰾\n16. riê / rio：尿\n17. riêh / rioh：若\n18. siê / sio：相、燒、小\n19. siêh / sioh：惜、液\n20. tiê / tio：挑、糶\n21. ziê / zio：招、蕉、少、照\n22. ziêh / zioh：質、借、石\n\n## 潮州 iên / 甲子 ion\n\n例如：\n1. iên / ion：鴦、羊、陽、楊、洋、樣\n2. ciên / cion：槍、鯧、搶、牆、象、匠\n3. diên / dion：張、長、帳、脹、賬、場、丈、趙\n4. giên / gion： 姜、強、彊\n5. hiên / hion：香、鄉\n6. kiên / kion：腔\n7. siên / sion：傷、廂、箱、鑲、賞、消、相、像、常、嘗\n8. ziên / zion 漿、章、樟、蔣、掌、醬、上、癢\n\n例外： \n1. diên / dio 釣（☞ 鼻音完全脫落）\n\n## 潮州 iêng(iêg) / iang(iag)\n\n例如：\n1. iêng / iang：鳶、淵、焉、蔫、遠、咽、延、涎、衍、筵、羨、援\n2. biêng / biang：邊、砭、鞭、變、遍、便、辯\n3. ciêng / ciang：阡、遷、芊、纖、淺\n4. ciêg / ciag：切\n5. diêng / diang：鎮（又音ding）、顛（又音ding）、滇、典、展、腆、電、甸、墊、澱、腆、輾、珍\n6. giêng /giang：堅、捐、鵑、見、建、鍵\n7. hiêng /hiang：掀、顯、絢、憲、釁、獻、玄、賢、炫、嫻、癇\n8. kiêng /kiang：虔、愆、騫、犬、乾\n9. liêng / liang：臉、連、憐、蓮、吝、躪、練\n10. miêng /miang：免、勉、娩、憫、敏、緬、腼、綿\n11. ngiêng / ngiang：妍、研、齴\n12. ngiêg / ngiag：嚙（～齒）\n\n## 潮州 ing(ig) / 甲子êng(êg) 、 iang(iag)\n\n例如：\n1. mig / mêg：默、陌\n2. ing / iang：沿、鉛\n3. mig / miag：滅、蔑\n4. zing / ziang：薦\n\n例外：\n1. ing / ing：因、姻、胭、湮、引、癮、印、應、寅、演\n2. ing / hing：暈\n3. bing / bing：乒、賓、彬、斌、稟\n4. big / big：筆、必、畢、蓽、篳、弼\n5. bhig / bhig：蜜\n6. cing / cing：親、臣、秦\n7. cig / cig：七\n8. ding / ding：顛、振、鎮、塵、藤、陣\n9. cing / cim：襯\n10. king / king：輕、氫\n11. ling / ling：鄰、遴、嶙、麟\n12. ming / ming：民、氓、泯、眠、面\n13. mig / mig 密、蜜、冪、覓、謐\n14. ning / ning 恁\n15. ping / ping：牝、貧、蘋、砭、貶、屏、瓶、頻\n16. bing / ping：品\n17. ring / ring：人、仁、認\n18. sing / sing： 申、伸、紳、神、辛、莘、新、薪、身、訊、迅、汛、信、辰、娠、蜃、晨、繩、蠅、盛\n19. ting / ting： 烴、陳、澄\n20. zing / zing：甄、津、真、嗔、臻、拯、振、賑、震、晉、進、盡、燼\n21. zing / ding 珍\n\n## 潮州 iou(iouh) / 甲子 iao(iaoh)\n\n例如：\n1. iou / iao：一、幺、夭、妖、要、枵、邀、窈、搖、耀\n2. biou / biao：表、婊\n3. ciou / ciao：悄、稍、朝、嘲、瞧、晁\n4. diou / diao：刁、叼、凋、雕、吊、弔、兆、條、召、調、掉\n5. giou / giao：嬌、驕、矯、餃、攪（又音 ga/gao）、繳、撬\n6. hiou / hiao：僥、梟、驍、曉\n7. kiou / kiao：磽、蹺、敲（又音ka）、巧（又音ka）、竅、翹、喬、僑\n8. liou / liao：了、潦（又音lo）、遼、療、寥、聊、料、鷺\n9. miou / miao：杳、秒、淼、渺、妙、瞄、描（又音 bhiê）\n10. niou / niao：撓、裊、皺\n11. ngiou / ngiao：貓、堯\n12. piou / piao：飄、漂、嫖、樸\n13. piou / biao：標\n14. riou / riao：爪、擾、嬈、繞、饒\n15. siou / siao：肖、宵、消、捎、梢、霄、搜、宿、瀟、數、小、紹、肇、韶\n16. tiou / tiao：迢、挑、超、窕、柱\n17. ziou / ziao：釗、招（又音ziê）、昭、朝、焦、樵、礁、鳥、皭\n\n## 潮州 iong / 甲子 êng\n\n例如：\n1. iong / êng：永、詠、泳、榮、蠑、塋、熒、縈、螢、嬴\n\n## 潮州 ong / iong\n\n例如：\n1. dong / diong：重、中、忠、仲\n2. rong / riong：戎、絨、茸\n3. zong / ziong：眾\n4. rong / riong：仍、扔\n5. song / siong：松、訟、誦、頌\n\n例外：\n1. cong / cong：從、充、衝\n\n## 潮州 ng / 甲子 ing\n\n例如：\n1. ng / ing：尹、隱\n2. hng / hing：軒、欣、鍁、勳、殷\n\n## 潮州 oin / 甲子 ain\n\n例如：\n1. oin / ain：閒\n2. boin / bain：斑、反、板、爿\n3. coin / cain：千、蠶\n4. doin / dain：殿\n5. goin / gain：間、肩、繭\n6. hoin / hain：蜆、還、莧\n7. koin / kain：蓋\n8. soin / sain：先\n\n例外：\n1. toin / toin：睇\n2. noin / nai：蓮（☞ 鼻音完全脫落）\n\n☞  根據李新魁先生的研究，「與現代潮音比較，最重要的差異是：（1）清代潮音【-n】尾諸韻尚未並入【-ŋ】，（2）現代一些地方唸【oi】、【õ】韻母的字，清代尚唸【ai】、【ãi】。」（見李新魁《二百年前的潮州音》廣東社會科學 1993 年第 2 期）。可見甲子話之保守和存古，仍讀【ain】而非【oin】。\n\n## 潮州 uê(uêh) / 甲子 oi(oih)\n\n例如：\n1. uê / oi：鍋、穢、尉、慰、蔚、話、畫、衛\n2. uêh / oih：划、畫\n3. buê / boi：飛、杯、掊、倍、培、賠 、焙、蓓、悖、貝、狽、背、輩、佩\n4. buê / poi：陪\n5. bhuê / bhoi：尾、枚、莓、梅、酶、霉、煤、媒、未\n6. cuê / coi：吹、炊、髓、覓\n7. duê / doi：綴、兌\n8. guê / goi：瓜、果、餜、粿、裹、過、怪、卦、掛（～紙）、葵（～笠）\n9. guêh / goih：郭、橛\n10. ghuêh / ghoih8：月\n11. huê / hoi：化、華、花、貨、灰、詼、恢、火、伙、夥、歲、誨、悔、晦、回、茴、蛔、匯、會、薈、燴、瓦（～匙）\n12. huêh / hoih：血\n13. kuê / koi：科、蝌、課、稞、瘸\n14. kuêh / koih：缺、闕、闋\n15. muêh / moih：物\n16. muê / moi：每、糜、妹、昧、寐、魅、袂\n17. nuê / noi：餒\n18. puê / poi：皮、被、坯、胚、配、裴\n19. puêh / poih：詖、坺\n20. ruê / roi：枘、蚋、銳、睿\n21. suê / soi：衰、歲、帥（俗音 suai）、戍、說、稅\n22. suêh / soih：說\n23. tuê / toi：頹\n24. zuê / zoi：最、襊、罪、㩼\n\n例外：\n1. bhuêh / ghoih：襪\n2. kuê / kui：盔\n3. suêh / suah：刷、涮\n\n## 潮州 uên / 甲子 oin\n\n例如：\n1. guên / goin：關、果\n2. huên / hoin：橫\n\n## 潮州 uêng(uêg) / 甲子 uang(uag)\n\n例如：\n1. uêng / uang：彎、冤、鴛、淵、宛、苑、怨、完、莞、烷、丸、袁、轅、緣\n2. uêg / uag：曰、斡、鉞、越、粵\n3. buêng / puang：叛\n4. buêg / buag：拔、跋、魃、勃、悖、荸、餑、渤\n5. bhuêng / muan：幔（☞ 後鼻音退成鼻化音）\n6. cuêng / cuang：川、穿、舛、喘、篡、闖、串、全、醛、栓\n7. cuêg / cuag：啜、綴、輟\n8. duêng / duang：端、斷、鍛、段（又音deng）、篆\n9. guêng / guang：關、觀、冠、鰥\n10. guêg / guag：決、訣、抉、玦、聒、譎\n11. guêg / kuag：括\n12. huêng / huang：歡、番、蕃（又音hang）、翻、反、返、販、緩、幻、奐、喚、還、環、煩、寰、繁、宦、豢\n13. huêg / huag：發、髮、乏、穴、伐、罰、閥\n14. kuêng / kuang：寬、圈、髖、權、款、蜷\n15. kuêg / kuag：擴\n16. luêng / luang：暖、戀、巒、孿、鸞、亂\n17. luêg / luag：劣\n18. muêg / muag：末、沫、秣\n19. nguêng / nguang：阮、玩、頑、元、原、源、願\n20. puêng / puang：藩、判、拌（又音puan）、胖、畔、盤（又音buan）、磐、蹣\n21. puêng / puan：般（☞ 後鼻音退成鼻化音）\n22. puêg / puag：潑、銖\n23. ruêng / ruang：亂\n24. ruêg / ruag：悅\n25. suêng / suang：選、算（又音 seng）、旋、漩\n26. tuêng / tuang：湍、團、傳\n27. zuêng / zuang： 專、轉、鐫、顓、撰\n28. zuêg / zuag：拙、茁、咄、絀\n\n例外：\n1. bhuêng/mang：萬、饅、慢、漫\n2. kuêng /  kêng：傾、頃、卿\n3. huêng / hoin：衡\n4. huêg / hoig：或 、惑\n5. uêg / oig：獲 、域、役、鑊\n6. guêng / goin：囧、炯、耿、穎\n7. nguêng / ngiang：顏\n8. nguêng / iang：芫\n\n## 其餘\n1. 宿舍：潮州 suah⁴ sia³  / 甲子 sog⁴ sia³\n2. 唔肯：潮州m⁶ kêng² / 甲子m⁶ kêng² 或 m⁶ kiang²\n3. 言語：潮州 ngang⁵ ghe² / 甲子 ngiang⁵ ngo²\n4. 瓊、煢：潮州kuang⁵ / 甲子kêng⁵\n5. 舀：潮州 io² / 甲子ion² ","slug":"language/min/teochew-kahtsi-vowel","published":1,"date":"2020-10-04T09:48:48.801Z","updated":"2020-12-02T03:32:41.725Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cki7m45kc000a86w8gslxrua7","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css\"><p><img src=\"/2020/10/04/language/min/teochew-kahtsi-vowel/202010042112.png\" alt></p>\n<h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>本文所說的潮州話指的是狹義的潮州話，即潮州市內通行的閩南語，甲子話則是指陸豐市甲子鎮內通行的閩南語。<br>通過比較，發現甲子話沒有潮州話中的 e、eh、eng、ou、iou、iouh、uê、uêh、uên、uêng、uêg、iê、iêh、iên、iêng、iêg 等韻，而與之相對應的是 u、uh、ng、ao、iao、iaoh、oi、oih、oin、uang、êng、iang、oig、io、ioh、ion、iang、iag 等等韻。</p>\n<h2 id=\"潮州-do-to-甲子-de-te\"><a href=\"#潮州-do-to-甲子-de-te\" class=\"headerlink\" title=\"潮州 do(to) / 甲子 dê(tê)\"></a>潮州 do(to) / 甲子 dê(tê)</h2><p>例如：</p>\n<ol>\n<li>do / dê：短、代、袋</li>\n<li>to / tê：退、褪、推、胎、蛻</li>\n</ol>\n<p>例外：</p>\n<ol>\n<li>do / do：刀、多、朵、躲、倒、戴、逃、桃、在、萄</li>\n<li>to / to：討、妥、唾、橢、馱、陀、沱、跎、桃</li>\n</ol>\n<a id=\"more\"></a>\n\n<h2 id=\"潮州-e-eh-甲子-u-uh\"><a href=\"#潮州-e-eh-甲子-u-uh\" class=\"headerlink\" title=\"潮州 e(eh) / 甲子 u(uh)\"></a>潮州 e(eh) / 甲子 u(uh)</h2><p>例如：</p>\n<ol>\n<li>e / u：於</li>\n<li>ce / cu：蛆、此、鼠、徐</li>\n<li>de / du：豬、除、鋤、箸</li>\n<li>ge / gu：車、居、舉、齲、據、距</li>\n<li>ghe / ghu：馭、御</li>\n<li>he / hu：虛、墟、噓、許、滸、魚、漁</li>\n<li>ke / ku：去、渠、瞿</li>\n<li>le / lu：汝、旅、膂、驢、閭、櫚、呂、侶、鋁、慮、濾</li>\n<li>re / ru：爾、而、荋</li>\n<li>se / su：師、思、私、斯、廝、撕、嘶、史、事、賜、駟、肆、詞、祠、伺、嗣、辭（又音si）、士、仕、似、姒（又音 sai）、嶼、祀、俟、峙、耜</li>\n<li>ze / zu：之、書、芝、孜、姿、咨、資、茲、輜、訾、齜 </li>\n</ol>\n<p>例外：</p>\n<ol>\n<li>ghe / ngo：語</li>\n<li>he / hê：許（～搭）</li>\n<li>keh / kig：乞（～丐）</li>\n<li>keh / koh：乞（～汝）</li>\n<li>re / ri：耳（木～）、洱、餌、貳、膩</li>\n<li>se / si：始</li>\n</ol>\n<p>☞ 甲子話中「吾」旁的基本都是發 ngo 音，如下：</p>\n<ol>\n<li>u / ngo： 吾</li>\n<li>nge / ngo： 語</li>\n<li>ngo / ngo：悟、晤、梧、寤、遇、愚</li>\n</ol>\n<h2 id=\"潮州-eng-甲子-ing、ng\"><a href=\"#潮州-eng-甲子-ing、ng\" class=\"headerlink\" title=\"潮州 eng / 甲子 ing、ng\"></a>潮州 eng / 甲子 ing、ng</h2><p>例如：</p>\n<ol>\n<li>eng / ing：恩、摁</li>\n<li>geng / ging：巾、斤、近、根、筋、均、鈞、謹、僅、緊、覲</li>\n<li>ngeng / nging：銀、垠、齦、鄞、元、圓</li>\n<li>heng / hing：很、狠、恨</li>\n<li>keng / king：勤、芹、鏗（又音kiang，☞ king kiang 即爲「鏗鏗」）</li>\n<li>ceng / cng：倉、瘡、艙、村、床</li>\n<li>deng / dng：當、擋、返、轉、頓、長、傳、腸、唐、堂、塘、蕩、斷、段、緞</li>\n<li>keng / kng：勸、囥、糠</li>\n<li>meng / mng：晚、門、們、捫、問</li>\n<li>neng / nng：女、軟、鑽、郎、卵、浪</li>\n<li>seng / sng：孫、喪（～事）、酸、霜、耍、蒜、算</li>\n<li>teng / tng：湯、捅、燙、褪、糖</li>\n<li>zeng / zng：莊、妝、磚、贓、樁、裝、鑽、葬、旋</li>\n</ol>\n<p>例外：</p>\n<ol>\n<li>seng / siong 桑</li>\n<li>keng / kêng：墾、懇</li>\n</ol>\n<h2 id=\"潮州-eg-甲子-ig、iag\"><a href=\"#潮州-eg-甲子-ig、iag\" class=\"headerlink\" title=\"潮州 eg / 甲子 ig、iag\"></a>潮州 eg / 甲子 ig、iag</h2><p>例如：</p>\n<ol>\n<li>keg / kig ：仡（～佬族）</li>\n<li>keg / kiag：橛、镢</li>\n<li>ngeg / ngiag：迄、訖、屹</li>\n</ol>\n<p>例外：</p>\n<ol>\n<li>ngeg / ngib：吃</li>\n</ol>\n<h2 id=\"潮州-ie-ieh-甲子-io-ioh\"><a href=\"#潮州-ie-ieh-甲子-io-ioh\" class=\"headerlink\" title=\"潮州 iê(iêh) / 甲子 io(ioh)\"></a>潮州 iê(iêh) / 甲子 io(ioh)</h2><p>例如：</p>\n<ol>\n<li>iê / io：腰、姚、窯、揺</li>\n<li>iêh / ioh：約、藥</li>\n<li>biê / bio：表</li>\n<li>biê &amp; piao / pio &amp; biao：標、飆</li>\n<li>bhiê / bhio：描、廟</li>\n<li>ciê / cio：笑、唱</li>\n<li>ciêh / cioh：尺、席</li>\n<li>diê / dio：跳、潮</li>\n<li>diêh / dioh： 著</li>\n<li>giê / gio：叫、茄、橋</li>\n<li>hiêh / hioh：葉、頁</li>\n<li>kiêh / kioh：挈/𢭪</li>\n<li>liê / lio：撈</li>\n<li>niê / nio：兩、娘、量、讓 </li>\n<li>piê / pio：票、鰾</li>\n<li>riê / rio：尿</li>\n<li>riêh / rioh：若</li>\n<li>siê / sio：相、燒、小</li>\n<li>siêh / sioh：惜、液</li>\n<li>tiê / tio：挑、糶</li>\n<li>ziê / zio：招、蕉、少、照</li>\n<li>ziêh / zioh：質、借、石</li>\n</ol>\n<h2 id=\"潮州-ien-甲子-ion\"><a href=\"#潮州-ien-甲子-ion\" class=\"headerlink\" title=\"潮州 iên / 甲子 ion\"></a>潮州 iên / 甲子 ion</h2><p>例如：</p>\n<ol>\n<li>iên / ion：鴦、羊、陽、楊、洋、樣</li>\n<li>ciên / cion：槍、鯧、搶、牆、象、匠</li>\n<li>diên / dion：張、長、帳、脹、賬、場、丈、趙</li>\n<li>giên / gion： 姜、強、彊</li>\n<li>hiên / hion：香、鄉</li>\n<li>kiên / kion：腔</li>\n<li>siên / sion：傷、廂、箱、鑲、賞、消、相、像、常、嘗</li>\n<li>ziên / zion 漿、章、樟、蔣、掌、醬、上、癢</li>\n</ol>\n<p>例外： </p>\n<ol>\n<li>diên / dio 釣（☞ 鼻音完全脫落）</li>\n</ol>\n<h2 id=\"潮州-ieng-ieg-iang-iag\"><a href=\"#潮州-ieng-ieg-iang-iag\" class=\"headerlink\" title=\"潮州 iêng(iêg) / iang(iag)\"></a>潮州 iêng(iêg) / iang(iag)</h2><p>例如：</p>\n<ol>\n<li>iêng / iang：鳶、淵、焉、蔫、遠、咽、延、涎、衍、筵、羨、援</li>\n<li>biêng / biang：邊、砭、鞭、變、遍、便、辯</li>\n<li>ciêng / ciang：阡、遷、芊、纖、淺</li>\n<li>ciêg / ciag：切</li>\n<li>diêng / diang：鎮（又音ding）、顛（又音ding）、滇、典、展、腆、電、甸、墊、澱、腆、輾、珍</li>\n<li>giêng /giang：堅、捐、鵑、見、建、鍵</li>\n<li>hiêng /hiang：掀、顯、絢、憲、釁、獻、玄、賢、炫、嫻、癇</li>\n<li>kiêng /kiang：虔、愆、騫、犬、乾</li>\n<li>liêng / liang：臉、連、憐、蓮、吝、躪、練</li>\n<li>miêng /miang：免、勉、娩、憫、敏、緬、腼、綿</li>\n<li>ngiêng / ngiang：妍、研、齴</li>\n<li>ngiêg / ngiag：嚙（～齒）</li>\n</ol>\n<h2 id=\"潮州-ing-ig-甲子eng-eg-、-iang-iag\"><a href=\"#潮州-ing-ig-甲子eng-eg-、-iang-iag\" class=\"headerlink\" title=\"潮州 ing(ig) / 甲子êng(êg) 、 iang(iag)\"></a>潮州 ing(ig) / 甲子êng(êg) 、 iang(iag)</h2><p>例如：</p>\n<ol>\n<li>mig / mêg：默、陌</li>\n<li>ing / iang：沿、鉛</li>\n<li>mig / miag：滅、蔑</li>\n<li>zing / ziang：薦</li>\n</ol>\n<p>例外：</p>\n<ol>\n<li>ing / ing：因、姻、胭、湮、引、癮、印、應、寅、演</li>\n<li>ing / hing：暈</li>\n<li>bing / bing：乒、賓、彬、斌、稟</li>\n<li>big / big：筆、必、畢、蓽、篳、弼</li>\n<li>bhig / bhig：蜜</li>\n<li>cing / cing：親、臣、秦</li>\n<li>cig / cig：七</li>\n<li>ding / ding：顛、振、鎮、塵、藤、陣</li>\n<li>cing / cim：襯</li>\n<li>king / king：輕、氫</li>\n<li>ling / ling：鄰、遴、嶙、麟</li>\n<li>ming / ming：民、氓、泯、眠、面</li>\n<li>mig / mig 密、蜜、冪、覓、謐</li>\n<li>ning / ning 恁</li>\n<li>ping / ping：牝、貧、蘋、砭、貶、屏、瓶、頻</li>\n<li>bing / ping：品</li>\n<li>ring / ring：人、仁、認</li>\n<li>sing / sing： 申、伸、紳、神、辛、莘、新、薪、身、訊、迅、汛、信、辰、娠、蜃、晨、繩、蠅、盛</li>\n<li>ting / ting： 烴、陳、澄</li>\n<li>zing / zing：甄、津、真、嗔、臻、拯、振、賑、震、晉、進、盡、燼</li>\n<li>zing / ding 珍</li>\n</ol>\n<h2 id=\"潮州-iou-iouh-甲子-iao-iaoh\"><a href=\"#潮州-iou-iouh-甲子-iao-iaoh\" class=\"headerlink\" title=\"潮州 iou(iouh) / 甲子 iao(iaoh)\"></a>潮州 iou(iouh) / 甲子 iao(iaoh)</h2><p>例如：</p>\n<ol>\n<li>iou / iao：一、幺、夭、妖、要、枵、邀、窈、搖、耀</li>\n<li>biou / biao：表、婊</li>\n<li>ciou / ciao：悄、稍、朝、嘲、瞧、晁</li>\n<li>diou / diao：刁、叼、凋、雕、吊、弔、兆、條、召、調、掉</li>\n<li>giou / giao：嬌、驕、矯、餃、攪（又音 ga/gao）、繳、撬</li>\n<li>hiou / hiao：僥、梟、驍、曉</li>\n<li>kiou / kiao：磽、蹺、敲（又音ka）、巧（又音ka）、竅、翹、喬、僑</li>\n<li>liou / liao：了、潦（又音lo）、遼、療、寥、聊、料、鷺</li>\n<li>miou / miao：杳、秒、淼、渺、妙、瞄、描（又音 bhiê）</li>\n<li>niou / niao：撓、裊、皺</li>\n<li>ngiou / ngiao：貓、堯</li>\n<li>piou / piao：飄、漂、嫖、樸</li>\n<li>piou / biao：標</li>\n<li>riou / riao：爪、擾、嬈、繞、饒</li>\n<li>siou / siao：肖、宵、消、捎、梢、霄、搜、宿、瀟、數、小、紹、肇、韶</li>\n<li>tiou / tiao：迢、挑、超、窕、柱</li>\n<li>ziou / ziao：釗、招（又音ziê）、昭、朝、焦、樵、礁、鳥、皭</li>\n</ol>\n<h2 id=\"潮州-iong-甲子-eng\"><a href=\"#潮州-iong-甲子-eng\" class=\"headerlink\" title=\"潮州 iong / 甲子 êng\"></a>潮州 iong / 甲子 êng</h2><p>例如：</p>\n<ol>\n<li>iong / êng：永、詠、泳、榮、蠑、塋、熒、縈、螢、嬴</li>\n</ol>\n<h2 id=\"潮州-ong-iong\"><a href=\"#潮州-ong-iong\" class=\"headerlink\" title=\"潮州 ong / iong\"></a>潮州 ong / iong</h2><p>例如：</p>\n<ol>\n<li>dong / diong：重、中、忠、仲</li>\n<li>rong / riong：戎、絨、茸</li>\n<li>zong / ziong：眾</li>\n<li>rong / riong：仍、扔</li>\n<li>song / siong：松、訟、誦、頌</li>\n</ol>\n<p>例外：</p>\n<ol>\n<li>cong / cong：從、充、衝</li>\n</ol>\n<h2 id=\"潮州-ng-甲子-ing\"><a href=\"#潮州-ng-甲子-ing\" class=\"headerlink\" title=\"潮州 ng / 甲子 ing\"></a>潮州 ng / 甲子 ing</h2><p>例如：</p>\n<ol>\n<li>ng / ing：尹、隱</li>\n<li>hng / hing：軒、欣、鍁、勳、殷</li>\n</ol>\n<h2 id=\"潮州-oin-甲子-ain\"><a href=\"#潮州-oin-甲子-ain\" class=\"headerlink\" title=\"潮州 oin / 甲子 ain\"></a>潮州 oin / 甲子 ain</h2><p>例如：</p>\n<ol>\n<li>oin / ain：閒</li>\n<li>boin / bain：斑、反、板、爿</li>\n<li>coin / cain：千、蠶</li>\n<li>doin / dain：殿</li>\n<li>goin / gain：間、肩、繭</li>\n<li>hoin / hain：蜆、還、莧</li>\n<li>koin / kain：蓋</li>\n<li>soin / sain：先</li>\n</ol>\n<p>例外：</p>\n<ol>\n<li>toin / toin：睇</li>\n<li>noin / nai：蓮（☞ 鼻音完全脫落）</li>\n</ol>\n<p>☞  根據李新魁先生的研究，「與現代潮音比較，最重要的差異是：（1）清代潮音【-n】尾諸韻尚未並入【-ŋ】，（2）現代一些地方唸【oi】、【õ】韻母的字，清代尚唸【ai】、【ãi】。」（見李新魁《二百年前的潮州音》廣東社會科學 1993 年第 2 期）。可見甲子話之保守和存古，仍讀【ain】而非【oin】。</p>\n<h2 id=\"潮州-ue-ueh-甲子-oi-oih\"><a href=\"#潮州-ue-ueh-甲子-oi-oih\" class=\"headerlink\" title=\"潮州 uê(uêh) / 甲子 oi(oih)\"></a>潮州 uê(uêh) / 甲子 oi(oih)</h2><p>例如：</p>\n<ol>\n<li>uê / oi：鍋、穢、尉、慰、蔚、話、畫、衛</li>\n<li>uêh / oih：划、畫</li>\n<li>buê / boi：飛、杯、掊、倍、培、賠 、焙、蓓、悖、貝、狽、背、輩、佩</li>\n<li>buê / poi：陪</li>\n<li>bhuê / bhoi：尾、枚、莓、梅、酶、霉、煤、媒、未</li>\n<li>cuê / coi：吹、炊、髓、覓</li>\n<li>duê / doi：綴、兌</li>\n<li>guê / goi：瓜、果、餜、粿、裹、過、怪、卦、掛（～紙）、葵（～笠）</li>\n<li>guêh / goih：郭、橛</li>\n<li>ghuêh / ghoih8：月</li>\n<li>huê / hoi：化、華、花、貨、灰、詼、恢、火、伙、夥、歲、誨、悔、晦、回、茴、蛔、匯、會、薈、燴、瓦（～匙）</li>\n<li>huêh / hoih：血</li>\n<li>kuê / koi：科、蝌、課、稞、瘸</li>\n<li>kuêh / koih：缺、闕、闋</li>\n<li>muêh / moih：物</li>\n<li>muê / moi：每、糜、妹、昧、寐、魅、袂</li>\n<li>nuê / noi：餒</li>\n<li>puê / poi：皮、被、坯、胚、配、裴</li>\n<li>puêh / poih：詖、坺</li>\n<li>ruê / roi：枘、蚋、銳、睿</li>\n<li>suê / soi：衰、歲、帥（俗音 suai）、戍、說、稅</li>\n<li>suêh / soih：說</li>\n<li>tuê / toi：頹</li>\n<li>zuê / zoi：最、襊、罪、㩼</li>\n</ol>\n<p>例外：</p>\n<ol>\n<li>bhuêh / ghoih：襪</li>\n<li>kuê / kui：盔</li>\n<li>suêh / suah：刷、涮</li>\n</ol>\n<h2 id=\"潮州-uen-甲子-oin\"><a href=\"#潮州-uen-甲子-oin\" class=\"headerlink\" title=\"潮州 uên / 甲子 oin\"></a>潮州 uên / 甲子 oin</h2><p>例如：</p>\n<ol>\n<li>guên / goin：關、果</li>\n<li>huên / hoin：橫</li>\n</ol>\n<h2 id=\"潮州-ueng-ueg-甲子-uang-uag\"><a href=\"#潮州-ueng-ueg-甲子-uang-uag\" class=\"headerlink\" title=\"潮州 uêng(uêg) / 甲子 uang(uag)\"></a>潮州 uêng(uêg) / 甲子 uang(uag)</h2><p>例如：</p>\n<ol>\n<li>uêng / uang：彎、冤、鴛、淵、宛、苑、怨、完、莞、烷、丸、袁、轅、緣</li>\n<li>uêg / uag：曰、斡、鉞、越、粵</li>\n<li>buêng / puang：叛</li>\n<li>buêg / buag：拔、跋、魃、勃、悖、荸、餑、渤</li>\n<li>bhuêng / muan：幔（☞ 後鼻音退成鼻化音）</li>\n<li>cuêng / cuang：川、穿、舛、喘、篡、闖、串、全、醛、栓</li>\n<li>cuêg / cuag：啜、綴、輟</li>\n<li>duêng / duang：端、斷、鍛、段（又音deng）、篆</li>\n<li>guêng / guang：關、觀、冠、鰥</li>\n<li>guêg / guag：決、訣、抉、玦、聒、譎</li>\n<li>guêg / kuag：括</li>\n<li>huêng / huang：歡、番、蕃（又音hang）、翻、反、返、販、緩、幻、奐、喚、還、環、煩、寰、繁、宦、豢</li>\n<li>huêg / huag：發、髮、乏、穴、伐、罰、閥</li>\n<li>kuêng / kuang：寬、圈、髖、權、款、蜷</li>\n<li>kuêg / kuag：擴</li>\n<li>luêng / luang：暖、戀、巒、孿、鸞、亂</li>\n<li>luêg / luag：劣</li>\n<li>muêg / muag：末、沫、秣</li>\n<li>nguêng / nguang：阮、玩、頑、元、原、源、願</li>\n<li>puêng / puang：藩、判、拌（又音puan）、胖、畔、盤（又音buan）、磐、蹣</li>\n<li>puêng / puan：般（☞ 後鼻音退成鼻化音）</li>\n<li>puêg / puag：潑、銖</li>\n<li>ruêng / ruang：亂</li>\n<li>ruêg / ruag：悅</li>\n<li>suêng / suang：選、算（又音 seng）、旋、漩</li>\n<li>tuêng / tuang：湍、團、傳</li>\n<li>zuêng / zuang： 專、轉、鐫、顓、撰</li>\n<li>zuêg / zuag：拙、茁、咄、絀</li>\n</ol>\n<p>例外：</p>\n<ol>\n<li>bhuêng/mang：萬、饅、慢、漫</li>\n<li>kuêng /  kêng：傾、頃、卿</li>\n<li>huêng / hoin：衡</li>\n<li>huêg / hoig：或 、惑</li>\n<li>uêg / oig：獲 、域、役、鑊</li>\n<li>guêng / goin：囧、炯、耿、穎</li>\n<li>nguêng / ngiang：顏</li>\n<li>nguêng / iang：芫</li>\n</ol>\n<h2 id=\"其餘\"><a href=\"#其餘\" class=\"headerlink\" title=\"其餘\"></a>其餘</h2><ol>\n<li>宿舍：潮州 suah⁴ sia³  / 甲子 sog⁴ sia³</li>\n<li>唔肯：潮州m⁶ kêng² / 甲子m⁶ kêng² 或 m⁶ kiang²</li>\n<li>言語：潮州 ngang⁵ ghe² / 甲子 ngiang⁵ ngo²</li>\n<li>瓊、煢：潮州kuang⁵ / 甲子kêng⁵</li>\n<li>舀：潮州 io² / 甲子ion² </li>\n</ol>\n","site":{"data":{}},"excerpt":"<p><img src=\"/2020/10/04/language/min/teochew-kahtsi-vowel/202010042112.png\" alt></p>\n<h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>本文所說的潮州話指的是狹義的潮州話，即潮州市內通行的閩南語，甲子話則是指陸豐市甲子鎮內通行的閩南語。<br>通過比較，發現甲子話沒有潮州話中的 e、eh、eng、ou、iou、iouh、uê、uêh、uên、uêng、uêg、iê、iêh、iên、iêng、iêg 等韻，而與之相對應的是 u、uh、ng、ao、iao、iaoh、oi、oih、oin、uang、êng、iang、oig、io、ioh、ion、iang、iag 等等韻。</p>\n<h2 id=\"潮州-do-to-甲子-de-te\"><a href=\"#潮州-do-to-甲子-de-te\" class=\"headerlink\" title=\"潮州 do(to) / 甲子 dê(tê)\"></a>潮州 do(to) / 甲子 dê(tê)</h2><p>例如：</p>\n<ol>\n<li>do / dê：短、代、袋</li>\n<li>to / tê：退、褪、推、胎、蛻</li>\n</ol>\n<p>例外：</p>\n<ol>\n<li>do / do：刀、多、朵、躲、倒、戴、逃、桃、在、萄</li>\n<li>to / to：討、妥、唾、橢、馱、陀、沱、跎、桃</li>\n</ol>","more":"<h2 id=\"潮州-e-eh-甲子-u-uh\"><a href=\"#潮州-e-eh-甲子-u-uh\" class=\"headerlink\" title=\"潮州 e(eh) / 甲子 u(uh)\"></a>潮州 e(eh) / 甲子 u(uh)</h2><p>例如：</p>\n<ol>\n<li>e / u：於</li>\n<li>ce / cu：蛆、此、鼠、徐</li>\n<li>de / du：豬、除、鋤、箸</li>\n<li>ge / gu：車、居、舉、齲、據、距</li>\n<li>ghe / ghu：馭、御</li>\n<li>he / hu：虛、墟、噓、許、滸、魚、漁</li>\n<li>ke / ku：去、渠、瞿</li>\n<li>le / lu：汝、旅、膂、驢、閭、櫚、呂、侶、鋁、慮、濾</li>\n<li>re / ru：爾、而、荋</li>\n<li>se / su：師、思、私、斯、廝、撕、嘶、史、事、賜、駟、肆、詞、祠、伺、嗣、辭（又音si）、士、仕、似、姒（又音 sai）、嶼、祀、俟、峙、耜</li>\n<li>ze / zu：之、書、芝、孜、姿、咨、資、茲、輜、訾、齜 </li>\n</ol>\n<p>例外：</p>\n<ol>\n<li>ghe / ngo：語</li>\n<li>he / hê：許（～搭）</li>\n<li>keh / kig：乞（～丐）</li>\n<li>keh / koh：乞（～汝）</li>\n<li>re / ri：耳（木～）、洱、餌、貳、膩</li>\n<li>se / si：始</li>\n</ol>\n<p>☞ 甲子話中「吾」旁的基本都是發 ngo 音，如下：</p>\n<ol>\n<li>u / ngo： 吾</li>\n<li>nge / ngo： 語</li>\n<li>ngo / ngo：悟、晤、梧、寤、遇、愚</li>\n</ol>\n<h2 id=\"潮州-eng-甲子-ing、ng\"><a href=\"#潮州-eng-甲子-ing、ng\" class=\"headerlink\" title=\"潮州 eng / 甲子 ing、ng\"></a>潮州 eng / 甲子 ing、ng</h2><p>例如：</p>\n<ol>\n<li>eng / ing：恩、摁</li>\n<li>geng / ging：巾、斤、近、根、筋、均、鈞、謹、僅、緊、覲</li>\n<li>ngeng / nging：銀、垠、齦、鄞、元、圓</li>\n<li>heng / hing：很、狠、恨</li>\n<li>keng / king：勤、芹、鏗（又音kiang，☞ king kiang 即爲「鏗鏗」）</li>\n<li>ceng / cng：倉、瘡、艙、村、床</li>\n<li>deng / dng：當、擋、返、轉、頓、長、傳、腸、唐、堂、塘、蕩、斷、段、緞</li>\n<li>keng / kng：勸、囥、糠</li>\n<li>meng / mng：晚、門、們、捫、問</li>\n<li>neng / nng：女、軟、鑽、郎、卵、浪</li>\n<li>seng / sng：孫、喪（～事）、酸、霜、耍、蒜、算</li>\n<li>teng / tng：湯、捅、燙、褪、糖</li>\n<li>zeng / zng：莊、妝、磚、贓、樁、裝、鑽、葬、旋</li>\n</ol>\n<p>例外：</p>\n<ol>\n<li>seng / siong 桑</li>\n<li>keng / kêng：墾、懇</li>\n</ol>\n<h2 id=\"潮州-eg-甲子-ig、iag\"><a href=\"#潮州-eg-甲子-ig、iag\" class=\"headerlink\" title=\"潮州 eg / 甲子 ig、iag\"></a>潮州 eg / 甲子 ig、iag</h2><p>例如：</p>\n<ol>\n<li>keg / kig ：仡（～佬族）</li>\n<li>keg / kiag：橛、镢</li>\n<li>ngeg / ngiag：迄、訖、屹</li>\n</ol>\n<p>例外：</p>\n<ol>\n<li>ngeg / ngib：吃</li>\n</ol>\n<h2 id=\"潮州-ie-ieh-甲子-io-ioh\"><a href=\"#潮州-ie-ieh-甲子-io-ioh\" class=\"headerlink\" title=\"潮州 iê(iêh) / 甲子 io(ioh)\"></a>潮州 iê(iêh) / 甲子 io(ioh)</h2><p>例如：</p>\n<ol>\n<li>iê / io：腰、姚、窯、揺</li>\n<li>iêh / ioh：約、藥</li>\n<li>biê / bio：表</li>\n<li>biê &amp; piao / pio &amp; biao：標、飆</li>\n<li>bhiê / bhio：描、廟</li>\n<li>ciê / cio：笑、唱</li>\n<li>ciêh / cioh：尺、席</li>\n<li>diê / dio：跳、潮</li>\n<li>diêh / dioh： 著</li>\n<li>giê / gio：叫、茄、橋</li>\n<li>hiêh / hioh：葉、頁</li>\n<li>kiêh / kioh：挈/𢭪</li>\n<li>liê / lio：撈</li>\n<li>niê / nio：兩、娘、量、讓 </li>\n<li>piê / pio：票、鰾</li>\n<li>riê / rio：尿</li>\n<li>riêh / rioh：若</li>\n<li>siê / sio：相、燒、小</li>\n<li>siêh / sioh：惜、液</li>\n<li>tiê / tio：挑、糶</li>\n<li>ziê / zio：招、蕉、少、照</li>\n<li>ziêh / zioh：質、借、石</li>\n</ol>\n<h2 id=\"潮州-ien-甲子-ion\"><a href=\"#潮州-ien-甲子-ion\" class=\"headerlink\" title=\"潮州 iên / 甲子 ion\"></a>潮州 iên / 甲子 ion</h2><p>例如：</p>\n<ol>\n<li>iên / ion：鴦、羊、陽、楊、洋、樣</li>\n<li>ciên / cion：槍、鯧、搶、牆、象、匠</li>\n<li>diên / dion：張、長、帳、脹、賬、場、丈、趙</li>\n<li>giên / gion： 姜、強、彊</li>\n<li>hiên / hion：香、鄉</li>\n<li>kiên / kion：腔</li>\n<li>siên / sion：傷、廂、箱、鑲、賞、消、相、像、常、嘗</li>\n<li>ziên / zion 漿、章、樟、蔣、掌、醬、上、癢</li>\n</ol>\n<p>例外： </p>\n<ol>\n<li>diên / dio 釣（☞ 鼻音完全脫落）</li>\n</ol>\n<h2 id=\"潮州-ieng-ieg-iang-iag\"><a href=\"#潮州-ieng-ieg-iang-iag\" class=\"headerlink\" title=\"潮州 iêng(iêg) / iang(iag)\"></a>潮州 iêng(iêg) / iang(iag)</h2><p>例如：</p>\n<ol>\n<li>iêng / iang：鳶、淵、焉、蔫、遠、咽、延、涎、衍、筵、羨、援</li>\n<li>biêng / biang：邊、砭、鞭、變、遍、便、辯</li>\n<li>ciêng / ciang：阡、遷、芊、纖、淺</li>\n<li>ciêg / ciag：切</li>\n<li>diêng / diang：鎮（又音ding）、顛（又音ding）、滇、典、展、腆、電、甸、墊、澱、腆、輾、珍</li>\n<li>giêng /giang：堅、捐、鵑、見、建、鍵</li>\n<li>hiêng /hiang：掀、顯、絢、憲、釁、獻、玄、賢、炫、嫻、癇</li>\n<li>kiêng /kiang：虔、愆、騫、犬、乾</li>\n<li>liêng / liang：臉、連、憐、蓮、吝、躪、練</li>\n<li>miêng /miang：免、勉、娩、憫、敏、緬、腼、綿</li>\n<li>ngiêng / ngiang：妍、研、齴</li>\n<li>ngiêg / ngiag：嚙（～齒）</li>\n</ol>\n<h2 id=\"潮州-ing-ig-甲子eng-eg-、-iang-iag\"><a href=\"#潮州-ing-ig-甲子eng-eg-、-iang-iag\" class=\"headerlink\" title=\"潮州 ing(ig) / 甲子êng(êg) 、 iang(iag)\"></a>潮州 ing(ig) / 甲子êng(êg) 、 iang(iag)</h2><p>例如：</p>\n<ol>\n<li>mig / mêg：默、陌</li>\n<li>ing / iang：沿、鉛</li>\n<li>mig / miag：滅、蔑</li>\n<li>zing / ziang：薦</li>\n</ol>\n<p>例外：</p>\n<ol>\n<li>ing / ing：因、姻、胭、湮、引、癮、印、應、寅、演</li>\n<li>ing / hing：暈</li>\n<li>bing / bing：乒、賓、彬、斌、稟</li>\n<li>big / big：筆、必、畢、蓽、篳、弼</li>\n<li>bhig / bhig：蜜</li>\n<li>cing / cing：親、臣、秦</li>\n<li>cig / cig：七</li>\n<li>ding / ding：顛、振、鎮、塵、藤、陣</li>\n<li>cing / cim：襯</li>\n<li>king / king：輕、氫</li>\n<li>ling / ling：鄰、遴、嶙、麟</li>\n<li>ming / ming：民、氓、泯、眠、面</li>\n<li>mig / mig 密、蜜、冪、覓、謐</li>\n<li>ning / ning 恁</li>\n<li>ping / ping：牝、貧、蘋、砭、貶、屏、瓶、頻</li>\n<li>bing / ping：品</li>\n<li>ring / ring：人、仁、認</li>\n<li>sing / sing： 申、伸、紳、神、辛、莘、新、薪、身、訊、迅、汛、信、辰、娠、蜃、晨、繩、蠅、盛</li>\n<li>ting / ting： 烴、陳、澄</li>\n<li>zing / zing：甄、津、真、嗔、臻、拯、振、賑、震、晉、進、盡、燼</li>\n<li>zing / ding 珍</li>\n</ol>\n<h2 id=\"潮州-iou-iouh-甲子-iao-iaoh\"><a href=\"#潮州-iou-iouh-甲子-iao-iaoh\" class=\"headerlink\" title=\"潮州 iou(iouh) / 甲子 iao(iaoh)\"></a>潮州 iou(iouh) / 甲子 iao(iaoh)</h2><p>例如：</p>\n<ol>\n<li>iou / iao：一、幺、夭、妖、要、枵、邀、窈、搖、耀</li>\n<li>biou / biao：表、婊</li>\n<li>ciou / ciao：悄、稍、朝、嘲、瞧、晁</li>\n<li>diou / diao：刁、叼、凋、雕、吊、弔、兆、條、召、調、掉</li>\n<li>giou / giao：嬌、驕、矯、餃、攪（又音 ga/gao）、繳、撬</li>\n<li>hiou / hiao：僥、梟、驍、曉</li>\n<li>kiou / kiao：磽、蹺、敲（又音ka）、巧（又音ka）、竅、翹、喬、僑</li>\n<li>liou / liao：了、潦（又音lo）、遼、療、寥、聊、料、鷺</li>\n<li>miou / miao：杳、秒、淼、渺、妙、瞄、描（又音 bhiê）</li>\n<li>niou / niao：撓、裊、皺</li>\n<li>ngiou / ngiao：貓、堯</li>\n<li>piou / piao：飄、漂、嫖、樸</li>\n<li>piou / biao：標</li>\n<li>riou / riao：爪、擾、嬈、繞、饒</li>\n<li>siou / siao：肖、宵、消、捎、梢、霄、搜、宿、瀟、數、小、紹、肇、韶</li>\n<li>tiou / tiao：迢、挑、超、窕、柱</li>\n<li>ziou / ziao：釗、招（又音ziê）、昭、朝、焦、樵、礁、鳥、皭</li>\n</ol>\n<h2 id=\"潮州-iong-甲子-eng\"><a href=\"#潮州-iong-甲子-eng\" class=\"headerlink\" title=\"潮州 iong / 甲子 êng\"></a>潮州 iong / 甲子 êng</h2><p>例如：</p>\n<ol>\n<li>iong / êng：永、詠、泳、榮、蠑、塋、熒、縈、螢、嬴</li>\n</ol>\n<h2 id=\"潮州-ong-iong\"><a href=\"#潮州-ong-iong\" class=\"headerlink\" title=\"潮州 ong / iong\"></a>潮州 ong / iong</h2><p>例如：</p>\n<ol>\n<li>dong / diong：重、中、忠、仲</li>\n<li>rong / riong：戎、絨、茸</li>\n<li>zong / ziong：眾</li>\n<li>rong / riong：仍、扔</li>\n<li>song / siong：松、訟、誦、頌</li>\n</ol>\n<p>例外：</p>\n<ol>\n<li>cong / cong：從、充、衝</li>\n</ol>\n<h2 id=\"潮州-ng-甲子-ing\"><a href=\"#潮州-ng-甲子-ing\" class=\"headerlink\" title=\"潮州 ng / 甲子 ing\"></a>潮州 ng / 甲子 ing</h2><p>例如：</p>\n<ol>\n<li>ng / ing：尹、隱</li>\n<li>hng / hing：軒、欣、鍁、勳、殷</li>\n</ol>\n<h2 id=\"潮州-oin-甲子-ain\"><a href=\"#潮州-oin-甲子-ain\" class=\"headerlink\" title=\"潮州 oin / 甲子 ain\"></a>潮州 oin / 甲子 ain</h2><p>例如：</p>\n<ol>\n<li>oin / ain：閒</li>\n<li>boin / bain：斑、反、板、爿</li>\n<li>coin / cain：千、蠶</li>\n<li>doin / dain：殿</li>\n<li>goin / gain：間、肩、繭</li>\n<li>hoin / hain：蜆、還、莧</li>\n<li>koin / kain：蓋</li>\n<li>soin / sain：先</li>\n</ol>\n<p>例外：</p>\n<ol>\n<li>toin / toin：睇</li>\n<li>noin / nai：蓮（☞ 鼻音完全脫落）</li>\n</ol>\n<p>☞  根據李新魁先生的研究，「與現代潮音比較，最重要的差異是：（1）清代潮音【-n】尾諸韻尚未並入【-ŋ】，（2）現代一些地方唸【oi】、【õ】韻母的字，清代尚唸【ai】、【ãi】。」（見李新魁《二百年前的潮州音》廣東社會科學 1993 年第 2 期）。可見甲子話之保守和存古，仍讀【ain】而非【oin】。</p>\n<h2 id=\"潮州-ue-ueh-甲子-oi-oih\"><a href=\"#潮州-ue-ueh-甲子-oi-oih\" class=\"headerlink\" title=\"潮州 uê(uêh) / 甲子 oi(oih)\"></a>潮州 uê(uêh) / 甲子 oi(oih)</h2><p>例如：</p>\n<ol>\n<li>uê / oi：鍋、穢、尉、慰、蔚、話、畫、衛</li>\n<li>uêh / oih：划、畫</li>\n<li>buê / boi：飛、杯、掊、倍、培、賠 、焙、蓓、悖、貝、狽、背、輩、佩</li>\n<li>buê / poi：陪</li>\n<li>bhuê / bhoi：尾、枚、莓、梅、酶、霉、煤、媒、未</li>\n<li>cuê / coi：吹、炊、髓、覓</li>\n<li>duê / doi：綴、兌</li>\n<li>guê / goi：瓜、果、餜、粿、裹、過、怪、卦、掛（～紙）、葵（～笠）</li>\n<li>guêh / goih：郭、橛</li>\n<li>ghuêh / ghoih8：月</li>\n<li>huê / hoi：化、華、花、貨、灰、詼、恢、火、伙、夥、歲、誨、悔、晦、回、茴、蛔、匯、會、薈、燴、瓦（～匙）</li>\n<li>huêh / hoih：血</li>\n<li>kuê / koi：科、蝌、課、稞、瘸</li>\n<li>kuêh / koih：缺、闕、闋</li>\n<li>muêh / moih：物</li>\n<li>muê / moi：每、糜、妹、昧、寐、魅、袂</li>\n<li>nuê / noi：餒</li>\n<li>puê / poi：皮、被、坯、胚、配、裴</li>\n<li>puêh / poih：詖、坺</li>\n<li>ruê / roi：枘、蚋、銳、睿</li>\n<li>suê / soi：衰、歲、帥（俗音 suai）、戍、說、稅</li>\n<li>suêh / soih：說</li>\n<li>tuê / toi：頹</li>\n<li>zuê / zoi：最、襊、罪、㩼</li>\n</ol>\n<p>例外：</p>\n<ol>\n<li>bhuêh / ghoih：襪</li>\n<li>kuê / kui：盔</li>\n<li>suêh / suah：刷、涮</li>\n</ol>\n<h2 id=\"潮州-uen-甲子-oin\"><a href=\"#潮州-uen-甲子-oin\" class=\"headerlink\" title=\"潮州 uên / 甲子 oin\"></a>潮州 uên / 甲子 oin</h2><p>例如：</p>\n<ol>\n<li>guên / goin：關、果</li>\n<li>huên / hoin：橫</li>\n</ol>\n<h2 id=\"潮州-ueng-ueg-甲子-uang-uag\"><a href=\"#潮州-ueng-ueg-甲子-uang-uag\" class=\"headerlink\" title=\"潮州 uêng(uêg) / 甲子 uang(uag)\"></a>潮州 uêng(uêg) / 甲子 uang(uag)</h2><p>例如：</p>\n<ol>\n<li>uêng / uang：彎、冤、鴛、淵、宛、苑、怨、完、莞、烷、丸、袁、轅、緣</li>\n<li>uêg / uag：曰、斡、鉞、越、粵</li>\n<li>buêng / puang：叛</li>\n<li>buêg / buag：拔、跋、魃、勃、悖、荸、餑、渤</li>\n<li>bhuêng / muan：幔（☞ 後鼻音退成鼻化音）</li>\n<li>cuêng / cuang：川、穿、舛、喘、篡、闖、串、全、醛、栓</li>\n<li>cuêg / cuag：啜、綴、輟</li>\n<li>duêng / duang：端、斷、鍛、段（又音deng）、篆</li>\n<li>guêng / guang：關、觀、冠、鰥</li>\n<li>guêg / guag：決、訣、抉、玦、聒、譎</li>\n<li>guêg / kuag：括</li>\n<li>huêng / huang：歡、番、蕃（又音hang）、翻、反、返、販、緩、幻、奐、喚、還、環、煩、寰、繁、宦、豢</li>\n<li>huêg / huag：發、髮、乏、穴、伐、罰、閥</li>\n<li>kuêng / kuang：寬、圈、髖、權、款、蜷</li>\n<li>kuêg / kuag：擴</li>\n<li>luêng / luang：暖、戀、巒、孿、鸞、亂</li>\n<li>luêg / luag：劣</li>\n<li>muêg / muag：末、沫、秣</li>\n<li>nguêng / nguang：阮、玩、頑、元、原、源、願</li>\n<li>puêng / puang：藩、判、拌（又音puan）、胖、畔、盤（又音buan）、磐、蹣</li>\n<li>puêng / puan：般（☞ 後鼻音退成鼻化音）</li>\n<li>puêg / puag：潑、銖</li>\n<li>ruêng / ruang：亂</li>\n<li>ruêg / ruag：悅</li>\n<li>suêng / suang：選、算（又音 seng）、旋、漩</li>\n<li>tuêng / tuang：湍、團、傳</li>\n<li>zuêng / zuang： 專、轉、鐫、顓、撰</li>\n<li>zuêg / zuag：拙、茁、咄、絀</li>\n</ol>\n<p>例外：</p>\n<ol>\n<li>bhuêng/mang：萬、饅、慢、漫</li>\n<li>kuêng /  kêng：傾、頃、卿</li>\n<li>huêng / hoin：衡</li>\n<li>huêg / hoig：或 、惑</li>\n<li>uêg / oig：獲 、域、役、鑊</li>\n<li>guêng / goin：囧、炯、耿、穎</li>\n<li>nguêng / ngiang：顏</li>\n<li>nguêng / iang：芫</li>\n</ol>\n<h2 id=\"其餘\"><a href=\"#其餘\" class=\"headerlink\" title=\"其餘\"></a>其餘</h2><ol>\n<li>宿舍：潮州 suah⁴ sia³  / 甲子 sog⁴ sia³</li>\n<li>唔肯：潮州m⁶ kêng² / 甲子m⁶ kêng² 或 m⁶ kiang²</li>\n<li>言語：潮州 ngang⁵ ghe² / 甲子 ngiang⁵ ngo²</li>\n<li>瓊、煢：潮州kuang⁵ / 甲子kêng⁵</li>\n<li>舀：潮州 io² / 甲子ion² </li>\n</ol>"},{"title":"Java 基礎","p":"it/java/java-basic.md","_content":"\nJava 自 95 年誕生至今，已有 25 年的歷史。它是一種半編譯的語言，先將代碼編譯成字節碼，然後在 JVM 中解釋執行。\n\n- 它是一種面向對象的語言，封裝、繼承和多態它都有，類可以多實現但不支持多繼承，而接口可以多繼承。\n- 它支持 8 種基本數據類型，同時還提供了其包裝類型，另外還提供了 BigDecimal 精確處理浮點數、提供了 BigInteger 處理大整數。\n- 它的方法只有值傳遞，傳遞對象時它是淺拷貝而非深拷貝。類的方法可以被子類重寫，同個類可以有多個同名的重載方法。\n- 它支持泛型，一種將類型參數化的技術。不過，也有人稱之爲「僞泛型」，因爲類型會在編譯時被擦除。\n- 它支持反射，一種在運行時操作任意對象的方法和屬性的技術，這在框架應用中很常見。\n- 它提供了豐富的集合類、迭代器及工具類。\n- 它支持多線程，一種在程序進程中同時執行多個任務的技術，同時還有豐富的鎖類型，所有對象的頭信息裏都有一個鎖標識。\n- 它支持異常處理，Exception 分編譯時異常和運行時異常，編譯時異常可以被編譯器檢查到，而運行時異常只能在程序運行時發生。\n- 它有豐富的 I/O API，派生自 4 個抽象類，InputStream、OutputStream、Reader、Writer，字符流的出現是爲了減少 JVM 進行字符編碼解碼的資源損耗和編解碼錯誤。\n- 另外，目前有兩大項目管理工具，Maven 和 Gradle。\n\n<!-- more -->\n\n## Java 入門（基礎概念與常識）\n\n### 歷史\n\nJava 編程語言本名爲 oak（橡樹），因爲商標被註冊了，所以更名爲 Java，而 Java 是印尼的一座島嶼，盛產咖啡豆，有一種咖啡就是以該島命名，Java 編程語言之名因之。使用十六進制編輯器打開 class 文件時會發現前 32 位顯示爲 `CA FE BA BE` ，即 cafe babe （咖啡寶貝）。\n\n```java\n$ hexdump Test.class\n0000000 ca fe ba be 00 00 00 3b 00 51 0a 00 02 00 03 07\n```\n\n- 1994 年完成 1.0 版本。\n- 1995 年首次對外發佈，Java 語言誕生。\n- 1996 年JDK 1.0 誕生。\n- 2004 年 SUN 公司發佈 Java SE 5。\n- 2005 年 SUN 公司發佈 Java SE 6。\n- 2006 年 SUN 公司推出 OpenJDK 計劃。\n- 2014年 Oracle 公司發佈 Java SE 8。\n- 2017年 Oracle公司發佈 Java SE 9。\n- 2020 年 Oracle 公司發佈 Java SE 15。\n\n### 安裝與卸載JDK\n\n在 Mac 環境下，從 [Oracle JavaSE 下載地址](https://www.oracle.com/tw/java/technologies/javase-downloads.html) 下載並安裝。安裝完成後執行 `java -version`  可查看安裝的版本，以確認安裝成功。安裝後的Java Home 位置爲 `/Library/Java/JavaVirtualMachines/jdk-9.0.1.jdk/Contents/Home` 。如需卸載該 jdk，可安裝以下 shell 命令，先移除插件後根據查詢到的 jdk 版本移除整個 jdk 文件夾即可。\n\n```bash\nsudo rm -fr /Library/Internet\\ Plug-Ins/JavaAppletPlugin.plugin\nsudo rm -fr /Library/PreferencesPanes/JavaControlPanel.prefpane\n\nls /Library/Java/JavaVirtualMachines/\n输出：jdk-9.0.1.jdk\n\nsudo rm -rf /Library/Java/JavaVirtualMachines/jdk-9.0.1.jdk\n```\n\n### Hello World\n\n運行以下代碼，將輸出 `Hello World`。\n\n```java\npackage hello;\n\npublic class Hello {\n    public static void main(String[] args) {\n        System.out.println(\"Hello World\");\n    }\n}\n```\n\n### Java 語言的特點\n\n1. 面向對象（封裝，繼承，多態）\n2. 平台無關性（ Java 虛擬機實現平台無關性）\n3. 支持多線程\n4. 編譯與解釋並存\n\n編譯：生成字節碼(.class文件)，javac 指令。\n解釋：解釋字節碼成機器碼，java 指令。\n\n### JVM、JDK 和  JRE\n\n1. JVM，Java Virtual Machine 的縮寫，即 Java 虛擬機，是運行 Java 字節碼的虛擬機（包含解釋器 java），它包含在 JRE 中。不同的操作系統有特定的 JVM 實現，以便 Java 字節碼可以跨平台。\n2. JDK，Java Development Kit 的縮寫，即 Java 開發工具集，包含了 JRE 、編譯器（javac）和其他工具（javadoc 和 jdb 等）。\n3. JRE，Java Runtime 的縮寫，即 Java 運行時，包含了 JVM、必要的類庫、java 命令和其他基礎構件。\n\n### Java 與 C++ 對比\n\n1. 皆支持面向對象編程（封裝、繼承和多態）。\n2. Java 不提供指針來直接訪問內存；C++ 提供。\n3. Java 的類不支持多繼承，但接口可以；C++ 的類可以多繼承。\n4. Java 有內存垃圾自動回收機制（GC），不需要手動釋放無用內存；C++ 沒有。\n5. Java 字符串和字符數組沒有結束符的概念；C/C++ 中字符串和字符數組最後會有一個額外的字符`\\0` 來表示結束。\n\n## Java 語法\n\n### 基本類型及其大小\n\nJava 共 8 種數據類型（不包括 void），具體如下表：\n\n![](java_basic/20201202_24328.png)\n\nboolean 值的大小取決於 JVM 實現，Java 虛擬機規範（第8版）規定：單個 boolean佔 4 個字節，而 boolean 數組 1 個字節。\n\nchar 值是一個 16 位的 Unicode 字符，最小值是 '\\u0000' ，最大值是 '\\uffff'，即 0～65535，每個數字對應一個字符。\n\n- 代碼\n\n    ```java\n    char a = '中';\n    System.out.println((int)a);\n    // 輸出 20013\n    System.out.println(Integer.toHexString(a));\n    // 輸出 4e2d\n    System.out.println('\\u4e2d');\n    // 輸出 中\n    ```\n\nbyte、short、int、long 類型，採用二進制補碼存儲數據，以便利減法運算。\n\n- 二進制補碼\n    - 過程：正數的補碼是其自身；負數的補碼是除符號位外所有二進制位做反碼後加 1 的結果。\n    - 原理：假定 X、Y 是两个占1个字节的数。X-Y 等价于 X+(-Y) ，而 -Y 可以看作 0-Y，假定是 0 不足以被减，向上借 1 变为 1 0000 0000，而  1 0000 0000 又等價於 1111 1111 + 1，於是 -Y = 1111 1111 - Y + 1，即 Y 的反碼再 + 1。 見 [https://www.ruanyifeng.com/blog/2009/08/twos_complement.htm](https://www.ruanyifeng.com/blog/2009/08/twos_complement.html)l\n\nlong 類型的數據後面一定要加上 L，否則會被認為是整型。\n\nchar 類型值使用單引號括起來，String 使用雙引號。\n\nJava 有**自動拆裝箱機制**，裝箱即把基本類型使用其包裝類型包裝起來，拆箱即把包裝類型拆成基本類型。\n\n### 包裝類型及常量池技術\n\n1. Byte、Short、Integer 和 Long 分別默認創建了數值 [-128, 127] 的相應類型的緩存數據。\n2. Character 創建了數值在 [0, 127] 的緩存數據。\n3. Boolean 直接返回 True 和 False。\n4. Float 和 Double 沒有實現常量池技術。\n\n使用常量池技術意味著在緩存範圍內的包裝類型對象是相等的，除非 new 一個對象。使用包裝器的 valueOf 方法默認會先去緩存中取對象，取不到才會 new 一個。\n\n```java\nInteger i1 = 33;\nInteger i2 = 33;\nSystem.out.println(i1 == i2);// 输出 true\nInteger i11 = 333;\nInteger i22 = 333;\nSystem.out.println(i11 == i22);// 输出 false\nDouble i3 = 1.2;\nDouble i4 = 1.2;\nSystem.out.println(i3 == i4);// 输出 false\n```\n\n《阿里巴巴Java開發手冊》規定：\n\n- 【強制】**所有的 POJO 類屬性必須使用包裝數據類型**。\n- 【強制】RPC 方法的返回值和參數必須使用包裝數據類型。\n- 【推薦】所有的局部變量使用基本數據類型。\n\n### BigDecimal\n\n**（1）使用 BigDecimal 進行浮點數比較和精度取捨**\n\n**（2）使用 BigDecimal(String) 或 BigDecimal.valueOf(double) 構造對象**\n\n```java\nfloat a = 1.0f - 0.9f;\nfloat b = 0.9f - 0.8f;\nSystem.out.println(a);\nSystem.out.println(b);\nSystem.out.println(a == b); // false\n\nBigDecimal a = new BigDecimal(\"1.0\");\nBigDecimal b = new BigDecimal(\"0.9\");\nBigDecimal c = new BigDecimal(\"0.8\");\nSystem.out.println(a.subtract(b));\nSystem.out.println(b.subtract(c));\nSystem.out.println(a.subtract(b).equals(b.subtract(c))); // true\n\nBigDecimal a = new BigDecimal(\"1.1252312\");\n// 取小數點後 2 位，四捨五入\nBigDecimal scale = a.setScale(2, RoundingMode.HALF_UP);\nSystem.out.println(scale.toString()); // 1.13\n```\n\n### 對象及其大小\n\n基本類型的封裝類型是對象，Java 中的對象由以下部分組成：\n\n1. 對象頭（object header）：由 mark word 和 class pointer 組成。mark word 存儲了對象的 hashcode、GC信息和鎖信息；class pointer 存儲了指向類對象的指針。32 位的 JVM 上對象頭佔 8 個字節，mark word 和 class pointer 各佔一半。64 位的 JVM 默認開啟了壓縮指針選項（-XX+UseCompressedOops）後上對象頭佔用 12 個字節，mark word 佔用 8 個字節，class pointer 佔用 4 個字節。\n2. 實例數據（instance data）：\n3. 對齊填充（padding）\n\n可使用 `org.openjdk.jol` 工具查看一個對象佔用的字節大小，\n\n- 如下：\n\n    ```java\n    public static void main(String[] args){\n        System.out.println(VM.current().details());\n        System.out.println(ClassLayout.parseClass(Object.class).toPrintable());\n        System.out.println(ClassLayout.parseInstance(Integer.valueOf(1)).toPrintable());\n    }\n    ```\n\n    輸出結果：\n\n    ```bash\n    # Running 64-bit HotSpot VM.\n    # Using compressed oop with 3-bit shift.\n    # Using compressed klass with 3-bit shift.\n    # WARNING | Compressed references base/shifts are guessed by the experiment!\n    # WARNING | Therefore, computed addresses are just guesses, and ARE NOT RELIABLE.\n    # WARNING | Make sure to attach Serviceability Agent to get the reliable addresses.\n    # Objects are 8 bytes aligned.\n    # Field sizes by type: 4, 1, 1, 2, 2, 4, 4, 8, 8 [bytes]\n    # Array element sizes: 4, 1, 1, 2, 2, 4, 4, 8, 8 [bytes]\n\n    java.lang.Object object internals:\n     OFFSET  SIZE   TYPE DESCRIPTION                               VALUE\n          0    12        (object header)                           N/A\n         12     4        (loss due to the next object alignment)\n    Instance size: 16 bytes\n    Space losses: 0 bytes internal + 4 bytes external = 4 bytes total\n\n    java.lang.Integer object internals:\n     OFFSET  SIZE   TYPE DESCRIPTION                               VALUE\n          0     4        (object header)                           01 c9 01 4e (00000001 11001001 00000001 01001110) (1308739841)\n          4     4        (object header)                           3d 00 00 00 (00111101 00000000 00000000 00000000) (61)\n          8     4        (object header)                           48 71 00 00 (01001000 01110001 00000000 00000000) (29000)\n         12     4    int Integer.value                             1\n    Instance size: 16 bytes\n    Space losses: 0 bytes internal + 0 bytes external = 0 bytes total\n    ```\n\n結論：在 64 位開啟指針壓縮的環境下，Object 對象佔用 16 個字節，Integer 對象也佔用 16 個字節。\n\n### String、StringBuffer 和 String Builder 的區別\n\nString 類使用 final 修飾字符數組或字節數組來保存字符串，所以 String 對象是不可變的。\n\n```java\npublic final class String {\n\t// Java 9 之前\n\tprivate final char[] value;\n\t// Java 9 之後\n\tprivate final byte[] value;\n}\n```\n\nStringBuilder  和 StringBuffer 都繼承自 AbstractStringBuilder，AbstractStringBuilder 使用字符數組來保存字符串，但沒有使用 final 關鍵字修飾，所以這兩者是可變的。\n\n下面從不同角度比較下此三者：\n\n1. 線程安全性：String 對象不可變，線程安全；StringBuffer 對方法加了同步鎖，線程安全；StringBuilder 對方法沒有加同步鎖，線程不安全。\n2. 性能：每次對 String 類型進行改變時會生成一個新的 String 對象，然後將指針指向新的 String 對象。StringBuffer 和 StringBuilder 每次對自身進行操作，不生成新對象。同等情況下， StringBuilder 比 StringBuffer 能提升 10%～15% 性能，但要冒線程不安全的風險。\n\n### 注釋\n\n代碼即注釋。先讓標識符見名知意，然後再考慮增加注釋。\n\n### 標識符和關鍵字的區別\n\n標識符是程序、類、變量、方法等取的名字，而關鍵字是具備特殊含義的標識符。常見的關鍵字有：\n\n1. 訪問控制：private、protected、public\n2. 類、方法和變量修飾符：abstract、class、extends、final、implements、interface、native、new、static、strictfp、synchronized、transient、volatile\n3. 程序控制：break、continue、return、do、while、if、else、for、instanceof、switch、case、default\n4. 錯誤處理：try、catch、throw、throws、finally\n5. 包相關：import、package\n6. 基本類型：boolean、byte、char、double、float、int、short、null、true、false\n7. 變量引用：super、this、void\n8. 保留字：goto、const\n\n### 自增自減運算符\n\n符號在前先加減再賦值，符號在後先賦值後加減。假定 `a = 1; b = a++` 最後 a 值爲 2，b 值爲 1。\n\n### == 和 equals 的區別\n\n1. 基本數據類型 == 比較的是值，引用數據類型 == 比較的是內存地址。\n2. equals 是 Object 類的方法，如無重寫該方法，則默認使用 == 比較對象，即比較內存地址；String 類重寫了 equals 方法使其比較得是值。\n3. 整型包裝類都應使用 equals 比較大小。\n4. 浮點數之間的等值判斷，基本數據類型不能用==來比較，包裝數據類型不能用 equals 來判斷。\n- 重寫 equals 方法通常同時需要重寫 hashcode 方法，爲什麼？\n\n    hashcode 是 Object 類的一個本地方法，其實現時將對象的內存地址轉爲一個 int 值，不同的對象的 hashcode 可能相同。 HashSet 集合進行元素重複校驗時先比較 hashcode ，當 hashcode 一樣時再調用 equals，提高了校驗效率。因此，如果只重寫 equals 方法而不重寫 hashcode 方法，會出現 equals 返回 true，而 hashcode 不等的情況，這樣如果要求 HashSet 去重就會失敗。\n\n    HashSet 基於 HashMap 實現，HashMap 內部有一哈希表，裏面使用 hashcode 進行散列存儲。\n\n### 序列化時如果有些字段不想序列化，怎麼辦？\n\n使用 transient 關鍵字修飾不想序列化的字段。\n\n### continue、break 和 return 的區別\n\n1. continue：跳出當前這一次循環，繼續下一次循環。\n2. break：跳出整個循環體，繼續執行循環外的語句。\n3. return：跳出所在的方法，結束方法，可以帶一個返回值。\n\n### 泛型、類型擦除和通配符\n\n**泛型的本質是將類型參數化。**Java 的泛型（generics）是 JDK 5 中引入的新特性，還提供了編譯時類型安全檢測機制來檢測非法的類型。但是 Java 的泛型在編譯期間會將泛型信息擦除，即類型擦除，因此也被稱爲**僞泛型**。下面的例子展示了如何在運行期加入非法類型。\n\n```java\nList<Integer> list = new ArrayList<>();\nlist.add(12);\n//這裡直接添加會報錯\n// list.add(\"a\");\nClass<? extends List> clazz = list.getClass();\nMethod add = clazz.getDeclaredMethod(\"add\", Object.class);\n//但是通過反射添加，是可以的\nadd.invoke(list, \"kl\");\nSystem.out.println(list);\n```\n\n泛型分泛型接口、泛型類和泛型方法。泛型類的具體類型通過實例化時傳入，泛型方法的具體類型通過方法調用時傳入的參數確定。\n\n泛型通配符約定：\n\n1. ？ 表示不確定的 Java 類型，用於泛型方法\n2. T（Type）表示確定的一個 Java 類型\n3. K V（Key Value）分別表示映射中的鍵、值\n4. E（Element）表示集合中的一個元素\n5. <? extends A> 上界通配符，表示 A 類型或其子類\n6. <? super A> 下界通配符，表示 A 類型或其父類\n7. <T extends A> 表示 A 類型或其子類的一種\n8. <T extends A & B> 表示 A 類型且B類型的子類的一種\n9. ~~<T super A>~~ \n\n泛型不是協變的，已知 Apple 繼承自 Fruit 的情況下，Plate<Apple> 的引用並不能傳遞給 Plate<Fruit>，但可以傳遞給 Plate<? extends Fruit>。\n\n元素爲 <? extends E> 的集合，只能取出 E，而不能存入 E 及其子類的對象。因爲只能確定該類型是 E 的子類，但具體是哪個子類未知，因此編譯器不允許插入任何 E 或其子類的對象，取出來的時候只能當 E 類型。\n\n```java\npublic static void main(String[] args) {\n  List<? extends A> list = Arrays.asList(new A(), new B());\n  list.add(new A()); // 報錯\n  list.add(new B()); // 報錯\n  A a = list.get(1);\n  System.out.println(a.toString());\n}\n\nstatic class A {\n}\n\nstatic class B extends A {\n}\n```\n\n元素爲 <? super E> 的集合，只能取出 Object，只能存入 E 及其子類的對象。因爲只能確定該類型是 E 的超類，但不知是哪一個超類，所以插入任何 E 及其子類的對象是沒問題的，但是插入 E 的超類就不行了，取出來的時候也只能是 Object，因爲 Object 是一切類的超類。\n\n```java\npublic static void main(String[] args) {\n  List<? super B> list = new ArrayList<>();\n  list.add(new A()); // 報錯\n  list.add(new B());\n  list.add(new C());\n  Object object = list.get(1);\n  System.out.println(object.toString());\n}\n\nstatic class A {\n}\nstatic class B extends A {\n}\nstatic class C extends B{\n}\n```\n\n### 獲取鍵盤輸入數據的常用方法\n\n```java\n// 方法一：使用 Scanner，可以快速確定輸入數據的類型，按空格符分割數據\nScanner scanner = new Scanner(System.in);\nString s = scanner.nextLine();\nSystem.out.println(s);\n\n// 方法二：使用 BufferedReader 讀取字符序列，高效但需要轉換成其他類型，會拋出 IOException\nBufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));\nString s1 = bufferedReader.readLine();\nSystem.out.println(s1);\n```\n\n## 方法（函數）\n\n### 爲什麼 Java 只有值傳遞？\n\n首先要明瞭程序設計語言中的有關函數參數傳遞的兩種方法：\n\n1. 按值調用（call by value）：方法接收調用者提供的參數的值，方法內無法修改實際參數值。\n2. 按引用調用（call by reference）：方法接收調用者提供的參數的地址，方法內可以修改實際參數值。\n\n**Java 總是採用按值調用，所有參數值都是一個拷貝，無法修改實際參數值。對於引用類型參數，傳遞的是引用的拷貝，引用的拷貝和引用指向同一個對象，即所謂的淺拷貝**。\n\n```java\npublic static void main(String[] args) {\n  String s1 = \"Hello\";\n  String s2 = \"World\";\n  swap(s1, s2);\n  System.out.printf(\"main s1: %s, s2: %s%n\", s1, s2);\n}\n\nstatic void swap(String s1, String s2) {\n  String tmp = s1;\n  s1 = s2;\n  s2 = tmp;\n  System.out.printf(\"swap s1: %s, s2: %s%n\", s1, s2);\n}\n// 運行結果：\n// swap s1: World, s2: Hello\n// main s1: Hello, s2: World\n```\n\n結論：\n\n1. 一個方法不能修改一個基本類型的實參。\n2. 一個方法可以改變一個對象類型的實參狀態。\n3. 一個方法不能讓對象類型的實參引用一個新對象。\n\n### 深拷貝和淺拷貝有什麼不同？\n\n1. 淺拷貝：對基本類型拷貝其值；對引用類型拷貝其引用。\n2. 深拷貝：對基本類型拷貝其值；對引用類型，新建一個對象並拷貝原對象的值。\n\n![](java-basic/Untitled.png)\n\n### 重載和重寫有什麼區別？\n\n1. 重載（overloading）：在一個類中，有多個同名但不同傳入參數的方法，各個重載方法簽名不同。\n2. 重寫（overwrite）：子類對父類允許訪問的方法的重新編寫，方法簽名不變，訪問修飾符只能降低不能提高，拋出的異常只能更小，返回值類型也是。\n\n## Java 面向對象\n\n### 面向對象和面向過程\n\n1. 面向過程：不需要實例化對象，內存和 CPU 開銷小，但不容易維護。\n2. 面向對象：需要實例化對象，內存和 CPU 開銷大，但易維護、易復用、易擴展。\n\nJava 因爲編譯出的字節碼並不能直接在機器上運行，因而效率上會稍慢。但一些面向過程的腳本語言性能也不一定比 Java 好。\n\n### 構造方法\n\n1. 特點：名字跟類名相同，沒有返回值，不可重寫但可重載。\n2. 作用：執行對象的初始化工作，如果類沒有重載任何構造方法，那默認會有不帶參數的構造方法。\n3. 子類初始化時一定會調用父類的構造方法，即使子類不顯式調用，也會默認調用父類的無參構造方法。\n\n### 成員變量和局部變量的區別\n\n1. 成員變量：屬於類；可以被 public、private、static 等修飾符修飾；如用 static 修飾則變量屬於類，否則屬於對象存在於堆內存；生命週期隨對象；自動賦予初始化值。\n2. 局部變量：屬於代碼塊或方法；只能被 final 修飾；存在於棧內存；生命週期隨代碼塊或方法；不會自動賦予初始化值。\n\n### 對象實例和對象引用的區別\n\n1. 對象實例：存在於堆內存，一個對象實例可以被多個引用指向。\n2. 對象引用：存在於棧內存，一個引用指向一個對象實例。\n\n### 面向對象的三大特徵\n\n**（1）封裝**\n\n封裝是將一個對象的狀態信息（即屬性）隱藏在對象內部，一般不允許外界直接訪問，而是提供必要的方法給外界操作。\n\n**（2）繼承**\n\n繼承是使用已有的類創建新類的技術，它提高了代碼復用率和開發效率。關於繼承以下幾點務必明瞭：\n\n1. 子類擁有父類所有的屬性和方法（包括私有的），但父類中的私有屬性和方法子類無法訪問（反射子類也無法訪問），**僅僅擁有**。\n2. 子類可以對父類進行擴展，增加新的屬性和方法。\n3. 子類可以重寫父類的方法。\n\n**（3）多態**\n\n多態，即一個對象可以擁有多種狀態。具體表現在父類的引用可以指向子類的實例。關於多態以下幾點務必知曉：\n\n1. 對象類型和引用類型之間具有繼承/實現關係。\n2. 對象類型不可變，引用類型可變。\n3. 方法具有多態性，屬性不具有。父類的引用可以調用子類對象的方法，但不能訪問其屬性。\n4. 父類的引用不能調用「只有子類存在但在父類不存在」的方法。\n5. 如果子類重寫了父類的方法，真正執行的是子類覆蓋的方法。\n\n### **靜態方法內爲什麼不能調用非靜態成員？**\n\n因爲非靜態成員需要在類實例化成對象後才能被調用，而靜態方法不需要實例化對象就可以被調用。\n\n### 接口和抽象類的區別\n\n1. 方法上：接口的方法默認修飾符是 public，且不能實現（Java 8 開始可以有默認方法和靜態方法，Java 9 開始可以有私有方法和私有靜態方法）；而抽象類可有 public、protected 和 default 修飾符，且可有非抽象的方法。\n2. 變量上：接口只能有 static、final 變量；而抽象類沒有限制。\n3. 繼承上：一個類可以實現多個接口，接口本身也可以擴展多個接口；但一個類只能繼承一個抽象類。\n4. 設計上：接口是對行爲的抽象，是一個行爲規範；抽象類是對類的抽象，是一種模板設計。\n\n## Java 核心技術\n\n### 集合\n\n見 [Java 集合](https://linlshare.github.io/2020/12/02/it/java/java-collection/) \n\n### 反射機制\n\n**（1）什麼是反射**\n\nJava 的反射機制是在運行時能知道任意一個類的所有屬性和方法，能調用任意一個對象的屬性和方法。\n\n**（2）反射的優缺點**\n\n1. 優點：運行時確定類型，動態加載類，提高代碼靈活度。\n2. 缺點：反射性能比直接的 Java 代碼慢，存在安全問題，因爲可以動態操作改變類的屬性。\n\n反射動態加載類的優點即是動態編譯，與之相對的是靜態編譯，靜態編譯是在編譯時就確定了類型。\n\n**（3）反射的應用場景**\n\n反射是框架設計的靈魂。其應用場景有：\n\n1. 模塊化開發；\n2. 動態代理設計模式；\n3. Spring 框架的 IOC（控制反轉）和 AOP（面向切面編程）；\n4. JDBC 連接數據庫等等。\n\n### 異常\n\n**（1）簡介**\n\nJava 的異常歸於同一個 Throwable 類，並分爲兩大類：Error 和 Exception。**Error 通常是 JVM 錯誤，程序無法處理**；**而 Exception 是程序本身可以處理的異常**。Exception 分爲 Checked Exceptions（受檢異常）和 Unchecked Exceptions（不受檢異常）。\n\n![](java-basic/Untitled%201.png)\n\n**Checked Exceptions 又名 Compile Time Exceptions（編譯時異常）**，編譯器可以發現並要求程序處理後才能正常通過編譯，常見的有：\n\n- *IOException*\n- *EOFException*\n- *MalFormedURLException*\n- *IntruptedException*\n\n**Unchecked Exception 又名 Runtime Exceptions（運行時異常）**，編譯器無法檢測出，只有運行時才會發生的異常，常見的有：\n\n- *ArithmaticException*\n- *NullPointerException*\n- *IndexOutOfBoundsException*\n- *ClassCastException*\n- *ArrayIndexOutOfBoundsException*\n- *NumberFormatException*\n\n**（2）Throwable 類常用方法**\n\n1. `getMessage`：返回異常的簡要描述\n2. `toString`：返回異常的詳細信息\n3. `getLocalizedMessage`：返回異常的本地化信息（需要子類覆蓋該方法，否則與 `getMessage` 一樣）\n4. `printStackTrace`：在控制台打印 Throwable 对象封装的异常信息\n\n**（3）try-catch-finally**\n\n1. try 代碼塊：捕獲異常。其後可接零個或多個 catch 代碼塊，如零個則必須接一個 finally 代碼塊。\n2. catch 代碼塊：處理捕獲到的異常。\n3. finally 代碼塊：無論是否捕獲或處理異常，finally 代碼塊最終都會被執行。當在 try 代碼塊或 catch 代碼塊中遇到 return 語句時，finally 代碼塊將在方法返回之前被執行。此時如果 finally 中也有 return 語句的話，其返回值將覆蓋 try 或 catch 代碼塊中的返回值。\n\n```java\npublic static int f(int value) {\n  try {\n      return value * value;\n  } finally {\n      if (value == 2) {\n          return 0;\n      }\n  }\n}\n// f(2) 將返回 0 ，而不是 4.\n```\n\n以下情況，finally 代碼塊不會被執行或只部分執行：\n\n1. finally 代碼塊中有異常，代碼會中異常處中止；\n2. 在 catch 代碼塊或 finally 塊中調用了 `System.exit` 函數退出程序；\n3. 程序所在的線程死亡等等不可預料的系統和硬件問題。\n\n**（4）try-witch-resources**\n\nJava 7 中新增了 ****try-witch-resources 語法糖，適用於實現`java.lang.AutoCloseable` 或者 `java.io.Closeable` 的對象，可以自動關閉申請的資源，然後再執行 catch 或 finally 代碼塊。\n\n```java\n// try-catch-finally\nScanner scanner = null;\ntry {\n    scanner = new Scanner(new File(\"src/main/resources/test.txt\"));\n    while (scanner.hasNext()) {\n        System.out.println(scanner.nextLine());\n    }\n} catch (IOException e) {\n    e.printStackTrace();\n} finally {\n    if (scanner != null) {\n        scanner.close();\n    }\n}\n// try-witch-resources\ntry (Scanner scanner = new Scanner(new File(\"src/main/resources/test.txt\"))) {\n    while (scanner.hasNext()) {\n        System.out.println(scanner.nextLine());\n    }\n} catch (IOException e) {\n    e.printStackTrace();\n}\n```\n\n### 多線程\n\n見 [Java 並發](https://linlshare.github.io/2020/12/02/it/java/java-concurrent/) \n\n### 文件與 I/O 流\n\n**（1）Java 中 I/O 流分爲幾種？**\n\n按不同的分類方法有不同的分類：\n\n1. 按流向分：輸入流、輸出流。\n2. 按操作單元分：字節流、字符流。\n3. 按角色分：節點流、處理流。\n\nJava 中 40 多個 I/O 流相關的類都是從 4 個抽象基類派生：\n\n1. InputStream：字節輸入流\n2. Reader：字符輸入流\n3. OutputStream：字節輸出流\n4. Writer：字符輸出流\n\n![](java-basic/Untitled%202.png)\n\n![](java-basic/Untitled%203.png)\n\n**（2）爲什麼有了字節流還需要字符流？**\n\n不管是文件讀寫還是網絡發送接收，信息的最小存儲單元都是字節，那為什麼 I/O 流操作要分為字節流操作和字符流操作呢？\n\n字符流是由 JVM 將字節流轉換得到的，過程非常耗時，且容易出現亂碼問題。所以 I/O 流提供直接操作字符流的接口，以避免這種轉換。對於文本建議使用字符流，而圖片、音視頻等應使用字節流。\n\n**（3）BIO、NIO、AIO 有什麼區別？**\n\n1. **BIO**（Blocking I/O），同步阻塞 I/O 模式，數據的讀取寫入必須阻塞在一個線程內等待其完成。適用於活動連接數不高（< 單機 1000）的情況，結合線程池一起使用。\n2. **NIO**（Non-blocking I/O 或 New I/O），同步非阻塞的 I/O 模型，Java 1.4 中引入，位於 `java.nio` 包，提供 Channel、Selector 和 Buffer 等抽象，支持基於通道面向緩衝的 I/O 操作方法。適用於高負載、高並發的（網絡）應用。\n3. **AIO**（Asynchronous I/O），異步非阻塞的 I/O 模型，Java 7 中引入。支持基於事件回調機制的操作方法。\n\nNIO 模型：\n\n![](java-basic/Untitled%204.png)\n\n- NIO 服務端代碼\n\n    ```java\n    public class MultiplexerNioServer implements Runnable {\n\n        private Selector selector;\n        private volatile boolean stop = false;\n\n        /**\n         * 初始化多路复用器 绑定监听端口\n         *\n         * @param port\n         */\n        public MultiplexerNioServer(int port) {\n            try {\n                ServerSocketChannel serverSocketChannel = ServerSocketChannel.open();//获得一个serverChannel\n                selector = Selector.open();////创建选择器  获得一个多路复用器\n                serverSocketChannel.configureBlocking(false);//设置为非阻塞模式 如果为 true，则此通道将被置于阻塞模式；如果为 false，则此通道将被置于非阻塞模式\n                serverSocketChannel.socket().bind(new InetSocketAddress(port), 1024);//绑定一个端口和等待队列长度\n                serverSocketChannel.register(selector, SelectionKey.OP_ACCEPT);//把selector注册到channel，关注链接事件\n            } catch (IOException e) {\n                e.printStackTrace();\n                System.exit(1);\n            }\n        }\n\n        public void stop() {\n            this.stop = true; // 优雅停机\n        }\n\n        public void run() {\n            while (!stop) {\n                try {\n                    //无论是否有读写事件发生，selector每隔1s被唤醒一次。如果一定时间内没有事件，就需要做些其他的事情，就可以使用带超时的\n                    int client = selector.select(1000);\n                    System.out.println(\"1:\" + client);\n                    // 阻塞,只有当至少一个注册的事件发生的时候才会继续.\n                    // int client = selector.select(); 不设置超时时间为线程阻塞，但是IO上支持多个文件描述符就绪\n                    if (client == 0) {\n                        continue;\n                    }\n                    System.out.println(\"2:\" + client);\n                    Set<SelectionKey> selectionKeys = selector.selectedKeys();\n                    Iterator<SelectionKey> it = selectionKeys.iterator();\n                    SelectionKey key = null;\n                    while (it.hasNext()) {\n                        key = it.next();\n                        it.remove();\n                        try {\n                            //处理事件\n                            handle(key);\n                        } catch (Exception e) {\n                            if (key != null) {\n                                key.cancel();\n                                if (key.channel() != null) {\n                                    key.channel().close();\n                                }\n                            }\n                        }\n                    }\n                } catch (Throwable e) {\n                    e.printStackTrace();\n                }\n            }\n\n            if (selector != null) {\n                // selector关闭后会自动释放里面管理的资源\n                try {\n                    selector.close();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n\n        public void handle(SelectionKey key) throws IOException {\n            if (key.isValid()) {\n                //连接事件\n                if (key.isAcceptable()) {\n                    ServerSocketChannel ssc = (ServerSocketChannel) key.channel();\n                    // 通过ServerSocketChannel的accept创建SocketChannel实例\n                    // 完成该操作意味着完成TCP三次握手，TCP物理链路正式建立\n                    SocketChannel sc = ssc.accept();//3次握手\n                    sc.configureBlocking(false);\n                    sc.register(selector, SelectionKey.OP_READ);//连接建立后关注读事件\n                }\n\n                //读事件\n                if (key.isReadable()) {\n                    SocketChannel socketChannel = (SocketChannel) key.channel();\n                    ByteBuffer readbuffer = ByteBuffer.allocate(1024);//写 0 1024  1024\n    //                ByteBuffer readbuffer = ByteBuffer.allocateDirect(1024); //申请直接内存，也就是堆外内存\n                    // 读取请求码流，返回读取到的字节数\n                    while (true) {\n                        int readBytes = socketChannel.read(readbuffer);\n                        // 读取到字节，对字节进行编解码\n                        if (readBytes > 0) {\n                            // 将缓冲区当前的limit设置为position=0，用于后续对缓冲区的读取操作\n                            readbuffer.flip();//读写模式反转\n                            // 将缓冲区可读字节数组复制到新建的数组中\n                            byte[] bytes = new byte[readbuffer.remaining()];\n                            readbuffer.get(bytes);\n                            String body = new String(bytes, StandardCharsets.UTF_8);\n                            System.out.println(\"input is:\" + body);\n                            res(socketChannel, body);\n                        } else if (readBytes < 0) {\n                            // 链路已经关闭 释放资源\n                            key.cancel();\n                            socketChannel.close();\n                        } else {\n                            // 没有读到字节忽略\n                            return;\n                        }\n                    }\n\n                }\n\n            }\n        }\n\n        private void res(SocketChannel channel, String response) throws IOException {\n            if (response != null && response.length() > 0) {\n                byte[] bytes = response.getBytes();\n                ByteBuffer writeBuffer = ByteBuffer.allocate(bytes.length);\n                writeBuffer.put(bytes);\n                writeBuffer.flip();\n                channel.write(writeBuffer);\n                System.out.println(\"res end\");\n            }\n        }\n    }\n    ```\n\n- NIO 客戶端代碼\n\n    ```java\n    public class NioClientHandler implements Runnable {\n        private final String host;\n        private final int port;\n        private Selector selector;\n        private SocketChannel socketChannel;\n        private volatile boolean stop;\n\n        public NioClientHandler(String host, int port) {\n            this.host = host;\n            this.port = port;\n            try {\n                // 创建选择器\n                selector = Selector.open();\n                // 打开监听通道\n                socketChannel = SocketChannel.open();\n                // 如果为 true，则此通道将被置于阻塞模式；如果为 false，则此通道将被置于非阻塞模式\n                socketChannel.configureBlocking(false); // 开启非阻塞模式\n            } catch (IOException e) {\n                e.printStackTrace();\n                System.exit(1);\n            }\n        }\n\n        public void run() {\n            try {\n                doConnect();\n            } catch (IOException e) {\n                e.printStackTrace();\n                System.exit(1);\n            }\n            while (!stop) {\n                try {\n                    int wait = selector.select(1000);\n                    if (wait == 0) {\n                        continue;\n                    }\n                    Set<SelectionKey> selectionKeys = selector.selectedKeys();\n                    Iterator<SelectionKey> it = selectionKeys.iterator();\n                    SelectionKey key = null;\n\n                    while (it.hasNext()) {\n                        key = it.next();\n                        it.remove();\n                        try {\n                            handle(key);\n                        } catch (Exception e) {\n                            if (key != null) {\n                                key.cancel();\n                                if (key.channel() != null) {\n                                    key.channel().close();\n                                }\n                            }\n                        }\n                    }\n                } catch (Exception e) {\n                    e.printStackTrace();\n                    System.exit(1);\n                }\n            }\n            if (selector != null) {\n                try {\n                    selector.close();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n\n        private void doConnect() throws IOException {\n            if (socketChannel.connect(new InetSocketAddress(host, port))) {\n                socketChannel.register(selector, SelectionKey.OP_READ);\n                doWrite(socketChannel);\n            } else {\n                socketChannel.register(selector, SelectionKey.OP_CONNECT);\n            }\n        }\n\n        private void handle(SelectionKey key) throws IOException {\n            if (key.isValid()) {\n                SocketChannel sc = (SocketChannel) key.channel();\n                if (key.isConnectable()) {\n                    if (sc.finishConnect()) {\n                        sc.register(selector, SelectionKey.OP_READ);\n                        doWrite(sc);\n                    } else {\n                        System.exit(1);\n                    }\n                }\n                if (key.isReadable()) {\n                    ByteBuffer readBuffer = ByteBuffer.allocate(1024);\n                    int readBytes = sc.read(readBuffer);\n                    if (readBytes > 0) {\n                        readBuffer.flip();\n                        byte[] bytes = new byte[readBuffer.remaining()];\n                        readBuffer.get(bytes);\n                        String body = new String(bytes, StandardCharsets.UTF_8);\n                        System.out.println(\"res\" + body);\n                        this.stop = true;\n                    } else if (readBytes < 0) {\n                        key.cancel();\n                        sc.close();\n                    }\n\n                }\n            }\n        }\n\n        private void doWrite(SocketChannel sc) throws IOException {\n            // 将消息编码为字节数组\n            byte[] request = \"Hello\".getBytes();\n            // 根据数组容量创建ByteBuffer\n            ByteBuffer writeBuffer = ByteBuffer.allocate(request.length);\n            // 将字节数组复制到缓冲区\n            writeBuffer.put(request);\n            // flip读写切换操作\n            writeBuffer.flip();\n            sc.write(writeBuffer);\n            if (!writeBuffer.hasRemaining()) {\n                System.out.println(\"写入完成\");\n            }\n        }\n    }\n    ```\n\n## Java 項目管理和構建\n\n### Maven 项目\n\n**（1）安装**\n\n從 [Maven 官網](https://maven.apache.org/download.cgi)下載 maven 包，解壓並設置環境變量。還可以直接使用 IDEA 的 Maven 插件。\n\n**（2）初始化一個 Maven 項目**\n\n使用以下命令：\n\n```bash\nmvn -B archetype:generate -DgroupId=com.mycompany.app -DartifactId=my-app -DarchetypeArtifactId=maven-archetype-quickstart -DarchetypeVersion=1.4\n```\n\n或者用 IDEA 直接新建一個 Maven 項目，其結構如下：\n\n![](java-basic/20201114_101407.png)\n\n其中 pom.xml 的內容如下：\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>org.example</groupId>\n    <artifactId>testmaven</artifactId>\n    <version>1.0-SNAPSHOT</version>\n\n    <!--  添加以下屬性，解決編譯報錯  -->\n    <properties>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <maven.compiler.encoding>UTF-8</maven.compiler.encoding>\n        <java.version>15</java.version>\n        <maven.compiler.source>15</maven.compiler.source>\n        <maven.compiler.target>15</maven.compiler.target>\n    </properties>\n    <!-- 新增依賴在下方 -->\n    <dependencies>\n        <dependency>\n            <groupId>org.openjdk.jol</groupId>\n            <artifactId>jol-core</artifactId>\n            <version>0.14</version>\n        </dependency>\n    </dependencies>\n</project>\n```\n\n- 為什麼叫 Maven？\n\n    Maven 來源於意第緒語，爲「行家」的意思。最初是為了簡化 Jakarta Turbine 項目中的構建過程而建立。Maven 使用項目對象模型（POM）和一組插件來構件項目。\n\n- POM 又是指什麼？\n\n    POM（project object model）項目對象模型，maven 使用 `pom.xml` 定義了整個項目的構建、報告和文檔。\n\n**（3）編譯測試打包**\n\n```bash\n# 清理 target 中的文件\nmvn clean\n# 編譯 java 文件成 class 文件，置於 target/classes 文件夾中\nmvn compile\n# 進行單元測試\nmvn test\n# 打包成 jar 文件，置於 target 文件夾中\nmvn package\n# 安裝 jar 包到本地存儲庫（${user.home}/.m2/repository）\nmvn install\n# 生成自己的 maven 站點\nmvn site\n```\n\n- SNAPSHOT 是什麼？\n\n    snapshot 簡要的意思，在版本號之後添加 `-SNAPSHOT` 是說明該版本仍處於開發階段，不是最終的發行版本。以 `x.y-SNAPSHOT` 版本為例，發行時會去除 `-SNAPSHOT`  後綴，然後將最新的開發版本升爲`x.(y+1)-SNAPSHOT` 。\n\n- 使用 mvn compile 生成的 jar 包，其內容是怎樣的？\n\n    除了 class 文件外，還有 `META-INF` 文件夾，裏面存放一些清單文件和pom 文件。存放到項目資源文件夾（`main/resources` ）的文件也會被打包到`META-INF` 文件夾中，代碼中可通過`getClass().getResourceAsStream( \"/application.properties\" )` 調用。\n\n    ```bash\n    $ jar tf target/testmaven-1.0-SNAPSHOT.jar \n    META-INF/\n    META-INF/MANIFEST.MF\n    B.class\n    MemoryLayoutTest.class\n    A.class\n    C.class\n    META-INF/maven/\n    META-INF/maven/org.example/\n    META-INF/maven/org.example/testmaven/\n    META-INF/maven/org.example/testmaven/pom.xml\n    META-INF/maven/org.example/testmaven/pom.properties\n    ```\n\n### Gradle 项目\n\n**（1）安裝**\n\n可從 [gradle 官網](https://www.gradle.org/downloads)下載解壓並配置環境變量的方式安裝。Mac 用戶還可以使用 `brew install gradle` 的方式安裝。或者直接使用 IDEA 項目中的 `gradle-wrapper` ，此時對應的 `gradle` 命令變爲 `gradlew`。\n\n**（2）gradle 命令能做什麼？**\n\ngradle 命令能構建項目， 查看項目依賴、子項目和項目配置等等。\n\n```bash\n$ gradle tasks\n\n:tasks\n\n== All tasks runnable from root project\n\n== Build Setup tasks\nsetupBuild - Initializes a new Gradle build. [incubating]\n\n== Help tasks\ndependencies - Displays all dependencies declared in root project 'gs-gradle'.\ndependencyInsight - Displays the insight into a specific dependency in root project 'gs-gradle'.\nhelp - Displays a help message\nprojects - Displays the sub-projects of root project 'gs-gradle'.\nproperties - Displays the properties of root project 'gs-gradle'.\ntasks - Displays the tasks runnable from root project 'gs-gradle'.\n\nTo see all tasks and more detail, run with --all.\n\nBUILD SUCCESSFUL\n\nTotal time: 3.077 secs\n```\n\n**（3）初始化一個 Gradle 項目**\n\n在項目文件夾中新建一個名爲 `build.gradle` 的文件，其內容如下：\n\n```groovy\napply plugin: 'java'\n```\n\n隨後新建一個名爲 `settings.gradle` 的文件，其內容可暫時爲空。\n\n在 IDEA 中打開此項目，隨後 IDEA 會自動配置加入 `gradle-wrapper` ，其過程等價於執行以下命令：\n\n```bash\ngradle wrapper --gradle-version 6.5\n```\n\n**（4）編譯打包**\n\n```bash\n# 編譯項目，會默認在 build/classes 中生成類文件，在 build/libs 中生成 jar 包\ngradle build\n# 或使用 gradle wrapper\n./gradlew build\n\n# 清理生成的文件\ngradle clean\n\n# 生成 jar 文件\ngradle jar\n\n# 運行生成的 jar 文件\ngradle run\n\n# 進行單元測試\ngradle test\n```\n\n**（5）`build.gradle` 中可配置什麼？**\n\n```groovy\n// 配置插件，插件提供語法定義\napply plugin: 'java'\napply plugin: 'application'\n\n// 配置入口類\nmainClassName = 'hello.HelloWorld'\n\n// 配置依賴倉庫\nrepositories {\n    mavenCentral()\n}\n\n// 配置生成的 jar 文件的入口類\njar {\n    manifest {\n        attributes 'Main-Class': mainClassName\n    }\n}\n\n// 配置 JDK 兼容性\nsourceCompatibility = 1.8\ntargetCompatibility = 1.8\n\n// 配置依賴\ndependencies {\n    compile \"joda-time:joda-time:2.2\"\n    testCompile \"junit:junit:4.12\"\n}\n```\n\n如需將所有依賴 jar 打進同一個 jar 包，可使用 [shadow 插件](https://github.com/johnrengelman/shadow)或使用 [spring boot 插件](https://spring.io/quickstart)。","source":"_posts/it/java/java-basic.md","raw":"---\ntitle: Java 基礎\np: it/java/java-basic.md\ntags:\n- Java\n---\n\nJava 自 95 年誕生至今，已有 25 年的歷史。它是一種半編譯的語言，先將代碼編譯成字節碼，然後在 JVM 中解釋執行。\n\n- 它是一種面向對象的語言，封裝、繼承和多態它都有，類可以多實現但不支持多繼承，而接口可以多繼承。\n- 它支持 8 種基本數據類型，同時還提供了其包裝類型，另外還提供了 BigDecimal 精確處理浮點數、提供了 BigInteger 處理大整數。\n- 它的方法只有值傳遞，傳遞對象時它是淺拷貝而非深拷貝。類的方法可以被子類重寫，同個類可以有多個同名的重載方法。\n- 它支持泛型，一種將類型參數化的技術。不過，也有人稱之爲「僞泛型」，因爲類型會在編譯時被擦除。\n- 它支持反射，一種在運行時操作任意對象的方法和屬性的技術，這在框架應用中很常見。\n- 它提供了豐富的集合類、迭代器及工具類。\n- 它支持多線程，一種在程序進程中同時執行多個任務的技術，同時還有豐富的鎖類型，所有對象的頭信息裏都有一個鎖標識。\n- 它支持異常處理，Exception 分編譯時異常和運行時異常，編譯時異常可以被編譯器檢查到，而運行時異常只能在程序運行時發生。\n- 它有豐富的 I/O API，派生自 4 個抽象類，InputStream、OutputStream、Reader、Writer，字符流的出現是爲了減少 JVM 進行字符編碼解碼的資源損耗和編解碼錯誤。\n- 另外，目前有兩大項目管理工具，Maven 和 Gradle。\n\n<!-- more -->\n\n## Java 入門（基礎概念與常識）\n\n### 歷史\n\nJava 編程語言本名爲 oak（橡樹），因爲商標被註冊了，所以更名爲 Java，而 Java 是印尼的一座島嶼，盛產咖啡豆，有一種咖啡就是以該島命名，Java 編程語言之名因之。使用十六進制編輯器打開 class 文件時會發現前 32 位顯示爲 `CA FE BA BE` ，即 cafe babe （咖啡寶貝）。\n\n```java\n$ hexdump Test.class\n0000000 ca fe ba be 00 00 00 3b 00 51 0a 00 02 00 03 07\n```\n\n- 1994 年完成 1.0 版本。\n- 1995 年首次對外發佈，Java 語言誕生。\n- 1996 年JDK 1.0 誕生。\n- 2004 年 SUN 公司發佈 Java SE 5。\n- 2005 年 SUN 公司發佈 Java SE 6。\n- 2006 年 SUN 公司推出 OpenJDK 計劃。\n- 2014年 Oracle 公司發佈 Java SE 8。\n- 2017年 Oracle公司發佈 Java SE 9。\n- 2020 年 Oracle 公司發佈 Java SE 15。\n\n### 安裝與卸載JDK\n\n在 Mac 環境下，從 [Oracle JavaSE 下載地址](https://www.oracle.com/tw/java/technologies/javase-downloads.html) 下載並安裝。安裝完成後執行 `java -version`  可查看安裝的版本，以確認安裝成功。安裝後的Java Home 位置爲 `/Library/Java/JavaVirtualMachines/jdk-9.0.1.jdk/Contents/Home` 。如需卸載該 jdk，可安裝以下 shell 命令，先移除插件後根據查詢到的 jdk 版本移除整個 jdk 文件夾即可。\n\n```bash\nsudo rm -fr /Library/Internet\\ Plug-Ins/JavaAppletPlugin.plugin\nsudo rm -fr /Library/PreferencesPanes/JavaControlPanel.prefpane\n\nls /Library/Java/JavaVirtualMachines/\n输出：jdk-9.0.1.jdk\n\nsudo rm -rf /Library/Java/JavaVirtualMachines/jdk-9.0.1.jdk\n```\n\n### Hello World\n\n運行以下代碼，將輸出 `Hello World`。\n\n```java\npackage hello;\n\npublic class Hello {\n    public static void main(String[] args) {\n        System.out.println(\"Hello World\");\n    }\n}\n```\n\n### Java 語言的特點\n\n1. 面向對象（封裝，繼承，多態）\n2. 平台無關性（ Java 虛擬機實現平台無關性）\n3. 支持多線程\n4. 編譯與解釋並存\n\n編譯：生成字節碼(.class文件)，javac 指令。\n解釋：解釋字節碼成機器碼，java 指令。\n\n### JVM、JDK 和  JRE\n\n1. JVM，Java Virtual Machine 的縮寫，即 Java 虛擬機，是運行 Java 字節碼的虛擬機（包含解釋器 java），它包含在 JRE 中。不同的操作系統有特定的 JVM 實現，以便 Java 字節碼可以跨平台。\n2. JDK，Java Development Kit 的縮寫，即 Java 開發工具集，包含了 JRE 、編譯器（javac）和其他工具（javadoc 和 jdb 等）。\n3. JRE，Java Runtime 的縮寫，即 Java 運行時，包含了 JVM、必要的類庫、java 命令和其他基礎構件。\n\n### Java 與 C++ 對比\n\n1. 皆支持面向對象編程（封裝、繼承和多態）。\n2. Java 不提供指針來直接訪問內存；C++ 提供。\n3. Java 的類不支持多繼承，但接口可以；C++ 的類可以多繼承。\n4. Java 有內存垃圾自動回收機制（GC），不需要手動釋放無用內存；C++ 沒有。\n5. Java 字符串和字符數組沒有結束符的概念；C/C++ 中字符串和字符數組最後會有一個額外的字符`\\0` 來表示結束。\n\n## Java 語法\n\n### 基本類型及其大小\n\nJava 共 8 種數據類型（不包括 void），具體如下表：\n\n![](java_basic/20201202_24328.png)\n\nboolean 值的大小取決於 JVM 實現，Java 虛擬機規範（第8版）規定：單個 boolean佔 4 個字節，而 boolean 數組 1 個字節。\n\nchar 值是一個 16 位的 Unicode 字符，最小值是 '\\u0000' ，最大值是 '\\uffff'，即 0～65535，每個數字對應一個字符。\n\n- 代碼\n\n    ```java\n    char a = '中';\n    System.out.println((int)a);\n    // 輸出 20013\n    System.out.println(Integer.toHexString(a));\n    // 輸出 4e2d\n    System.out.println('\\u4e2d');\n    // 輸出 中\n    ```\n\nbyte、short、int、long 類型，採用二進制補碼存儲數據，以便利減法運算。\n\n- 二進制補碼\n    - 過程：正數的補碼是其自身；負數的補碼是除符號位外所有二進制位做反碼後加 1 的結果。\n    - 原理：假定 X、Y 是两个占1个字节的数。X-Y 等价于 X+(-Y) ，而 -Y 可以看作 0-Y，假定是 0 不足以被减，向上借 1 变为 1 0000 0000，而  1 0000 0000 又等價於 1111 1111 + 1，於是 -Y = 1111 1111 - Y + 1，即 Y 的反碼再 + 1。 見 [https://www.ruanyifeng.com/blog/2009/08/twos_complement.htm](https://www.ruanyifeng.com/blog/2009/08/twos_complement.html)l\n\nlong 類型的數據後面一定要加上 L，否則會被認為是整型。\n\nchar 類型值使用單引號括起來，String 使用雙引號。\n\nJava 有**自動拆裝箱機制**，裝箱即把基本類型使用其包裝類型包裝起來，拆箱即把包裝類型拆成基本類型。\n\n### 包裝類型及常量池技術\n\n1. Byte、Short、Integer 和 Long 分別默認創建了數值 [-128, 127] 的相應類型的緩存數據。\n2. Character 創建了數值在 [0, 127] 的緩存數據。\n3. Boolean 直接返回 True 和 False。\n4. Float 和 Double 沒有實現常量池技術。\n\n使用常量池技術意味著在緩存範圍內的包裝類型對象是相等的，除非 new 一個對象。使用包裝器的 valueOf 方法默認會先去緩存中取對象，取不到才會 new 一個。\n\n```java\nInteger i1 = 33;\nInteger i2 = 33;\nSystem.out.println(i1 == i2);// 输出 true\nInteger i11 = 333;\nInteger i22 = 333;\nSystem.out.println(i11 == i22);// 输出 false\nDouble i3 = 1.2;\nDouble i4 = 1.2;\nSystem.out.println(i3 == i4);// 输出 false\n```\n\n《阿里巴巴Java開發手冊》規定：\n\n- 【強制】**所有的 POJO 類屬性必須使用包裝數據類型**。\n- 【強制】RPC 方法的返回值和參數必須使用包裝數據類型。\n- 【推薦】所有的局部變量使用基本數據類型。\n\n### BigDecimal\n\n**（1）使用 BigDecimal 進行浮點數比較和精度取捨**\n\n**（2）使用 BigDecimal(String) 或 BigDecimal.valueOf(double) 構造對象**\n\n```java\nfloat a = 1.0f - 0.9f;\nfloat b = 0.9f - 0.8f;\nSystem.out.println(a);\nSystem.out.println(b);\nSystem.out.println(a == b); // false\n\nBigDecimal a = new BigDecimal(\"1.0\");\nBigDecimal b = new BigDecimal(\"0.9\");\nBigDecimal c = new BigDecimal(\"0.8\");\nSystem.out.println(a.subtract(b));\nSystem.out.println(b.subtract(c));\nSystem.out.println(a.subtract(b).equals(b.subtract(c))); // true\n\nBigDecimal a = new BigDecimal(\"1.1252312\");\n// 取小數點後 2 位，四捨五入\nBigDecimal scale = a.setScale(2, RoundingMode.HALF_UP);\nSystem.out.println(scale.toString()); // 1.13\n```\n\n### 對象及其大小\n\n基本類型的封裝類型是對象，Java 中的對象由以下部分組成：\n\n1. 對象頭（object header）：由 mark word 和 class pointer 組成。mark word 存儲了對象的 hashcode、GC信息和鎖信息；class pointer 存儲了指向類對象的指針。32 位的 JVM 上對象頭佔 8 個字節，mark word 和 class pointer 各佔一半。64 位的 JVM 默認開啟了壓縮指針選項（-XX+UseCompressedOops）後上對象頭佔用 12 個字節，mark word 佔用 8 個字節，class pointer 佔用 4 個字節。\n2. 實例數據（instance data）：\n3. 對齊填充（padding）\n\n可使用 `org.openjdk.jol` 工具查看一個對象佔用的字節大小，\n\n- 如下：\n\n    ```java\n    public static void main(String[] args){\n        System.out.println(VM.current().details());\n        System.out.println(ClassLayout.parseClass(Object.class).toPrintable());\n        System.out.println(ClassLayout.parseInstance(Integer.valueOf(1)).toPrintable());\n    }\n    ```\n\n    輸出結果：\n\n    ```bash\n    # Running 64-bit HotSpot VM.\n    # Using compressed oop with 3-bit shift.\n    # Using compressed klass with 3-bit shift.\n    # WARNING | Compressed references base/shifts are guessed by the experiment!\n    # WARNING | Therefore, computed addresses are just guesses, and ARE NOT RELIABLE.\n    # WARNING | Make sure to attach Serviceability Agent to get the reliable addresses.\n    # Objects are 8 bytes aligned.\n    # Field sizes by type: 4, 1, 1, 2, 2, 4, 4, 8, 8 [bytes]\n    # Array element sizes: 4, 1, 1, 2, 2, 4, 4, 8, 8 [bytes]\n\n    java.lang.Object object internals:\n     OFFSET  SIZE   TYPE DESCRIPTION                               VALUE\n          0    12        (object header)                           N/A\n         12     4        (loss due to the next object alignment)\n    Instance size: 16 bytes\n    Space losses: 0 bytes internal + 4 bytes external = 4 bytes total\n\n    java.lang.Integer object internals:\n     OFFSET  SIZE   TYPE DESCRIPTION                               VALUE\n          0     4        (object header)                           01 c9 01 4e (00000001 11001001 00000001 01001110) (1308739841)\n          4     4        (object header)                           3d 00 00 00 (00111101 00000000 00000000 00000000) (61)\n          8     4        (object header)                           48 71 00 00 (01001000 01110001 00000000 00000000) (29000)\n         12     4    int Integer.value                             1\n    Instance size: 16 bytes\n    Space losses: 0 bytes internal + 0 bytes external = 0 bytes total\n    ```\n\n結論：在 64 位開啟指針壓縮的環境下，Object 對象佔用 16 個字節，Integer 對象也佔用 16 個字節。\n\n### String、StringBuffer 和 String Builder 的區別\n\nString 類使用 final 修飾字符數組或字節數組來保存字符串，所以 String 對象是不可變的。\n\n```java\npublic final class String {\n\t// Java 9 之前\n\tprivate final char[] value;\n\t// Java 9 之後\n\tprivate final byte[] value;\n}\n```\n\nStringBuilder  和 StringBuffer 都繼承自 AbstractStringBuilder，AbstractStringBuilder 使用字符數組來保存字符串，但沒有使用 final 關鍵字修飾，所以這兩者是可變的。\n\n下面從不同角度比較下此三者：\n\n1. 線程安全性：String 對象不可變，線程安全；StringBuffer 對方法加了同步鎖，線程安全；StringBuilder 對方法沒有加同步鎖，線程不安全。\n2. 性能：每次對 String 類型進行改變時會生成一個新的 String 對象，然後將指針指向新的 String 對象。StringBuffer 和 StringBuilder 每次對自身進行操作，不生成新對象。同等情況下， StringBuilder 比 StringBuffer 能提升 10%～15% 性能，但要冒線程不安全的風險。\n\n### 注釋\n\n代碼即注釋。先讓標識符見名知意，然後再考慮增加注釋。\n\n### 標識符和關鍵字的區別\n\n標識符是程序、類、變量、方法等取的名字，而關鍵字是具備特殊含義的標識符。常見的關鍵字有：\n\n1. 訪問控制：private、protected、public\n2. 類、方法和變量修飾符：abstract、class、extends、final、implements、interface、native、new、static、strictfp、synchronized、transient、volatile\n3. 程序控制：break、continue、return、do、while、if、else、for、instanceof、switch、case、default\n4. 錯誤處理：try、catch、throw、throws、finally\n5. 包相關：import、package\n6. 基本類型：boolean、byte、char、double、float、int、short、null、true、false\n7. 變量引用：super、this、void\n8. 保留字：goto、const\n\n### 自增自減運算符\n\n符號在前先加減再賦值，符號在後先賦值後加減。假定 `a = 1; b = a++` 最後 a 值爲 2，b 值爲 1。\n\n### == 和 equals 的區別\n\n1. 基本數據類型 == 比較的是值，引用數據類型 == 比較的是內存地址。\n2. equals 是 Object 類的方法，如無重寫該方法，則默認使用 == 比較對象，即比較內存地址；String 類重寫了 equals 方法使其比較得是值。\n3. 整型包裝類都應使用 equals 比較大小。\n4. 浮點數之間的等值判斷，基本數據類型不能用==來比較，包裝數據類型不能用 equals 來判斷。\n- 重寫 equals 方法通常同時需要重寫 hashcode 方法，爲什麼？\n\n    hashcode 是 Object 類的一個本地方法，其實現時將對象的內存地址轉爲一個 int 值，不同的對象的 hashcode 可能相同。 HashSet 集合進行元素重複校驗時先比較 hashcode ，當 hashcode 一樣時再調用 equals，提高了校驗效率。因此，如果只重寫 equals 方法而不重寫 hashcode 方法，會出現 equals 返回 true，而 hashcode 不等的情況，這樣如果要求 HashSet 去重就會失敗。\n\n    HashSet 基於 HashMap 實現，HashMap 內部有一哈希表，裏面使用 hashcode 進行散列存儲。\n\n### 序列化時如果有些字段不想序列化，怎麼辦？\n\n使用 transient 關鍵字修飾不想序列化的字段。\n\n### continue、break 和 return 的區別\n\n1. continue：跳出當前這一次循環，繼續下一次循環。\n2. break：跳出整個循環體，繼續執行循環外的語句。\n3. return：跳出所在的方法，結束方法，可以帶一個返回值。\n\n### 泛型、類型擦除和通配符\n\n**泛型的本質是將類型參數化。**Java 的泛型（generics）是 JDK 5 中引入的新特性，還提供了編譯時類型安全檢測機制來檢測非法的類型。但是 Java 的泛型在編譯期間會將泛型信息擦除，即類型擦除，因此也被稱爲**僞泛型**。下面的例子展示了如何在運行期加入非法類型。\n\n```java\nList<Integer> list = new ArrayList<>();\nlist.add(12);\n//這裡直接添加會報錯\n// list.add(\"a\");\nClass<? extends List> clazz = list.getClass();\nMethod add = clazz.getDeclaredMethod(\"add\", Object.class);\n//但是通過反射添加，是可以的\nadd.invoke(list, \"kl\");\nSystem.out.println(list);\n```\n\n泛型分泛型接口、泛型類和泛型方法。泛型類的具體類型通過實例化時傳入，泛型方法的具體類型通過方法調用時傳入的參數確定。\n\n泛型通配符約定：\n\n1. ？ 表示不確定的 Java 類型，用於泛型方法\n2. T（Type）表示確定的一個 Java 類型\n3. K V（Key Value）分別表示映射中的鍵、值\n4. E（Element）表示集合中的一個元素\n5. <? extends A> 上界通配符，表示 A 類型或其子類\n6. <? super A> 下界通配符，表示 A 類型或其父類\n7. <T extends A> 表示 A 類型或其子類的一種\n8. <T extends A & B> 表示 A 類型且B類型的子類的一種\n9. ~~<T super A>~~ \n\n泛型不是協變的，已知 Apple 繼承自 Fruit 的情況下，Plate<Apple> 的引用並不能傳遞給 Plate<Fruit>，但可以傳遞給 Plate<? extends Fruit>。\n\n元素爲 <? extends E> 的集合，只能取出 E，而不能存入 E 及其子類的對象。因爲只能確定該類型是 E 的子類，但具體是哪個子類未知，因此編譯器不允許插入任何 E 或其子類的對象，取出來的時候只能當 E 類型。\n\n```java\npublic static void main(String[] args) {\n  List<? extends A> list = Arrays.asList(new A(), new B());\n  list.add(new A()); // 報錯\n  list.add(new B()); // 報錯\n  A a = list.get(1);\n  System.out.println(a.toString());\n}\n\nstatic class A {\n}\n\nstatic class B extends A {\n}\n```\n\n元素爲 <? super E> 的集合，只能取出 Object，只能存入 E 及其子類的對象。因爲只能確定該類型是 E 的超類，但不知是哪一個超類，所以插入任何 E 及其子類的對象是沒問題的，但是插入 E 的超類就不行了，取出來的時候也只能是 Object，因爲 Object 是一切類的超類。\n\n```java\npublic static void main(String[] args) {\n  List<? super B> list = new ArrayList<>();\n  list.add(new A()); // 報錯\n  list.add(new B());\n  list.add(new C());\n  Object object = list.get(1);\n  System.out.println(object.toString());\n}\n\nstatic class A {\n}\nstatic class B extends A {\n}\nstatic class C extends B{\n}\n```\n\n### 獲取鍵盤輸入數據的常用方法\n\n```java\n// 方法一：使用 Scanner，可以快速確定輸入數據的類型，按空格符分割數據\nScanner scanner = new Scanner(System.in);\nString s = scanner.nextLine();\nSystem.out.println(s);\n\n// 方法二：使用 BufferedReader 讀取字符序列，高效但需要轉換成其他類型，會拋出 IOException\nBufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));\nString s1 = bufferedReader.readLine();\nSystem.out.println(s1);\n```\n\n## 方法（函數）\n\n### 爲什麼 Java 只有值傳遞？\n\n首先要明瞭程序設計語言中的有關函數參數傳遞的兩種方法：\n\n1. 按值調用（call by value）：方法接收調用者提供的參數的值，方法內無法修改實際參數值。\n2. 按引用調用（call by reference）：方法接收調用者提供的參數的地址，方法內可以修改實際參數值。\n\n**Java 總是採用按值調用，所有參數值都是一個拷貝，無法修改實際參數值。對於引用類型參數，傳遞的是引用的拷貝，引用的拷貝和引用指向同一個對象，即所謂的淺拷貝**。\n\n```java\npublic static void main(String[] args) {\n  String s1 = \"Hello\";\n  String s2 = \"World\";\n  swap(s1, s2);\n  System.out.printf(\"main s1: %s, s2: %s%n\", s1, s2);\n}\n\nstatic void swap(String s1, String s2) {\n  String tmp = s1;\n  s1 = s2;\n  s2 = tmp;\n  System.out.printf(\"swap s1: %s, s2: %s%n\", s1, s2);\n}\n// 運行結果：\n// swap s1: World, s2: Hello\n// main s1: Hello, s2: World\n```\n\n結論：\n\n1. 一個方法不能修改一個基本類型的實參。\n2. 一個方法可以改變一個對象類型的實參狀態。\n3. 一個方法不能讓對象類型的實參引用一個新對象。\n\n### 深拷貝和淺拷貝有什麼不同？\n\n1. 淺拷貝：對基本類型拷貝其值；對引用類型拷貝其引用。\n2. 深拷貝：對基本類型拷貝其值；對引用類型，新建一個對象並拷貝原對象的值。\n\n![](java-basic/Untitled.png)\n\n### 重載和重寫有什麼區別？\n\n1. 重載（overloading）：在一個類中，有多個同名但不同傳入參數的方法，各個重載方法簽名不同。\n2. 重寫（overwrite）：子類對父類允許訪問的方法的重新編寫，方法簽名不變，訪問修飾符只能降低不能提高，拋出的異常只能更小，返回值類型也是。\n\n## Java 面向對象\n\n### 面向對象和面向過程\n\n1. 面向過程：不需要實例化對象，內存和 CPU 開銷小，但不容易維護。\n2. 面向對象：需要實例化對象，內存和 CPU 開銷大，但易維護、易復用、易擴展。\n\nJava 因爲編譯出的字節碼並不能直接在機器上運行，因而效率上會稍慢。但一些面向過程的腳本語言性能也不一定比 Java 好。\n\n### 構造方法\n\n1. 特點：名字跟類名相同，沒有返回值，不可重寫但可重載。\n2. 作用：執行對象的初始化工作，如果類沒有重載任何構造方法，那默認會有不帶參數的構造方法。\n3. 子類初始化時一定會調用父類的構造方法，即使子類不顯式調用，也會默認調用父類的無參構造方法。\n\n### 成員變量和局部變量的區別\n\n1. 成員變量：屬於類；可以被 public、private、static 等修飾符修飾；如用 static 修飾則變量屬於類，否則屬於對象存在於堆內存；生命週期隨對象；自動賦予初始化值。\n2. 局部變量：屬於代碼塊或方法；只能被 final 修飾；存在於棧內存；生命週期隨代碼塊或方法；不會自動賦予初始化值。\n\n### 對象實例和對象引用的區別\n\n1. 對象實例：存在於堆內存，一個對象實例可以被多個引用指向。\n2. 對象引用：存在於棧內存，一個引用指向一個對象實例。\n\n### 面向對象的三大特徵\n\n**（1）封裝**\n\n封裝是將一個對象的狀態信息（即屬性）隱藏在對象內部，一般不允許外界直接訪問，而是提供必要的方法給外界操作。\n\n**（2）繼承**\n\n繼承是使用已有的類創建新類的技術，它提高了代碼復用率和開發效率。關於繼承以下幾點務必明瞭：\n\n1. 子類擁有父類所有的屬性和方法（包括私有的），但父類中的私有屬性和方法子類無法訪問（反射子類也無法訪問），**僅僅擁有**。\n2. 子類可以對父類進行擴展，增加新的屬性和方法。\n3. 子類可以重寫父類的方法。\n\n**（3）多態**\n\n多態，即一個對象可以擁有多種狀態。具體表現在父類的引用可以指向子類的實例。關於多態以下幾點務必知曉：\n\n1. 對象類型和引用類型之間具有繼承/實現關係。\n2. 對象類型不可變，引用類型可變。\n3. 方法具有多態性，屬性不具有。父類的引用可以調用子類對象的方法，但不能訪問其屬性。\n4. 父類的引用不能調用「只有子類存在但在父類不存在」的方法。\n5. 如果子類重寫了父類的方法，真正執行的是子類覆蓋的方法。\n\n### **靜態方法內爲什麼不能調用非靜態成員？**\n\n因爲非靜態成員需要在類實例化成對象後才能被調用，而靜態方法不需要實例化對象就可以被調用。\n\n### 接口和抽象類的區別\n\n1. 方法上：接口的方法默認修飾符是 public，且不能實現（Java 8 開始可以有默認方法和靜態方法，Java 9 開始可以有私有方法和私有靜態方法）；而抽象類可有 public、protected 和 default 修飾符，且可有非抽象的方法。\n2. 變量上：接口只能有 static、final 變量；而抽象類沒有限制。\n3. 繼承上：一個類可以實現多個接口，接口本身也可以擴展多個接口；但一個類只能繼承一個抽象類。\n4. 設計上：接口是對行爲的抽象，是一個行爲規範；抽象類是對類的抽象，是一種模板設計。\n\n## Java 核心技術\n\n### 集合\n\n見 [Java 集合](https://linlshare.github.io/2020/12/02/it/java/java-collection/) \n\n### 反射機制\n\n**（1）什麼是反射**\n\nJava 的反射機制是在運行時能知道任意一個類的所有屬性和方法，能調用任意一個對象的屬性和方法。\n\n**（2）反射的優缺點**\n\n1. 優點：運行時確定類型，動態加載類，提高代碼靈活度。\n2. 缺點：反射性能比直接的 Java 代碼慢，存在安全問題，因爲可以動態操作改變類的屬性。\n\n反射動態加載類的優點即是動態編譯，與之相對的是靜態編譯，靜態編譯是在編譯時就確定了類型。\n\n**（3）反射的應用場景**\n\n反射是框架設計的靈魂。其應用場景有：\n\n1. 模塊化開發；\n2. 動態代理設計模式；\n3. Spring 框架的 IOC（控制反轉）和 AOP（面向切面編程）；\n4. JDBC 連接數據庫等等。\n\n### 異常\n\n**（1）簡介**\n\nJava 的異常歸於同一個 Throwable 類，並分爲兩大類：Error 和 Exception。**Error 通常是 JVM 錯誤，程序無法處理**；**而 Exception 是程序本身可以處理的異常**。Exception 分爲 Checked Exceptions（受檢異常）和 Unchecked Exceptions（不受檢異常）。\n\n![](java-basic/Untitled%201.png)\n\n**Checked Exceptions 又名 Compile Time Exceptions（編譯時異常）**，編譯器可以發現並要求程序處理後才能正常通過編譯，常見的有：\n\n- *IOException*\n- *EOFException*\n- *MalFormedURLException*\n- *IntruptedException*\n\n**Unchecked Exception 又名 Runtime Exceptions（運行時異常）**，編譯器無法檢測出，只有運行時才會發生的異常，常見的有：\n\n- *ArithmaticException*\n- *NullPointerException*\n- *IndexOutOfBoundsException*\n- *ClassCastException*\n- *ArrayIndexOutOfBoundsException*\n- *NumberFormatException*\n\n**（2）Throwable 類常用方法**\n\n1. `getMessage`：返回異常的簡要描述\n2. `toString`：返回異常的詳細信息\n3. `getLocalizedMessage`：返回異常的本地化信息（需要子類覆蓋該方法，否則與 `getMessage` 一樣）\n4. `printStackTrace`：在控制台打印 Throwable 对象封装的异常信息\n\n**（3）try-catch-finally**\n\n1. try 代碼塊：捕獲異常。其後可接零個或多個 catch 代碼塊，如零個則必須接一個 finally 代碼塊。\n2. catch 代碼塊：處理捕獲到的異常。\n3. finally 代碼塊：無論是否捕獲或處理異常，finally 代碼塊最終都會被執行。當在 try 代碼塊或 catch 代碼塊中遇到 return 語句時，finally 代碼塊將在方法返回之前被執行。此時如果 finally 中也有 return 語句的話，其返回值將覆蓋 try 或 catch 代碼塊中的返回值。\n\n```java\npublic static int f(int value) {\n  try {\n      return value * value;\n  } finally {\n      if (value == 2) {\n          return 0;\n      }\n  }\n}\n// f(2) 將返回 0 ，而不是 4.\n```\n\n以下情況，finally 代碼塊不會被執行或只部分執行：\n\n1. finally 代碼塊中有異常，代碼會中異常處中止；\n2. 在 catch 代碼塊或 finally 塊中調用了 `System.exit` 函數退出程序；\n3. 程序所在的線程死亡等等不可預料的系統和硬件問題。\n\n**（4）try-witch-resources**\n\nJava 7 中新增了 ****try-witch-resources 語法糖，適用於實現`java.lang.AutoCloseable` 或者 `java.io.Closeable` 的對象，可以自動關閉申請的資源，然後再執行 catch 或 finally 代碼塊。\n\n```java\n// try-catch-finally\nScanner scanner = null;\ntry {\n    scanner = new Scanner(new File(\"src/main/resources/test.txt\"));\n    while (scanner.hasNext()) {\n        System.out.println(scanner.nextLine());\n    }\n} catch (IOException e) {\n    e.printStackTrace();\n} finally {\n    if (scanner != null) {\n        scanner.close();\n    }\n}\n// try-witch-resources\ntry (Scanner scanner = new Scanner(new File(\"src/main/resources/test.txt\"))) {\n    while (scanner.hasNext()) {\n        System.out.println(scanner.nextLine());\n    }\n} catch (IOException e) {\n    e.printStackTrace();\n}\n```\n\n### 多線程\n\n見 [Java 並發](https://linlshare.github.io/2020/12/02/it/java/java-concurrent/) \n\n### 文件與 I/O 流\n\n**（1）Java 中 I/O 流分爲幾種？**\n\n按不同的分類方法有不同的分類：\n\n1. 按流向分：輸入流、輸出流。\n2. 按操作單元分：字節流、字符流。\n3. 按角色分：節點流、處理流。\n\nJava 中 40 多個 I/O 流相關的類都是從 4 個抽象基類派生：\n\n1. InputStream：字節輸入流\n2. Reader：字符輸入流\n3. OutputStream：字節輸出流\n4. Writer：字符輸出流\n\n![](java-basic/Untitled%202.png)\n\n![](java-basic/Untitled%203.png)\n\n**（2）爲什麼有了字節流還需要字符流？**\n\n不管是文件讀寫還是網絡發送接收，信息的最小存儲單元都是字節，那為什麼 I/O 流操作要分為字節流操作和字符流操作呢？\n\n字符流是由 JVM 將字節流轉換得到的，過程非常耗時，且容易出現亂碼問題。所以 I/O 流提供直接操作字符流的接口，以避免這種轉換。對於文本建議使用字符流，而圖片、音視頻等應使用字節流。\n\n**（3）BIO、NIO、AIO 有什麼區別？**\n\n1. **BIO**（Blocking I/O），同步阻塞 I/O 模式，數據的讀取寫入必須阻塞在一個線程內等待其完成。適用於活動連接數不高（< 單機 1000）的情況，結合線程池一起使用。\n2. **NIO**（Non-blocking I/O 或 New I/O），同步非阻塞的 I/O 模型，Java 1.4 中引入，位於 `java.nio` 包，提供 Channel、Selector 和 Buffer 等抽象，支持基於通道面向緩衝的 I/O 操作方法。適用於高負載、高並發的（網絡）應用。\n3. **AIO**（Asynchronous I/O），異步非阻塞的 I/O 模型，Java 7 中引入。支持基於事件回調機制的操作方法。\n\nNIO 模型：\n\n![](java-basic/Untitled%204.png)\n\n- NIO 服務端代碼\n\n    ```java\n    public class MultiplexerNioServer implements Runnable {\n\n        private Selector selector;\n        private volatile boolean stop = false;\n\n        /**\n         * 初始化多路复用器 绑定监听端口\n         *\n         * @param port\n         */\n        public MultiplexerNioServer(int port) {\n            try {\n                ServerSocketChannel serverSocketChannel = ServerSocketChannel.open();//获得一个serverChannel\n                selector = Selector.open();////创建选择器  获得一个多路复用器\n                serverSocketChannel.configureBlocking(false);//设置为非阻塞模式 如果为 true，则此通道将被置于阻塞模式；如果为 false，则此通道将被置于非阻塞模式\n                serverSocketChannel.socket().bind(new InetSocketAddress(port), 1024);//绑定一个端口和等待队列长度\n                serverSocketChannel.register(selector, SelectionKey.OP_ACCEPT);//把selector注册到channel，关注链接事件\n            } catch (IOException e) {\n                e.printStackTrace();\n                System.exit(1);\n            }\n        }\n\n        public void stop() {\n            this.stop = true; // 优雅停机\n        }\n\n        public void run() {\n            while (!stop) {\n                try {\n                    //无论是否有读写事件发生，selector每隔1s被唤醒一次。如果一定时间内没有事件，就需要做些其他的事情，就可以使用带超时的\n                    int client = selector.select(1000);\n                    System.out.println(\"1:\" + client);\n                    // 阻塞,只有当至少一个注册的事件发生的时候才会继续.\n                    // int client = selector.select(); 不设置超时时间为线程阻塞，但是IO上支持多个文件描述符就绪\n                    if (client == 0) {\n                        continue;\n                    }\n                    System.out.println(\"2:\" + client);\n                    Set<SelectionKey> selectionKeys = selector.selectedKeys();\n                    Iterator<SelectionKey> it = selectionKeys.iterator();\n                    SelectionKey key = null;\n                    while (it.hasNext()) {\n                        key = it.next();\n                        it.remove();\n                        try {\n                            //处理事件\n                            handle(key);\n                        } catch (Exception e) {\n                            if (key != null) {\n                                key.cancel();\n                                if (key.channel() != null) {\n                                    key.channel().close();\n                                }\n                            }\n                        }\n                    }\n                } catch (Throwable e) {\n                    e.printStackTrace();\n                }\n            }\n\n            if (selector != null) {\n                // selector关闭后会自动释放里面管理的资源\n                try {\n                    selector.close();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n\n        public void handle(SelectionKey key) throws IOException {\n            if (key.isValid()) {\n                //连接事件\n                if (key.isAcceptable()) {\n                    ServerSocketChannel ssc = (ServerSocketChannel) key.channel();\n                    // 通过ServerSocketChannel的accept创建SocketChannel实例\n                    // 完成该操作意味着完成TCP三次握手，TCP物理链路正式建立\n                    SocketChannel sc = ssc.accept();//3次握手\n                    sc.configureBlocking(false);\n                    sc.register(selector, SelectionKey.OP_READ);//连接建立后关注读事件\n                }\n\n                //读事件\n                if (key.isReadable()) {\n                    SocketChannel socketChannel = (SocketChannel) key.channel();\n                    ByteBuffer readbuffer = ByteBuffer.allocate(1024);//写 0 1024  1024\n    //                ByteBuffer readbuffer = ByteBuffer.allocateDirect(1024); //申请直接内存，也就是堆外内存\n                    // 读取请求码流，返回读取到的字节数\n                    while (true) {\n                        int readBytes = socketChannel.read(readbuffer);\n                        // 读取到字节，对字节进行编解码\n                        if (readBytes > 0) {\n                            // 将缓冲区当前的limit设置为position=0，用于后续对缓冲区的读取操作\n                            readbuffer.flip();//读写模式反转\n                            // 将缓冲区可读字节数组复制到新建的数组中\n                            byte[] bytes = new byte[readbuffer.remaining()];\n                            readbuffer.get(bytes);\n                            String body = new String(bytes, StandardCharsets.UTF_8);\n                            System.out.println(\"input is:\" + body);\n                            res(socketChannel, body);\n                        } else if (readBytes < 0) {\n                            // 链路已经关闭 释放资源\n                            key.cancel();\n                            socketChannel.close();\n                        } else {\n                            // 没有读到字节忽略\n                            return;\n                        }\n                    }\n\n                }\n\n            }\n        }\n\n        private void res(SocketChannel channel, String response) throws IOException {\n            if (response != null && response.length() > 0) {\n                byte[] bytes = response.getBytes();\n                ByteBuffer writeBuffer = ByteBuffer.allocate(bytes.length);\n                writeBuffer.put(bytes);\n                writeBuffer.flip();\n                channel.write(writeBuffer);\n                System.out.println(\"res end\");\n            }\n        }\n    }\n    ```\n\n- NIO 客戶端代碼\n\n    ```java\n    public class NioClientHandler implements Runnable {\n        private final String host;\n        private final int port;\n        private Selector selector;\n        private SocketChannel socketChannel;\n        private volatile boolean stop;\n\n        public NioClientHandler(String host, int port) {\n            this.host = host;\n            this.port = port;\n            try {\n                // 创建选择器\n                selector = Selector.open();\n                // 打开监听通道\n                socketChannel = SocketChannel.open();\n                // 如果为 true，则此通道将被置于阻塞模式；如果为 false，则此通道将被置于非阻塞模式\n                socketChannel.configureBlocking(false); // 开启非阻塞模式\n            } catch (IOException e) {\n                e.printStackTrace();\n                System.exit(1);\n            }\n        }\n\n        public void run() {\n            try {\n                doConnect();\n            } catch (IOException e) {\n                e.printStackTrace();\n                System.exit(1);\n            }\n            while (!stop) {\n                try {\n                    int wait = selector.select(1000);\n                    if (wait == 0) {\n                        continue;\n                    }\n                    Set<SelectionKey> selectionKeys = selector.selectedKeys();\n                    Iterator<SelectionKey> it = selectionKeys.iterator();\n                    SelectionKey key = null;\n\n                    while (it.hasNext()) {\n                        key = it.next();\n                        it.remove();\n                        try {\n                            handle(key);\n                        } catch (Exception e) {\n                            if (key != null) {\n                                key.cancel();\n                                if (key.channel() != null) {\n                                    key.channel().close();\n                                }\n                            }\n                        }\n                    }\n                } catch (Exception e) {\n                    e.printStackTrace();\n                    System.exit(1);\n                }\n            }\n            if (selector != null) {\n                try {\n                    selector.close();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n\n        private void doConnect() throws IOException {\n            if (socketChannel.connect(new InetSocketAddress(host, port))) {\n                socketChannel.register(selector, SelectionKey.OP_READ);\n                doWrite(socketChannel);\n            } else {\n                socketChannel.register(selector, SelectionKey.OP_CONNECT);\n            }\n        }\n\n        private void handle(SelectionKey key) throws IOException {\n            if (key.isValid()) {\n                SocketChannel sc = (SocketChannel) key.channel();\n                if (key.isConnectable()) {\n                    if (sc.finishConnect()) {\n                        sc.register(selector, SelectionKey.OP_READ);\n                        doWrite(sc);\n                    } else {\n                        System.exit(1);\n                    }\n                }\n                if (key.isReadable()) {\n                    ByteBuffer readBuffer = ByteBuffer.allocate(1024);\n                    int readBytes = sc.read(readBuffer);\n                    if (readBytes > 0) {\n                        readBuffer.flip();\n                        byte[] bytes = new byte[readBuffer.remaining()];\n                        readBuffer.get(bytes);\n                        String body = new String(bytes, StandardCharsets.UTF_8);\n                        System.out.println(\"res\" + body);\n                        this.stop = true;\n                    } else if (readBytes < 0) {\n                        key.cancel();\n                        sc.close();\n                    }\n\n                }\n            }\n        }\n\n        private void doWrite(SocketChannel sc) throws IOException {\n            // 将消息编码为字节数组\n            byte[] request = \"Hello\".getBytes();\n            // 根据数组容量创建ByteBuffer\n            ByteBuffer writeBuffer = ByteBuffer.allocate(request.length);\n            // 将字节数组复制到缓冲区\n            writeBuffer.put(request);\n            // flip读写切换操作\n            writeBuffer.flip();\n            sc.write(writeBuffer);\n            if (!writeBuffer.hasRemaining()) {\n                System.out.println(\"写入完成\");\n            }\n        }\n    }\n    ```\n\n## Java 項目管理和構建\n\n### Maven 项目\n\n**（1）安装**\n\n從 [Maven 官網](https://maven.apache.org/download.cgi)下載 maven 包，解壓並設置環境變量。還可以直接使用 IDEA 的 Maven 插件。\n\n**（2）初始化一個 Maven 項目**\n\n使用以下命令：\n\n```bash\nmvn -B archetype:generate -DgroupId=com.mycompany.app -DartifactId=my-app -DarchetypeArtifactId=maven-archetype-quickstart -DarchetypeVersion=1.4\n```\n\n或者用 IDEA 直接新建一個 Maven 項目，其結構如下：\n\n![](java-basic/20201114_101407.png)\n\n其中 pom.xml 的內容如下：\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>org.example</groupId>\n    <artifactId>testmaven</artifactId>\n    <version>1.0-SNAPSHOT</version>\n\n    <!--  添加以下屬性，解決編譯報錯  -->\n    <properties>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <maven.compiler.encoding>UTF-8</maven.compiler.encoding>\n        <java.version>15</java.version>\n        <maven.compiler.source>15</maven.compiler.source>\n        <maven.compiler.target>15</maven.compiler.target>\n    </properties>\n    <!-- 新增依賴在下方 -->\n    <dependencies>\n        <dependency>\n            <groupId>org.openjdk.jol</groupId>\n            <artifactId>jol-core</artifactId>\n            <version>0.14</version>\n        </dependency>\n    </dependencies>\n</project>\n```\n\n- 為什麼叫 Maven？\n\n    Maven 來源於意第緒語，爲「行家」的意思。最初是為了簡化 Jakarta Turbine 項目中的構建過程而建立。Maven 使用項目對象模型（POM）和一組插件來構件項目。\n\n- POM 又是指什麼？\n\n    POM（project object model）項目對象模型，maven 使用 `pom.xml` 定義了整個項目的構建、報告和文檔。\n\n**（3）編譯測試打包**\n\n```bash\n# 清理 target 中的文件\nmvn clean\n# 編譯 java 文件成 class 文件，置於 target/classes 文件夾中\nmvn compile\n# 進行單元測試\nmvn test\n# 打包成 jar 文件，置於 target 文件夾中\nmvn package\n# 安裝 jar 包到本地存儲庫（${user.home}/.m2/repository）\nmvn install\n# 生成自己的 maven 站點\nmvn site\n```\n\n- SNAPSHOT 是什麼？\n\n    snapshot 簡要的意思，在版本號之後添加 `-SNAPSHOT` 是說明該版本仍處於開發階段，不是最終的發行版本。以 `x.y-SNAPSHOT` 版本為例，發行時會去除 `-SNAPSHOT`  後綴，然後將最新的開發版本升爲`x.(y+1)-SNAPSHOT` 。\n\n- 使用 mvn compile 生成的 jar 包，其內容是怎樣的？\n\n    除了 class 文件外，還有 `META-INF` 文件夾，裏面存放一些清單文件和pom 文件。存放到項目資源文件夾（`main/resources` ）的文件也會被打包到`META-INF` 文件夾中，代碼中可通過`getClass().getResourceAsStream( \"/application.properties\" )` 調用。\n\n    ```bash\n    $ jar tf target/testmaven-1.0-SNAPSHOT.jar \n    META-INF/\n    META-INF/MANIFEST.MF\n    B.class\n    MemoryLayoutTest.class\n    A.class\n    C.class\n    META-INF/maven/\n    META-INF/maven/org.example/\n    META-INF/maven/org.example/testmaven/\n    META-INF/maven/org.example/testmaven/pom.xml\n    META-INF/maven/org.example/testmaven/pom.properties\n    ```\n\n### Gradle 项目\n\n**（1）安裝**\n\n可從 [gradle 官網](https://www.gradle.org/downloads)下載解壓並配置環境變量的方式安裝。Mac 用戶還可以使用 `brew install gradle` 的方式安裝。或者直接使用 IDEA 項目中的 `gradle-wrapper` ，此時對應的 `gradle` 命令變爲 `gradlew`。\n\n**（2）gradle 命令能做什麼？**\n\ngradle 命令能構建項目， 查看項目依賴、子項目和項目配置等等。\n\n```bash\n$ gradle tasks\n\n:tasks\n\n== All tasks runnable from root project\n\n== Build Setup tasks\nsetupBuild - Initializes a new Gradle build. [incubating]\n\n== Help tasks\ndependencies - Displays all dependencies declared in root project 'gs-gradle'.\ndependencyInsight - Displays the insight into a specific dependency in root project 'gs-gradle'.\nhelp - Displays a help message\nprojects - Displays the sub-projects of root project 'gs-gradle'.\nproperties - Displays the properties of root project 'gs-gradle'.\ntasks - Displays the tasks runnable from root project 'gs-gradle'.\n\nTo see all tasks and more detail, run with --all.\n\nBUILD SUCCESSFUL\n\nTotal time: 3.077 secs\n```\n\n**（3）初始化一個 Gradle 項目**\n\n在項目文件夾中新建一個名爲 `build.gradle` 的文件，其內容如下：\n\n```groovy\napply plugin: 'java'\n```\n\n隨後新建一個名爲 `settings.gradle` 的文件，其內容可暫時爲空。\n\n在 IDEA 中打開此項目，隨後 IDEA 會自動配置加入 `gradle-wrapper` ，其過程等價於執行以下命令：\n\n```bash\ngradle wrapper --gradle-version 6.5\n```\n\n**（4）編譯打包**\n\n```bash\n# 編譯項目，會默認在 build/classes 中生成類文件，在 build/libs 中生成 jar 包\ngradle build\n# 或使用 gradle wrapper\n./gradlew build\n\n# 清理生成的文件\ngradle clean\n\n# 生成 jar 文件\ngradle jar\n\n# 運行生成的 jar 文件\ngradle run\n\n# 進行單元測試\ngradle test\n```\n\n**（5）`build.gradle` 中可配置什麼？**\n\n```groovy\n// 配置插件，插件提供語法定義\napply plugin: 'java'\napply plugin: 'application'\n\n// 配置入口類\nmainClassName = 'hello.HelloWorld'\n\n// 配置依賴倉庫\nrepositories {\n    mavenCentral()\n}\n\n// 配置生成的 jar 文件的入口類\njar {\n    manifest {\n        attributes 'Main-Class': mainClassName\n    }\n}\n\n// 配置 JDK 兼容性\nsourceCompatibility = 1.8\ntargetCompatibility = 1.8\n\n// 配置依賴\ndependencies {\n    compile \"joda-time:joda-time:2.2\"\n    testCompile \"junit:junit:4.12\"\n}\n```\n\n如需將所有依賴 jar 打進同一個 jar 包，可使用 [shadow 插件](https://github.com/johnrengelman/shadow)或使用 [spring boot 插件](https://spring.io/quickstart)。","slug":"it/java/java-basic","published":1,"date":"2020-12-01T22:20:10.000Z","updated":"2020-12-02T07:05:32.442Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cki7m45kd000b86w8m68y82vr","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css\"><p>Java 自 95 年誕生至今，已有 25 年的歷史。它是一種半編譯的語言，先將代碼編譯成字節碼，然後在 JVM 中解釋執行。</p>\n<ul>\n<li>它是一種面向對象的語言，封裝、繼承和多態它都有，類可以多實現但不支持多繼承，而接口可以多繼承。</li>\n<li>它支持 8 種基本數據類型，同時還提供了其包裝類型，另外還提供了 BigDecimal 精確處理浮點數、提供了 BigInteger 處理大整數。</li>\n<li>它的方法只有值傳遞，傳遞對象時它是淺拷貝而非深拷貝。類的方法可以被子類重寫，同個類可以有多個同名的重載方法。</li>\n<li>它支持泛型，一種將類型參數化的技術。不過，也有人稱之爲「僞泛型」，因爲類型會在編譯時被擦除。</li>\n<li>它支持反射，一種在運行時操作任意對象的方法和屬性的技術，這在框架應用中很常見。</li>\n<li>它提供了豐富的集合類、迭代器及工具類。</li>\n<li>它支持多線程，一種在程序進程中同時執行多個任務的技術，同時還有豐富的鎖類型，所有對象的頭信息裏都有一個鎖標識。</li>\n<li>它支持異常處理，Exception 分編譯時異常和運行時異常，編譯時異常可以被編譯器檢查到，而運行時異常只能在程序運行時發生。</li>\n<li>它有豐富的 I/O API，派生自 4 個抽象類，InputStream、OutputStream、Reader、Writer，字符流的出現是爲了減少 JVM 進行字符編碼解碼的資源損耗和編解碼錯誤。</li>\n<li>另外，目前有兩大項目管理工具，Maven 和 Gradle。</li>\n</ul>\n<a id=\"more\"></a>\n\n<h2 id=\"Java-入門（基礎概念與常識）\"><a href=\"#Java-入門（基礎概念與常識）\" class=\"headerlink\" title=\"Java 入門（基礎概念與常識）\"></a>Java 入門（基礎概念與常識）</h2><h3 id=\"歷史\"><a href=\"#歷史\" class=\"headerlink\" title=\"歷史\"></a>歷史</h3><p>Java 編程語言本名爲 oak（橡樹），因爲商標被註冊了，所以更名爲 Java，而 Java 是印尼的一座島嶼，盛產咖啡豆，有一種咖啡就是以該島命名，Java 編程語言之名因之。使用十六進制編輯器打開 class 文件時會發現前 32 位顯示爲 <code>CA FE BA BE</code> ，即 cafe babe （咖啡寶貝）。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexdump Test.class</span><br><span class=\"line\"><span class=\"number\">0000000</span> ca fe ba be <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">3</span>b <span class=\"number\">00</span> <span class=\"number\">51</span> <span class=\"number\">0</span>a <span class=\"number\">00</span> <span class=\"number\">02</span> <span class=\"number\">00</span> <span class=\"number\">03</span> <span class=\"number\">07</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>1994 年完成 1.0 版本。</li>\n<li>1995 年首次對外發佈，Java 語言誕生。</li>\n<li>1996 年JDK 1.0 誕生。</li>\n<li>2004 年 SUN 公司發佈 Java SE 5。</li>\n<li>2005 年 SUN 公司發佈 Java SE 6。</li>\n<li>2006 年 SUN 公司推出 OpenJDK 計劃。</li>\n<li>2014年 Oracle 公司發佈 Java SE 8。</li>\n<li>2017年 Oracle公司發佈 Java SE 9。</li>\n<li>2020 年 Oracle 公司發佈 Java SE 15。</li>\n</ul>\n<h3 id=\"安裝與卸載JDK\"><a href=\"#安裝與卸載JDK\" class=\"headerlink\" title=\"安裝與卸載JDK\"></a>安裝與卸載JDK</h3><p>在 Mac 環境下，從 <a href=\"https://www.oracle.com/tw/java/technologies/javase-downloads.html\" target=\"_blank\" rel=\"noopener\">Oracle JavaSE 下載地址</a> 下載並安裝。安裝完成後執行 <code>java -version</code>  可查看安裝的版本，以確認安裝成功。安裝後的Java Home 位置爲 <code>/Library/Java/JavaVirtualMachines/jdk-9.0.1.jdk/Contents/Home</code> 。如需卸載該 jdk，可安裝以下 shell 命令，先移除插件後根據查詢到的 jdk 版本移除整個 jdk 文件夾即可。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo rm -fr /Library/Internet\\ Plug-Ins/JavaAppletPlugin.plugin</span><br><span class=\"line\">sudo rm -fr /Library/PreferencesPanes/JavaControlPanel.prefpane</span><br><span class=\"line\"></span><br><span class=\"line\">ls /Library/Java/JavaVirtualMachines/</span><br><span class=\"line\">输出：jdk-9.0.1.jdk</span><br><span class=\"line\"></span><br><span class=\"line\">sudo rm -rf /Library/Java/JavaVirtualMachines/jdk-9.0.1.jdk</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Hello-World\"><a href=\"#Hello-World\" class=\"headerlink\" title=\"Hello World\"></a>Hello World</h3><p>運行以下代碼，將輸出 <code>Hello World</code>。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> hello;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Hello</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"Hello World\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Java-語言的特點\"><a href=\"#Java-語言的特點\" class=\"headerlink\" title=\"Java 語言的特點\"></a>Java 語言的特點</h3><ol>\n<li>面向對象（封裝，繼承，多態）</li>\n<li>平台無關性（ Java 虛擬機實現平台無關性）</li>\n<li>支持多線程</li>\n<li>編譯與解釋並存</li>\n</ol>\n<p>編譯：生成字節碼(.class文件)，javac 指令。<br>解釋：解釋字節碼成機器碼，java 指令。</p>\n<h3 id=\"JVM、JDK-和-JRE\"><a href=\"#JVM、JDK-和-JRE\" class=\"headerlink\" title=\"JVM、JDK 和  JRE\"></a>JVM、JDK 和  JRE</h3><ol>\n<li>JVM，Java Virtual Machine 的縮寫，即 Java 虛擬機，是運行 Java 字節碼的虛擬機（包含解釋器 java），它包含在 JRE 中。不同的操作系統有特定的 JVM 實現，以便 Java 字節碼可以跨平台。</li>\n<li>JDK，Java Development Kit 的縮寫，即 Java 開發工具集，包含了 JRE 、編譯器（javac）和其他工具（javadoc 和 jdb 等）。</li>\n<li>JRE，Java Runtime 的縮寫，即 Java 運行時，包含了 JVM、必要的類庫、java 命令和其他基礎構件。</li>\n</ol>\n<h3 id=\"Java-與-C-對比\"><a href=\"#Java-與-C-對比\" class=\"headerlink\" title=\"Java 與 C++ 對比\"></a>Java 與 C++ 對比</h3><ol>\n<li>皆支持面向對象編程（封裝、繼承和多態）。</li>\n<li>Java 不提供指針來直接訪問內存；C++ 提供。</li>\n<li>Java 的類不支持多繼承，但接口可以；C++ 的類可以多繼承。</li>\n<li>Java 有內存垃圾自動回收機制（GC），不需要手動釋放無用內存；C++ 沒有。</li>\n<li>Java 字符串和字符數組沒有結束符的概念；C/C++ 中字符串和字符數組最後會有一個額外的字符<code>\\0</code> 來表示結束。</li>\n</ol>\n<h2 id=\"Java-語法\"><a href=\"#Java-語法\" class=\"headerlink\" title=\"Java 語法\"></a>Java 語法</h2><h3 id=\"基本類型及其大小\"><a href=\"#基本類型及其大小\" class=\"headerlink\" title=\"基本類型及其大小\"></a>基本類型及其大小</h3><p>Java 共 8 種數據類型（不包括 void），具體如下表：</p>\n<p><img src=\"/2020/12/02/it/java/java-basic/20201202_24328.png\" alt></p>\n<p>boolean 值的大小取決於 JVM 實現，Java 虛擬機規範（第8版）規定：單個 boolean佔 4 個字節，而 boolean 數組 1 個字節。</p>\n<p>char 值是一個 16 位的 Unicode 字符，最小值是 ‘\\u0000’ ，最大值是 ‘\\uffff’，即 0～65535，每個數字對應一個字符。</p>\n<ul>\n<li><p>代碼</p>\n  <figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">char</span> a = <span class=\"string\">'中'</span>;</span><br><span class=\"line\">System.out.println((<span class=\"keyword\">int</span>)a);</span><br><span class=\"line\"><span class=\"comment\">// 輸出 20013</span></span><br><span class=\"line\">System.out.println(Integer.toHexString(a));</span><br><span class=\"line\"><span class=\"comment\">// 輸出 4e2d</span></span><br><span class=\"line\">System.out.println(<span class=\"string\">'\\u4e2d'</span>);</span><br><span class=\"line\"><span class=\"comment\">// 輸出 中</span></span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<p>byte、short、int、long 類型，採用二進制補碼存儲數據，以便利減法運算。</p>\n<ul>\n<li>二進制補碼<ul>\n<li>過程：正數的補碼是其自身；負數的補碼是除符號位外所有二進制位做反碼後加 1 的結果。</li>\n<li>原理：假定 X、Y 是两个占1个字节的数。X-Y 等价于 X+(-Y) ，而 -Y 可以看作 0-Y，假定是 0 不足以被减，向上借 1 变为 1 0000 0000，而  1 0000 0000 又等價於 1111 1111 + 1，於是 -Y = 1111 1111 - Y + 1，即 Y 的反碼再 + 1。 見 <a href=\"https://www.ruanyifeng.com/blog/2009/08/twos_complement.html\" target=\"_blank\" rel=\"noopener\">https://www.ruanyifeng.com/blog/2009/08/twos_complement.htm</a>l</li>\n</ul>\n</li>\n</ul>\n<p>long 類型的數據後面一定要加上 L，否則會被認為是整型。</p>\n<p>char 類型值使用單引號括起來，String 使用雙引號。</p>\n<p>Java 有<strong>自動拆裝箱機制</strong>，裝箱即把基本類型使用其包裝類型包裝起來，拆箱即把包裝類型拆成基本類型。</p>\n<h3 id=\"包裝類型及常量池技術\"><a href=\"#包裝類型及常量池技術\" class=\"headerlink\" title=\"包裝類型及常量池技術\"></a>包裝類型及常量池技術</h3><ol>\n<li>Byte、Short、Integer 和 Long 分別默認創建了數值 [-128, 127] 的相應類型的緩存數據。</li>\n<li>Character 創建了數值在 [0, 127] 的緩存數據。</li>\n<li>Boolean 直接返回 True 和 False。</li>\n<li>Float 和 Double 沒有實現常量池技術。</li>\n</ol>\n<p>使用常量池技術意味著在緩存範圍內的包裝類型對象是相等的，除非 new 一個對象。使用包裝器的 valueOf 方法默認會先去緩存中取對象，取不到才會 new 一個。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">Integer i1 = <span class=\"number\">33</span>;</span><br><span class=\"line\">Integer i2 = <span class=\"number\">33</span>;</span><br><span class=\"line\">System.out.println(i1 == i2);<span class=\"comment\">// 输出 true</span></span><br><span class=\"line\">Integer i11 = <span class=\"number\">333</span>;</span><br><span class=\"line\">Integer i22 = <span class=\"number\">333</span>;</span><br><span class=\"line\">System.out.println(i11 == i22);<span class=\"comment\">// 输出 false</span></span><br><span class=\"line\">Double i3 = <span class=\"number\">1.2</span>;</span><br><span class=\"line\">Double i4 = <span class=\"number\">1.2</span>;</span><br><span class=\"line\">System.out.println(i3 == i4);<span class=\"comment\">// 输出 false</span></span><br></pre></td></tr></table></figure>\n\n<p>《阿里巴巴Java開發手冊》規定：</p>\n<ul>\n<li>【強制】<strong>所有的 POJO 類屬性必須使用包裝數據類型</strong>。</li>\n<li>【強制】RPC 方法的返回值和參數必須使用包裝數據類型。</li>\n<li>【推薦】所有的局部變量使用基本數據類型。</li>\n</ul>\n<h3 id=\"BigDecimal\"><a href=\"#BigDecimal\" class=\"headerlink\" title=\"BigDecimal\"></a>BigDecimal</h3><p><strong>（1）使用 BigDecimal 進行浮點數比較和精度取捨</strong></p>\n<p><strong>（2）使用 BigDecimal(String) 或 BigDecimal.valueOf(double) 構造對象</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">float</span> a = <span class=\"number\">1.0f</span> - <span class=\"number\">0.9f</span>;</span><br><span class=\"line\"><span class=\"keyword\">float</span> b = <span class=\"number\">0.9f</span> - <span class=\"number\">0.8f</span>;</span><br><span class=\"line\">System.out.println(a);</span><br><span class=\"line\">System.out.println(b);</span><br><span class=\"line\">System.out.println(a == b); <span class=\"comment\">// false</span></span><br><span class=\"line\"></span><br><span class=\"line\">BigDecimal a = <span class=\"keyword\">new</span> BigDecimal(<span class=\"string\">\"1.0\"</span>);</span><br><span class=\"line\">BigDecimal b = <span class=\"keyword\">new</span> BigDecimal(<span class=\"string\">\"0.9\"</span>);</span><br><span class=\"line\">BigDecimal c = <span class=\"keyword\">new</span> BigDecimal(<span class=\"string\">\"0.8\"</span>);</span><br><span class=\"line\">System.out.println(a.subtract(b));</span><br><span class=\"line\">System.out.println(b.subtract(c));</span><br><span class=\"line\">System.out.println(a.subtract(b).equals(b.subtract(c))); <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\">BigDecimal a = <span class=\"keyword\">new</span> BigDecimal(<span class=\"string\">\"1.1252312\"</span>);</span><br><span class=\"line\"><span class=\"comment\">// 取小數點後 2 位，四捨五入</span></span><br><span class=\"line\">BigDecimal scale = a.setScale(<span class=\"number\">2</span>, RoundingMode.HALF_UP);</span><br><span class=\"line\">System.out.println(scale.toString()); <span class=\"comment\">// 1.13</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"對象及其大小\"><a href=\"#對象及其大小\" class=\"headerlink\" title=\"對象及其大小\"></a>對象及其大小</h3><p>基本類型的封裝類型是對象，Java 中的對象由以下部分組成：</p>\n<ol>\n<li>對象頭（object header）：由 mark word 和 class pointer 組成。mark word 存儲了對象的 hashcode、GC信息和鎖信息；class pointer 存儲了指向類對象的指針。32 位的 JVM 上對象頭佔 8 個字節，mark word 和 class pointer 各佔一半。64 位的 JVM 默認開啟了壓縮指針選項（-XX+UseCompressedOops）後上對象頭佔用 12 個字節，mark word 佔用 8 個字節，class pointer 佔用 4 個字節。</li>\n<li>實例數據（instance data）：</li>\n<li>對齊填充（padding）</li>\n</ol>\n<p>可使用 <code>org.openjdk.jol</code> 工具查看一個對象佔用的字節大小，</p>\n<ul>\n<li><p>如下：</p>\n  <figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</span><br><span class=\"line\">    System.out.println(VM.current().details());</span><br><span class=\"line\">    System.out.println(ClassLayout.parseClass(Object.class).toPrintable());</span><br><span class=\"line\">    System.out.println(ClassLayout.parseInstance(Integer.valueOf(<span class=\"number\">1</span>)).toPrintable());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>  輸出結果：</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Running 64-bit HotSpot VM.</span></span><br><span class=\"line\"><span class=\"comment\"># Using compressed oop with 3-bit shift.</span></span><br><span class=\"line\"><span class=\"comment\"># Using compressed klass with 3-bit shift.</span></span><br><span class=\"line\"><span class=\"comment\"># WARNING | Compressed references base/shifts are guessed by the experiment!</span></span><br><span class=\"line\"><span class=\"comment\"># WARNING | Therefore, computed addresses are just guesses, and ARE NOT RELIABLE.</span></span><br><span class=\"line\"><span class=\"comment\"># WARNING | Make sure to attach Serviceability Agent to get the reliable addresses.</span></span><br><span class=\"line\"><span class=\"comment\"># Objects are 8 bytes aligned.</span></span><br><span class=\"line\"><span class=\"comment\"># Field sizes by type: 4, 1, 1, 2, 2, 4, 4, 8, 8 [bytes]</span></span><br><span class=\"line\"><span class=\"comment\"># Array element sizes: 4, 1, 1, 2, 2, 4, 4, 8, 8 [bytes]</span></span><br><span class=\"line\"></span><br><span class=\"line\">java.lang.Object object internals:</span><br><span class=\"line\"> OFFSET  SIZE   TYPE DESCRIPTION                               VALUE</span><br><span class=\"line\">      0    12        (object header)                           N/A</span><br><span class=\"line\">     12     4        (loss due to the next object alignment)</span><br><span class=\"line\">Instance size: 16 bytes</span><br><span class=\"line\">Space losses: 0 bytes internal + 4 bytes external = 4 bytes total</span><br><span class=\"line\"></span><br><span class=\"line\">java.lang.Integer object internals:</span><br><span class=\"line\"> OFFSET  SIZE   TYPE DESCRIPTION                               VALUE</span><br><span class=\"line\">      0     4        (object header)                           01 c9 01 4e (00000001 11001001 00000001 01001110) (1308739841)</span><br><span class=\"line\">      4     4        (object header)                           3d 00 00 00 (00111101 00000000 00000000 00000000) (61)</span><br><span class=\"line\">      8     4        (object header)                           48 71 00 00 (01001000 01110001 00000000 00000000) (29000)</span><br><span class=\"line\">     12     4    int Integer.value                             1</span><br><span class=\"line\">Instance size: 16 bytes</span><br><span class=\"line\">Space losses: 0 bytes internal + 0 bytes external = 0 bytes total</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<p>結論：在 64 位開啟指針壓縮的環境下，Object 對象佔用 16 個字節，Integer 對象也佔用 16 個字節。</p>\n<h3 id=\"String、StringBuffer-和-String-Builder-的區別\"><a href=\"#String、StringBuffer-和-String-Builder-的區別\" class=\"headerlink\" title=\"String、StringBuffer 和 String Builder 的區別\"></a>String、StringBuffer 和 String Builder 的區別</h3><p>String 類使用 final 修飾字符數組或字節數組來保存字符串，所以 String 對象是不可變的。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">String</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// Java 9 之前</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">char</span>[] value;</span><br><span class=\"line\">\t<span class=\"comment\">// Java 9 之後</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">byte</span>[] value;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>StringBuilder  和 StringBuffer 都繼承自 AbstractStringBuilder，AbstractStringBuilder 使用字符數組來保存字符串，但沒有使用 final 關鍵字修飾，所以這兩者是可變的。</p>\n<p>下面從不同角度比較下此三者：</p>\n<ol>\n<li>線程安全性：String 對象不可變，線程安全；StringBuffer 對方法加了同步鎖，線程安全；StringBuilder 對方法沒有加同步鎖，線程不安全。</li>\n<li>性能：每次對 String 類型進行改變時會生成一個新的 String 對象，然後將指針指向新的 String 對象。StringBuffer 和 StringBuilder 每次對自身進行操作，不生成新對象。同等情況下， StringBuilder 比 StringBuffer 能提升 10%～15% 性能，但要冒線程不安全的風險。</li>\n</ol>\n<h3 id=\"注釋\"><a href=\"#注釋\" class=\"headerlink\" title=\"注釋\"></a>注釋</h3><p>代碼即注釋。先讓標識符見名知意，然後再考慮增加注釋。</p>\n<h3 id=\"標識符和關鍵字的區別\"><a href=\"#標識符和關鍵字的區別\" class=\"headerlink\" title=\"標識符和關鍵字的區別\"></a>標識符和關鍵字的區別</h3><p>標識符是程序、類、變量、方法等取的名字，而關鍵字是具備特殊含義的標識符。常見的關鍵字有：</p>\n<ol>\n<li>訪問控制：private、protected、public</li>\n<li>類、方法和變量修飾符：abstract、class、extends、final、implements、interface、native、new、static、strictfp、synchronized、transient、volatile</li>\n<li>程序控制：break、continue、return、do、while、if、else、for、instanceof、switch、case、default</li>\n<li>錯誤處理：try、catch、throw、throws、finally</li>\n<li>包相關：import、package</li>\n<li>基本類型：boolean、byte、char、double、float、int、short、null、true、false</li>\n<li>變量引用：super、this、void</li>\n<li>保留字：goto、const</li>\n</ol>\n<h3 id=\"自增自減運算符\"><a href=\"#自增自減運算符\" class=\"headerlink\" title=\"自增自減運算符\"></a>自增自減運算符</h3><p>符號在前先加減再賦值，符號在後先賦值後加減。假定 <code>a = 1; b = a++</code> 最後 a 值爲 2，b 值爲 1。</p>\n<h3 id=\"和-equals-的區別\"><a href=\"#和-equals-的區別\" class=\"headerlink\" title=\"== 和 equals 的區別\"></a>== 和 equals 的區別</h3><ol>\n<li>基本數據類型 == 比較的是值，引用數據類型 == 比較的是內存地址。</li>\n<li>equals 是 Object 類的方法，如無重寫該方法，則默認使用 == 比較對象，即比較內存地址；String 類重寫了 equals 方法使其比較得是值。</li>\n<li>整型包裝類都應使用 equals 比較大小。</li>\n<li>浮點數之間的等值判斷，基本數據類型不能用==來比較，包裝數據類型不能用 equals 來判斷。</li>\n</ol>\n<ul>\n<li><p>重寫 equals 方法通常同時需要重寫 hashcode 方法，爲什麼？</p>\n<p>  hashcode 是 Object 類的一個本地方法，其實現時將對象的內存地址轉爲一個 int 值，不同的對象的 hashcode 可能相同。 HashSet 集合進行元素重複校驗時先比較 hashcode ，當 hashcode 一樣時再調用 equals，提高了校驗效率。因此，如果只重寫 equals 方法而不重寫 hashcode 方法，會出現 equals 返回 true，而 hashcode 不等的情況，這樣如果要求 HashSet 去重就會失敗。</p>\n<p>  HashSet 基於 HashMap 實現，HashMap 內部有一哈希表，裏面使用 hashcode 進行散列存儲。</p>\n</li>\n</ul>\n<h3 id=\"序列化時如果有些字段不想序列化，怎麼辦？\"><a href=\"#序列化時如果有些字段不想序列化，怎麼辦？\" class=\"headerlink\" title=\"序列化時如果有些字段不想序列化，怎麼辦？\"></a>序列化時如果有些字段不想序列化，怎麼辦？</h3><p>使用 transient 關鍵字修飾不想序列化的字段。</p>\n<h3 id=\"continue、break-和-return-的區別\"><a href=\"#continue、break-和-return-的區別\" class=\"headerlink\" title=\"continue、break 和 return 的區別\"></a>continue、break 和 return 的區別</h3><ol>\n<li>continue：跳出當前這一次循環，繼續下一次循環。</li>\n<li>break：跳出整個循環體，繼續執行循環外的語句。</li>\n<li>return：跳出所在的方法，結束方法，可以帶一個返回值。</li>\n</ol>\n<h3 id=\"泛型、類型擦除和通配符\"><a href=\"#泛型、類型擦除和通配符\" class=\"headerlink\" title=\"泛型、類型擦除和通配符\"></a>泛型、類型擦除和通配符</h3><p><strong>泛型的本質是將類型參數化。</strong>Java 的泛型（generics）是 JDK 5 中引入的新特性，還提供了編譯時類型安全檢測機制來檢測非法的類型。但是 Java 的泛型在編譯期間會將泛型信息擦除，即類型擦除，因此也被稱爲<strong>僞泛型</strong>。下面的例子展示了如何在運行期加入非法類型。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">List&lt;Integer&gt; list = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">list.add(<span class=\"number\">12</span>);</span><br><span class=\"line\"><span class=\"comment\">//這裡直接添加會報錯</span></span><br><span class=\"line\"><span class=\"comment\">// list.add(\"a\");</span></span><br><span class=\"line\">Class&lt;? extends List&gt; clazz = list.getClass();</span><br><span class=\"line\">Method add = clazz.getDeclaredMethod(<span class=\"string\">\"add\"</span>, Object.class);</span><br><span class=\"line\"><span class=\"comment\">//但是通過反射添加，是可以的</span></span><br><span class=\"line\">add.invoke(list, <span class=\"string\">\"kl\"</span>);</span><br><span class=\"line\">System.out.println(list);</span><br></pre></td></tr></table></figure>\n\n<p>泛型分泛型接口、泛型類和泛型方法。泛型類的具體類型通過實例化時傳入，泛型方法的具體類型通過方法調用時傳入的參數確定。</p>\n<p>泛型通配符約定：</p>\n<ol>\n<li>？ 表示不確定的 Java 類型，用於泛型方法</li>\n<li>T（Type）表示確定的一個 Java 類型</li>\n<li>K V（Key Value）分別表示映射中的鍵、值</li>\n<li>E（Element）表示集合中的一個元素</li>\n<li>&lt;? extends A&gt; 上界通配符，表示 A 類型或其子類</li>\n<li>&lt;? super A&gt; 下界通配符，表示 A 類型或其父類</li>\n<li><t extends a> 表示 A 類型或其子類的一種</t></li>\n<li>&lt;T extends A &amp; B&gt; 表示 A 類型且B類型的子類的一種</li>\n<li><del><t super a></t></del> </li>\n</ol>\n<p>泛型不是協變的，已知 Apple 繼承自 Fruit 的情況下，Plate<apple> 的引用並不能傳遞給 Plate<fruit>，但可以傳遞給 Plate&lt;? extends Fruit&gt;。</fruit></apple></p>\n<p>元素爲 &lt;? extends E&gt; 的集合，只能取出 E，而不能存入 E 及其子類的對象。因爲只能確定該類型是 E 的子類，但具體是哪個子類未知，因此編譯器不允許插入任何 E 或其子類的對象，取出來的時候只能當 E 類型。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">  List&lt;? extends A&gt; list = Arrays.asList(<span class=\"keyword\">new</span> A(), <span class=\"keyword\">new</span> B());</span><br><span class=\"line\">  list.add(<span class=\"keyword\">new</span> A()); <span class=\"comment\">// 報錯</span></span><br><span class=\"line\">  list.add(<span class=\"keyword\">new</span> B()); <span class=\"comment\">// 報錯</span></span><br><span class=\"line\">  A a = list.get(<span class=\"number\">1</span>);</span><br><span class=\"line\">  System.out.println(a.toString());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> </span>&#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">B</span> <span class=\"keyword\">extends</span> <span class=\"title\">A</span> </span>&#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>元素爲 &lt;? super E&gt; 的集合，只能取出 Object，只能存入 E 及其子類的對象。因爲只能確定該類型是 E 的超類，但不知是哪一個超類，所以插入任何 E 及其子類的對象是沒問題的，但是插入 E 的超類就不行了，取出來的時候也只能是 Object，因爲 Object 是一切類的超類。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">  List&lt;? <span class=\"keyword\">super</span> B&gt; list = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">  list.add(<span class=\"keyword\">new</span> A()); <span class=\"comment\">// 報錯</span></span><br><span class=\"line\">  list.add(<span class=\"keyword\">new</span> B());</span><br><span class=\"line\">  list.add(<span class=\"keyword\">new</span> C());</span><br><span class=\"line\">  Object object = list.get(<span class=\"number\">1</span>);</span><br><span class=\"line\">  System.out.println(object.toString());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> </span>&#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">B</span> <span class=\"keyword\">extends</span> <span class=\"title\">A</span> </span>&#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">C</span> <span class=\"keyword\">extends</span> <span class=\"title\">B</span></span>&#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"獲取鍵盤輸入數據的常用方法\"><a href=\"#獲取鍵盤輸入數據的常用方法\" class=\"headerlink\" title=\"獲取鍵盤輸入數據的常用方法\"></a>獲取鍵盤輸入數據的常用方法</h3><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 方法一：使用 Scanner，可以快速確定輸入數據的類型，按空格符分割數據</span></span><br><span class=\"line\">Scanner scanner = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">String s = scanner.nextLine();</span><br><span class=\"line\">System.out.println(s);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 方法二：使用 BufferedReader 讀取字符序列，高效但需要轉換成其他類型，會拋出 IOException</span></span><br><span class=\"line\">BufferedReader bufferedReader = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">String s1 = bufferedReader.readLine();</span><br><span class=\"line\">System.out.println(s1);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"方法（函數）\"><a href=\"#方法（函數）\" class=\"headerlink\" title=\"方法（函數）\"></a>方法（函數）</h2><h3 id=\"爲什麼-Java-只有值傳遞？\"><a href=\"#爲什麼-Java-只有值傳遞？\" class=\"headerlink\" title=\"爲什麼 Java 只有值傳遞？\"></a>爲什麼 Java 只有值傳遞？</h3><p>首先要明瞭程序設計語言中的有關函數參數傳遞的兩種方法：</p>\n<ol>\n<li>按值調用（call by value）：方法接收調用者提供的參數的值，方法內無法修改實際參數值。</li>\n<li>按引用調用（call by reference）：方法接收調用者提供的參數的地址，方法內可以修改實際參數值。</li>\n</ol>\n<p><strong>Java 總是採用按值調用，所有參數值都是一個拷貝，無法修改實際參數值。對於引用類型參數，傳遞的是引用的拷貝，引用的拷貝和引用指向同一個對象，即所謂的淺拷貝</strong>。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">  String s1 = <span class=\"string\">\"Hello\"</span>;</span><br><span class=\"line\">  String s2 = <span class=\"string\">\"World\"</span>;</span><br><span class=\"line\">  swap(s1, s2);</span><br><span class=\"line\">  System.out.printf(<span class=\"string\">\"main s1: %s, s2: %s%n\"</span>, s1, s2);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">swap</span><span class=\"params\">(String s1, String s2)</span> </span>&#123;</span><br><span class=\"line\">  String tmp = s1;</span><br><span class=\"line\">  s1 = s2;</span><br><span class=\"line\">  s2 = tmp;</span><br><span class=\"line\">  System.out.printf(<span class=\"string\">\"swap s1: %s, s2: %s%n\"</span>, s1, s2);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 運行結果：</span></span><br><span class=\"line\"><span class=\"comment\">// swap s1: World, s2: Hello</span></span><br><span class=\"line\"><span class=\"comment\">// main s1: Hello, s2: World</span></span><br></pre></td></tr></table></figure>\n\n<p>結論：</p>\n<ol>\n<li>一個方法不能修改一個基本類型的實參。</li>\n<li>一個方法可以改變一個對象類型的實參狀態。</li>\n<li>一個方法不能讓對象類型的實參引用一個新對象。</li>\n</ol>\n<h3 id=\"深拷貝和淺拷貝有什麼不同？\"><a href=\"#深拷貝和淺拷貝有什麼不同？\" class=\"headerlink\" title=\"深拷貝和淺拷貝有什麼不同？\"></a>深拷貝和淺拷貝有什麼不同？</h3><ol>\n<li>淺拷貝：對基本類型拷貝其值；對引用類型拷貝其引用。</li>\n<li>深拷貝：對基本類型拷貝其值；對引用類型，新建一個對象並拷貝原對象的值。</li>\n</ol>\n<p><img src=\"/2020/12/02/it/java/java-basic/Untitled.png\" alt></p>\n<h3 id=\"重載和重寫有什麼區別？\"><a href=\"#重載和重寫有什麼區別？\" class=\"headerlink\" title=\"重載和重寫有什麼區別？\"></a>重載和重寫有什麼區別？</h3><ol>\n<li>重載（overloading）：在一個類中，有多個同名但不同傳入參數的方法，各個重載方法簽名不同。</li>\n<li>重寫（overwrite）：子類對父類允許訪問的方法的重新編寫，方法簽名不變，訪問修飾符只能降低不能提高，拋出的異常只能更小，返回值類型也是。</li>\n</ol>\n<h2 id=\"Java-面向對象\"><a href=\"#Java-面向對象\" class=\"headerlink\" title=\"Java 面向對象\"></a>Java 面向對象</h2><h3 id=\"面向對象和面向過程\"><a href=\"#面向對象和面向過程\" class=\"headerlink\" title=\"面向對象和面向過程\"></a>面向對象和面向過程</h3><ol>\n<li>面向過程：不需要實例化對象，內存和 CPU 開銷小，但不容易維護。</li>\n<li>面向對象：需要實例化對象，內存和 CPU 開銷大，但易維護、易復用、易擴展。</li>\n</ol>\n<p>Java 因爲編譯出的字節碼並不能直接在機器上運行，因而效率上會稍慢。但一些面向過程的腳本語言性能也不一定比 Java 好。</p>\n<h3 id=\"構造方法\"><a href=\"#構造方法\" class=\"headerlink\" title=\"構造方法\"></a>構造方法</h3><ol>\n<li>特點：名字跟類名相同，沒有返回值，不可重寫但可重載。</li>\n<li>作用：執行對象的初始化工作，如果類沒有重載任何構造方法，那默認會有不帶參數的構造方法。</li>\n<li>子類初始化時一定會調用父類的構造方法，即使子類不顯式調用，也會默認調用父類的無參構造方法。</li>\n</ol>\n<h3 id=\"成員變量和局部變量的區別\"><a href=\"#成員變量和局部變量的區別\" class=\"headerlink\" title=\"成員變量和局部變量的區別\"></a>成員變量和局部變量的區別</h3><ol>\n<li>成員變量：屬於類；可以被 public、private、static 等修飾符修飾；如用 static 修飾則變量屬於類，否則屬於對象存在於堆內存；生命週期隨對象；自動賦予初始化值。</li>\n<li>局部變量：屬於代碼塊或方法；只能被 final 修飾；存在於棧內存；生命週期隨代碼塊或方法；不會自動賦予初始化值。</li>\n</ol>\n<h3 id=\"對象實例和對象引用的區別\"><a href=\"#對象實例和對象引用的區別\" class=\"headerlink\" title=\"對象實例和對象引用的區別\"></a>對象實例和對象引用的區別</h3><ol>\n<li>對象實例：存在於堆內存，一個對象實例可以被多個引用指向。</li>\n<li>對象引用：存在於棧內存，一個引用指向一個對象實例。</li>\n</ol>\n<h3 id=\"面向對象的三大特徵\"><a href=\"#面向對象的三大特徵\" class=\"headerlink\" title=\"面向對象的三大特徵\"></a>面向對象的三大特徵</h3><p><strong>（1）封裝</strong></p>\n<p>封裝是將一個對象的狀態信息（即屬性）隱藏在對象內部，一般不允許外界直接訪問，而是提供必要的方法給外界操作。</p>\n<p><strong>（2）繼承</strong></p>\n<p>繼承是使用已有的類創建新類的技術，它提高了代碼復用率和開發效率。關於繼承以下幾點務必明瞭：</p>\n<ol>\n<li>子類擁有父類所有的屬性和方法（包括私有的），但父類中的私有屬性和方法子類無法訪問（反射子類也無法訪問），<strong>僅僅擁有</strong>。</li>\n<li>子類可以對父類進行擴展，增加新的屬性和方法。</li>\n<li>子類可以重寫父類的方法。</li>\n</ol>\n<p><strong>（3）多態</strong></p>\n<p>多態，即一個對象可以擁有多種狀態。具體表現在父類的引用可以指向子類的實例。關於多態以下幾點務必知曉：</p>\n<ol>\n<li>對象類型和引用類型之間具有繼承/實現關係。</li>\n<li>對象類型不可變，引用類型可變。</li>\n<li>方法具有多態性，屬性不具有。父類的引用可以調用子類對象的方法，但不能訪問其屬性。</li>\n<li>父類的引用不能調用「只有子類存在但在父類不存在」的方法。</li>\n<li>如果子類重寫了父類的方法，真正執行的是子類覆蓋的方法。</li>\n</ol>\n<h3 id=\"靜態方法內爲什麼不能調用非靜態成員？\"><a href=\"#靜態方法內爲什麼不能調用非靜態成員？\" class=\"headerlink\" title=\"靜態方法內爲什麼不能調用非靜態成員？\"></a><strong>靜態方法內爲什麼不能調用非靜態成員？</strong></h3><p>因爲非靜態成員需要在類實例化成對象後才能被調用，而靜態方法不需要實例化對象就可以被調用。</p>\n<h3 id=\"接口和抽象類的區別\"><a href=\"#接口和抽象類的區別\" class=\"headerlink\" title=\"接口和抽象類的區別\"></a>接口和抽象類的區別</h3><ol>\n<li>方法上：接口的方法默認修飾符是 public，且不能實現（Java 8 開始可以有默認方法和靜態方法，Java 9 開始可以有私有方法和私有靜態方法）；而抽象類可有 public、protected 和 default 修飾符，且可有非抽象的方法。</li>\n<li>變量上：接口只能有 static、final 變量；而抽象類沒有限制。</li>\n<li>繼承上：一個類可以實現多個接口，接口本身也可以擴展多個接口；但一個類只能繼承一個抽象類。</li>\n<li>設計上：接口是對行爲的抽象，是一個行爲規範；抽象類是對類的抽象，是一種模板設計。</li>\n</ol>\n<h2 id=\"Java-核心技術\"><a href=\"#Java-核心技術\" class=\"headerlink\" title=\"Java 核心技術\"></a>Java 核心技術</h2><h3 id=\"集合\"><a href=\"#集合\" class=\"headerlink\" title=\"集合\"></a>集合</h3><p>見 <a href=\"https://linlshare.github.io/2020/12/02/it/java/java-collection/\" target=\"_blank\" rel=\"noopener\">Java 集合</a> </p>\n<h3 id=\"反射機制\"><a href=\"#反射機制\" class=\"headerlink\" title=\"反射機制\"></a>反射機制</h3><p><strong>（1）什麼是反射</strong></p>\n<p>Java 的反射機制是在運行時能知道任意一個類的所有屬性和方法，能調用任意一個對象的屬性和方法。</p>\n<p><strong>（2）反射的優缺點</strong></p>\n<ol>\n<li>優點：運行時確定類型，動態加載類，提高代碼靈活度。</li>\n<li>缺點：反射性能比直接的 Java 代碼慢，存在安全問題，因爲可以動態操作改變類的屬性。</li>\n</ol>\n<p>反射動態加載類的優點即是動態編譯，與之相對的是靜態編譯，靜態編譯是在編譯時就確定了類型。</p>\n<p><strong>（3）反射的應用場景</strong></p>\n<p>反射是框架設計的靈魂。其應用場景有：</p>\n<ol>\n<li>模塊化開發；</li>\n<li>動態代理設計模式；</li>\n<li>Spring 框架的 IOC（控制反轉）和 AOP（面向切面編程）；</li>\n<li>JDBC 連接數據庫等等。</li>\n</ol>\n<h3 id=\"異常\"><a href=\"#異常\" class=\"headerlink\" title=\"異常\"></a>異常</h3><p><strong>（1）簡介</strong></p>\n<p>Java 的異常歸於同一個 Throwable 類，並分爲兩大類：Error 和 Exception。<strong>Error 通常是 JVM 錯誤，程序無法處理</strong>；<strong>而 Exception 是程序本身可以處理的異常</strong>。Exception 分爲 Checked Exceptions（受檢異常）和 Unchecked Exceptions（不受檢異常）。</p>\n<p><img src=\"/2020/12/02/it/java/java-basic/Untitled%201.png\" alt></p>\n<p><strong>Checked Exceptions 又名 Compile Time Exceptions（編譯時異常）</strong>，編譯器可以發現並要求程序處理後才能正常通過編譯，常見的有：</p>\n<ul>\n<li><em>IOException</em></li>\n<li><em>EOFException</em></li>\n<li><em>MalFormedURLException</em></li>\n<li><em>IntruptedException</em></li>\n</ul>\n<p><strong>Unchecked Exception 又名 Runtime Exceptions（運行時異常）</strong>，編譯器無法檢測出，只有運行時才會發生的異常，常見的有：</p>\n<ul>\n<li><em>ArithmaticException</em></li>\n<li><em>NullPointerException</em></li>\n<li><em>IndexOutOfBoundsException</em></li>\n<li><em>ClassCastException</em></li>\n<li><em>ArrayIndexOutOfBoundsException</em></li>\n<li><em>NumberFormatException</em></li>\n</ul>\n<p><strong>（2）Throwable 類常用方法</strong></p>\n<ol>\n<li><code>getMessage</code>：返回異常的簡要描述</li>\n<li><code>toString</code>：返回異常的詳細信息</li>\n<li><code>getLocalizedMessage</code>：返回異常的本地化信息（需要子類覆蓋該方法，否則與 <code>getMessage</code> 一樣）</li>\n<li><code>printStackTrace</code>：在控制台打印 Throwable 对象封装的异常信息</li>\n</ol>\n<p><strong>（3）try-catch-finally</strong></p>\n<ol>\n<li>try 代碼塊：捕獲異常。其後可接零個或多個 catch 代碼塊，如零個則必須接一個 finally 代碼塊。</li>\n<li>catch 代碼塊：處理捕獲到的異常。</li>\n<li>finally 代碼塊：無論是否捕獲或處理異常，finally 代碼塊最終都會被執行。當在 try 代碼塊或 catch 代碼塊中遇到 return 語句時，finally 代碼塊將在方法返回之前被執行。此時如果 finally 中也有 return 語句的話，其返回值將覆蓋 try 或 catch 代碼塊中的返回值。</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">f</span><span class=\"params\">(<span class=\"keyword\">int</span> value)</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> value * value;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (value == <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// f(2) 將返回 0 ，而不是 4.</span></span><br></pre></td></tr></table></figure>\n\n<p>以下情況，finally 代碼塊不會被執行或只部分執行：</p>\n<ol>\n<li>finally 代碼塊中有異常，代碼會中異常處中止；</li>\n<li>在 catch 代碼塊或 finally 塊中調用了 <code>System.exit</code> 函數退出程序；</li>\n<li>程序所在的線程死亡等等不可預料的系統和硬件問題。</li>\n</ol>\n<p><strong>（4）try-witch-resources</strong></p>\n<p>Java 7 中新增了 ****try-witch-resources 語法糖，適用於實現<code>java.lang.AutoCloseable</code> 或者 <code>java.io.Closeable</code> 的對象，可以自動關閉申請的資源，然後再執行 catch 或 finally 代碼塊。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// try-catch-finally</span></span><br><span class=\"line\">Scanner scanner = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    scanner = <span class=\"keyword\">new</span> Scanner(<span class=\"keyword\">new</span> File(<span class=\"string\">\"src/main/resources/test.txt\"</span>));</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (scanner.hasNext()) &#123;</span><br><span class=\"line\">        System.out.println(scanner.nextLine());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">    e.printStackTrace();</span><br><span class=\"line\">&#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (scanner != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">        scanner.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// try-witch-resources</span></span><br><span class=\"line\"><span class=\"keyword\">try</span> (Scanner scanner = <span class=\"keyword\">new</span> Scanner(<span class=\"keyword\">new</span> File(<span class=\"string\">\"src/main/resources/test.txt\"</span>))) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (scanner.hasNext()) &#123;</span><br><span class=\"line\">        System.out.println(scanner.nextLine());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">    e.printStackTrace();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"多線程\"><a href=\"#多線程\" class=\"headerlink\" title=\"多線程\"></a>多線程</h3><p>見 <a href=\"https://linlshare.github.io/2020/12/02/it/java/java-concurrent/\" target=\"_blank\" rel=\"noopener\">Java 並發</a> </p>\n<h3 id=\"文件與-I-O-流\"><a href=\"#文件與-I-O-流\" class=\"headerlink\" title=\"文件與 I/O 流\"></a>文件與 I/O 流</h3><p><strong>（1）Java 中 I/O 流分爲幾種？</strong></p>\n<p>按不同的分類方法有不同的分類：</p>\n<ol>\n<li>按流向分：輸入流、輸出流。</li>\n<li>按操作單元分：字節流、字符流。</li>\n<li>按角色分：節點流、處理流。</li>\n</ol>\n<p>Java 中 40 多個 I/O 流相關的類都是從 4 個抽象基類派生：</p>\n<ol>\n<li>InputStream：字節輸入流</li>\n<li>Reader：字符輸入流</li>\n<li>OutputStream：字節輸出流</li>\n<li>Writer：字符輸出流</li>\n</ol>\n<p><img src=\"/2020/12/02/it/java/java-basic/Untitled%202.png\" alt></p>\n<p><img src=\"/2020/12/02/it/java/java-basic/Untitled%203.png\" alt></p>\n<p><strong>（2）爲什麼有了字節流還需要字符流？</strong></p>\n<p>不管是文件讀寫還是網絡發送接收，信息的最小存儲單元都是字節，那為什麼 I/O 流操作要分為字節流操作和字符流操作呢？</p>\n<p>字符流是由 JVM 將字節流轉換得到的，過程非常耗時，且容易出現亂碼問題。所以 I/O 流提供直接操作字符流的接口，以避免這種轉換。對於文本建議使用字符流，而圖片、音視頻等應使用字節流。</p>\n<p><strong>（3）BIO、NIO、AIO 有什麼區別？</strong></p>\n<ol>\n<li><strong>BIO</strong>（Blocking I/O），同步阻塞 I/O 模式，數據的讀取寫入必須阻塞在一個線程內等待其完成。適用於活動連接數不高（&lt; 單機 1000）的情況，結合線程池一起使用。</li>\n<li><strong>NIO</strong>（Non-blocking I/O 或 New I/O），同步非阻塞的 I/O 模型，Java 1.4 中引入，位於 <code>java.nio</code> 包，提供 Channel、Selector 和 Buffer 等抽象，支持基於通道面向緩衝的 I/O 操作方法。適用於高負載、高並發的（網絡）應用。</li>\n<li><strong>AIO</strong>（Asynchronous I/O），異步非阻塞的 I/O 模型，Java 7 中引入。支持基於事件回調機制的操作方法。</li>\n</ol>\n<p>NIO 模型：</p>\n<p><img src=\"/2020/12/02/it/java/java-basic/Untitled%204.png\" alt></p>\n<ul>\n<li><p>NIO 服務端代碼</p>\n  <figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MultiplexerNioServer</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Selector selector;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">volatile</span> <span class=\"keyword\">boolean</span> stop = <span class=\"keyword\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 初始化多路复用器 绑定监听端口</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> port</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MultiplexerNioServer</span><span class=\"params\">(<span class=\"keyword\">int</span> port)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            ServerSocketChannel serverSocketChannel = ServerSocketChannel.open();<span class=\"comment\">//获得一个serverChannel</span></span><br><span class=\"line\">            selector = Selector.open();<span class=\"comment\">////创建选择器  获得一个多路复用器</span></span><br><span class=\"line\">            serverSocketChannel.configureBlocking(<span class=\"keyword\">false</span>);<span class=\"comment\">//设置为非阻塞模式 如果为 true，则此通道将被置于阻塞模式；如果为 false，则此通道将被置于非阻塞模式</span></span><br><span class=\"line\">            serverSocketChannel.socket().bind(<span class=\"keyword\">new</span> InetSocketAddress(port), <span class=\"number\">1024</span>);<span class=\"comment\">//绑定一个端口和等待队列长度</span></span><br><span class=\"line\">            serverSocketChannel.register(selector, SelectionKey.OP_ACCEPT);<span class=\"comment\">//把selector注册到channel，关注链接事件</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">            System.exit(<span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">stop</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.stop = <span class=\"keyword\">true</span>; <span class=\"comment\">// 优雅停机</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (!stop) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                <span class=\"comment\">//无论是否有读写事件发生，selector每隔1s被唤醒一次。如果一定时间内没有事件，就需要做些其他的事情，就可以使用带超时的</span></span><br><span class=\"line\">                <span class=\"keyword\">int</span> client = selector.select(<span class=\"number\">1000</span>);</span><br><span class=\"line\">                System.out.println(<span class=\"string\">\"1:\"</span> + client);</span><br><span class=\"line\">                <span class=\"comment\">// 阻塞,只有当至少一个注册的事件发生的时候才会继续.</span></span><br><span class=\"line\">                <span class=\"comment\">// int client = selector.select(); 不设置超时时间为线程阻塞，但是IO上支持多个文件描述符就绪</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (client == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">\"2:\"</span> + client);</span><br><span class=\"line\">                Set&lt;SelectionKey&gt; selectionKeys = selector.selectedKeys();</span><br><span class=\"line\">                Iterator&lt;SelectionKey&gt; it = selectionKeys.iterator();</span><br><span class=\"line\">                SelectionKey key = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">                <span class=\"keyword\">while</span> (it.hasNext()) &#123;</span><br><span class=\"line\">                    key = it.next();</span><br><span class=\"line\">                    it.remove();</span><br><span class=\"line\">                    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                        <span class=\"comment\">//处理事件</span></span><br><span class=\"line\">                        handle(key);</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (key != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                            key.cancel();</span><br><span class=\"line\">                            <span class=\"keyword\">if</span> (key.channel() != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                                key.channel().close();</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (Throwable e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (selector != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// selector关闭后会自动释放里面管理的资源</span></span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                selector.close();</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">handle</span><span class=\"params\">(SelectionKey key)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (key.isValid()) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//连接事件</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (key.isAcceptable()) &#123;</span><br><span class=\"line\">                ServerSocketChannel ssc = (ServerSocketChannel) key.channel();</span><br><span class=\"line\">                <span class=\"comment\">// 通过ServerSocketChannel的accept创建SocketChannel实例</span></span><br><span class=\"line\">                <span class=\"comment\">// 完成该操作意味着完成TCP三次握手，TCP物理链路正式建立</span></span><br><span class=\"line\">                SocketChannel sc = ssc.accept();<span class=\"comment\">//3次握手</span></span><br><span class=\"line\">                sc.configureBlocking(<span class=\"keyword\">false</span>);</span><br><span class=\"line\">                sc.register(selector, SelectionKey.OP_READ);<span class=\"comment\">//连接建立后关注读事件</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//读事件</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (key.isReadable()) &#123;</span><br><span class=\"line\">                SocketChannel socketChannel = (SocketChannel) key.channel();</span><br><span class=\"line\">                ByteBuffer readbuffer = ByteBuffer.allocate(<span class=\"number\">1024</span>);<span class=\"comment\">//写 0 1024  1024</span></span><br><span class=\"line\"><span class=\"comment\">//                ByteBuffer readbuffer = ByteBuffer.allocateDirect(1024); //申请直接内存，也就是堆外内存</span></span><br><span class=\"line\">                <span class=\"comment\">// 读取请求码流，返回读取到的字节数</span></span><br><span class=\"line\">                <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">int</span> readBytes = socketChannel.read(readbuffer);</span><br><span class=\"line\">                    <span class=\"comment\">// 读取到字节，对字节进行编解码</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (readBytes &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                        <span class=\"comment\">// 将缓冲区当前的limit设置为position=0，用于后续对缓冲区的读取操作</span></span><br><span class=\"line\">                        readbuffer.flip();<span class=\"comment\">//读写模式反转</span></span><br><span class=\"line\">                        <span class=\"comment\">// 将缓冲区可读字节数组复制到新建的数组中</span></span><br><span class=\"line\">                        <span class=\"keyword\">byte</span>[] bytes = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[readbuffer.remaining()];</span><br><span class=\"line\">                        readbuffer.get(bytes);</span><br><span class=\"line\">                        String body = <span class=\"keyword\">new</span> String(bytes, StandardCharsets.UTF_8);</span><br><span class=\"line\">                        System.out.println(<span class=\"string\">\"input is:\"</span> + body);</span><br><span class=\"line\">                        res(socketChannel, body);</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (readBytes &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                        <span class=\"comment\">// 链路已经关闭 释放资源</span></span><br><span class=\"line\">                        key.cancel();</span><br><span class=\"line\">                        socketChannel.close();</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"comment\">// 没有读到字节忽略</span></span><br><span class=\"line\">                        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">res</span><span class=\"params\">(SocketChannel channel, String response)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (response != <span class=\"keyword\">null</span> &amp;&amp; response.length() &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">byte</span>[] bytes = response.getBytes();</span><br><span class=\"line\">            ByteBuffer writeBuffer = ByteBuffer.allocate(bytes.length);</span><br><span class=\"line\">            writeBuffer.put(bytes);</span><br><span class=\"line\">            writeBuffer.flip();</span><br><span class=\"line\">            channel.write(writeBuffer);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"res end\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>NIO 客戶端代碼</p>\n  <figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">NioClientHandler</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> String host;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> port;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Selector selector;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> SocketChannel socketChannel;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">volatile</span> <span class=\"keyword\">boolean</span> stop;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">NioClientHandler</span><span class=\"params\">(String host, <span class=\"keyword\">int</span> port)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.host = host;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.port = port;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 创建选择器</span></span><br><span class=\"line\">            selector = Selector.open();</span><br><span class=\"line\">            <span class=\"comment\">// 打开监听通道</span></span><br><span class=\"line\">            socketChannel = SocketChannel.open();</span><br><span class=\"line\">            <span class=\"comment\">// 如果为 true，则此通道将被置于阻塞模式；如果为 false，则此通道将被置于非阻塞模式</span></span><br><span class=\"line\">            socketChannel.configureBlocking(<span class=\"keyword\">false</span>); <span class=\"comment\">// 开启非阻塞模式</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">            System.exit(<span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            doConnect();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">            System.exit(<span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (!stop) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> wait = selector.select(<span class=\"number\">1000</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (wait == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                Set&lt;SelectionKey&gt; selectionKeys = selector.selectedKeys();</span><br><span class=\"line\">                Iterator&lt;SelectionKey&gt; it = selectionKeys.iterator();</span><br><span class=\"line\">                SelectionKey key = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">while</span> (it.hasNext()) &#123;</span><br><span class=\"line\">                    key = it.next();</span><br><span class=\"line\">                    it.remove();</span><br><span class=\"line\">                    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                        handle(key);</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (key != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                            key.cancel();</span><br><span class=\"line\">                            <span class=\"keyword\">if</span> (key.channel() != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                                key.channel().close();</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">                System.exit(<span class=\"number\">1</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (selector != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                selector.close();</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">doConnect</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (socketChannel.connect(<span class=\"keyword\">new</span> InetSocketAddress(host, port))) &#123;</span><br><span class=\"line\">            socketChannel.register(selector, SelectionKey.OP_READ);</span><br><span class=\"line\">            doWrite(socketChannel);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            socketChannel.register(selector, SelectionKey.OP_CONNECT);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">handle</span><span class=\"params\">(SelectionKey key)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (key.isValid()) &#123;</span><br><span class=\"line\">            SocketChannel sc = (SocketChannel) key.channel();</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (key.isConnectable()) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (sc.finishConnect()) &#123;</span><br><span class=\"line\">                    sc.register(selector, SelectionKey.OP_READ);</span><br><span class=\"line\">                    doWrite(sc);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    System.exit(<span class=\"number\">1</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (key.isReadable()) &#123;</span><br><span class=\"line\">                ByteBuffer readBuffer = ByteBuffer.allocate(<span class=\"number\">1024</span>);</span><br><span class=\"line\">                <span class=\"keyword\">int</span> readBytes = sc.read(readBuffer);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (readBytes &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                    readBuffer.flip();</span><br><span class=\"line\">                    <span class=\"keyword\">byte</span>[] bytes = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[readBuffer.remaining()];</span><br><span class=\"line\">                    readBuffer.get(bytes);</span><br><span class=\"line\">                    String body = <span class=\"keyword\">new</span> String(bytes, StandardCharsets.UTF_8);</span><br><span class=\"line\">                    System.out.println(<span class=\"string\">\"res\"</span> + body);</span><br><span class=\"line\">                    <span class=\"keyword\">this</span>.stop = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (readBytes &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                    key.cancel();</span><br><span class=\"line\">                    sc.close();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">doWrite</span><span class=\"params\">(SocketChannel sc)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 将消息编码为字节数组</span></span><br><span class=\"line\">        <span class=\"keyword\">byte</span>[] request = <span class=\"string\">\"Hello\"</span>.getBytes();</span><br><span class=\"line\">        <span class=\"comment\">// 根据数组容量创建ByteBuffer</span></span><br><span class=\"line\">        ByteBuffer writeBuffer = ByteBuffer.allocate(request.length);</span><br><span class=\"line\">        <span class=\"comment\">// 将字节数组复制到缓冲区</span></span><br><span class=\"line\">        writeBuffer.put(request);</span><br><span class=\"line\">        <span class=\"comment\">// flip读写切换操作</span></span><br><span class=\"line\">        writeBuffer.flip();</span><br><span class=\"line\">        sc.write(writeBuffer);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!writeBuffer.hasRemaining()) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"写入完成\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"Java-項目管理和構建\"><a href=\"#Java-項目管理和構建\" class=\"headerlink\" title=\"Java 項目管理和構建\"></a>Java 項目管理和構建</h2><h3 id=\"Maven-项目\"><a href=\"#Maven-项目\" class=\"headerlink\" title=\"Maven 项目\"></a>Maven 项目</h3><p><strong>（1）安装</strong></p>\n<p>從 <a href=\"https://maven.apache.org/download.cgi\" target=\"_blank\" rel=\"noopener\">Maven 官網</a>下載 maven 包，解壓並設置環境變量。還可以直接使用 IDEA 的 Maven 插件。</p>\n<p><strong>（2）初始化一個 Maven 項目</strong></p>\n<p>使用以下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">mvn -B archetype:generate -DgroupId=com.mycompany.app -DartifactId=my-app -DarchetypeArtifactId=maven-archetype-quickstart -DarchetypeVersion=1.4</span><br></pre></td></tr></table></figure>\n\n<p>或者用 IDEA 直接新建一個 Maven 項目，其結構如下：</p>\n<p><img src=\"/2020/12/02/it/java/java-basic/20201114_101407.png\" alt></p>\n<p>其中 pom.xml 的內容如下：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">project</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://maven.apache.org/POM/4.0.0\"</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">modelVersion</span>&gt;</span>4.0.0<span class=\"tag\">&lt;/<span class=\"name\">modelVersion</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.example<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>testmaven<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--  添加以下屬性，解決編譯報錯  --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class=\"tag\">&lt;/<span class=\"name\">project.build.sourceEncoding</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">maven.compiler.encoding</span>&gt;</span>UTF-8<span class=\"tag\">&lt;/<span class=\"name\">maven.compiler.encoding</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">java.version</span>&gt;</span>15<span class=\"tag\">&lt;/<span class=\"name\">java.version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">maven.compiler.source</span>&gt;</span>15<span class=\"tag\">&lt;/<span class=\"name\">maven.compiler.source</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">maven.compiler.target</span>&gt;</span>15<span class=\"tag\">&lt;/<span class=\"name\">maven.compiler.target</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 新增依賴在下方 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.openjdk.jol<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jol-core<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.14<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">project</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>為什麼叫 Maven？</p>\n<p>  Maven 來源於意第緒語，爲「行家」的意思。最初是為了簡化 Jakarta Turbine 項目中的構建過程而建立。Maven 使用項目對象模型（POM）和一組插件來構件項目。</p>\n</li>\n<li><p>POM 又是指什麼？</p>\n<p>  POM（project object model）項目對象模型，maven 使用 <code>pom.xml</code> 定義了整個項目的構建、報告和文檔。</p>\n</li>\n</ul>\n<p><strong>（3）編譯測試打包</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 清理 target 中的文件</span></span><br><span class=\"line\">mvn clean</span><br><span class=\"line\"><span class=\"comment\"># 編譯 java 文件成 class 文件，置於 target/classes 文件夾中</span></span><br><span class=\"line\">mvn compile</span><br><span class=\"line\"><span class=\"comment\"># 進行單元測試</span></span><br><span class=\"line\">mvn <span class=\"built_in\">test</span></span><br><span class=\"line\"><span class=\"comment\"># 打包成 jar 文件，置於 target 文件夾中</span></span><br><span class=\"line\">mvn package</span><br><span class=\"line\"><span class=\"comment\"># 安裝 jar 包到本地存儲庫（$&#123;user.home&#125;/.m2/repository）</span></span><br><span class=\"line\">mvn install</span><br><span class=\"line\"><span class=\"comment\"># 生成自己的 maven 站點</span></span><br><span class=\"line\">mvn site</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>SNAPSHOT 是什麼？</p>\n<p>  snapshot 簡要的意思，在版本號之後添加 <code>-SNAPSHOT</code> 是說明該版本仍處於開發階段，不是最終的發行版本。以 <code>x.y-SNAPSHOT</code> 版本為例，發行時會去除 <code>-SNAPSHOT</code>  後綴，然後將最新的開發版本升爲<code>x.(y+1)-SNAPSHOT</code> 。</p>\n</li>\n<li><p>使用 mvn compile 生成的 jar 包，其內容是怎樣的？</p>\n<p>  除了 class 文件外，還有 <code>META-INF</code> 文件夾，裏面存放一些清單文件和pom 文件。存放到項目資源文件夾（<code>main/resources</code> ）的文件也會被打包到<code>META-INF</code> 文件夾中，代碼中可通過<code>getClass().getResourceAsStream( &quot;/application.properties&quot; )</code> 調用。</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ jar tf target/testmaven-1.0-SNAPSHOT.jar </span><br><span class=\"line\">META-INF/</span><br><span class=\"line\">META-INF/MANIFEST.MF</span><br><span class=\"line\">B.class</span><br><span class=\"line\">MemoryLayoutTest.class</span><br><span class=\"line\">A.class</span><br><span class=\"line\">C.class</span><br><span class=\"line\">META-INF/maven/</span><br><span class=\"line\">META-INF/maven/org.example/</span><br><span class=\"line\">META-INF/maven/org.example/testmaven/</span><br><span class=\"line\">META-INF/maven/org.example/testmaven/pom.xml</span><br><span class=\"line\">META-INF/maven/org.example/testmaven/pom.properties</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h3 id=\"Gradle-项目\"><a href=\"#Gradle-项目\" class=\"headerlink\" title=\"Gradle 项目\"></a>Gradle 项目</h3><p><strong>（1）安裝</strong></p>\n<p>可從 <a href=\"https://www.gradle.org/downloads\" target=\"_blank\" rel=\"noopener\">gradle 官網</a>下載解壓並配置環境變量的方式安裝。Mac 用戶還可以使用 <code>brew install gradle</code> 的方式安裝。或者直接使用 IDEA 項目中的 <code>gradle-wrapper</code> ，此時對應的 <code>gradle</code> 命令變爲 <code>gradlew</code>。</p>\n<p><strong>（2）gradle 命令能做什麼？</strong></p>\n<p>gradle 命令能構建項目， 查看項目依賴、子項目和項目配置等等。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ gradle tasks</span><br><span class=\"line\"></span><br><span class=\"line\">:tasks</span><br><span class=\"line\"></span><br><span class=\"line\">== All tasks runnable from root project</span><br><span class=\"line\"></span><br><span class=\"line\">== Build Setup tasks</span><br><span class=\"line\">setupBuild - Initializes a new Gradle build. [incubating]</span><br><span class=\"line\"></span><br><span class=\"line\">== Help tasks</span><br><span class=\"line\">dependencies - Displays all dependencies declared <span class=\"keyword\">in</span> root project <span class=\"string\">'gs-gradle'</span>.</span><br><span class=\"line\">dependencyInsight - Displays the insight into a specific dependency <span class=\"keyword\">in</span> root project <span class=\"string\">'gs-gradle'</span>.</span><br><span class=\"line\"><span class=\"built_in\">help</span> - Displays a <span class=\"built_in\">help</span> message</span><br><span class=\"line\">projects - Displays the sub-projects of root project <span class=\"string\">'gs-gradle'</span>.</span><br><span class=\"line\">properties - Displays the properties of root project <span class=\"string\">'gs-gradle'</span>.</span><br><span class=\"line\">tasks - Displays the tasks runnable from root project <span class=\"string\">'gs-gradle'</span>.</span><br><span class=\"line\"></span><br><span class=\"line\">To see all tasks and more detail, run with --all.</span><br><span class=\"line\"></span><br><span class=\"line\">BUILD SUCCESSFUL</span><br><span class=\"line\"></span><br><span class=\"line\">Total time: 3.077 secs</span><br></pre></td></tr></table></figure>\n\n<p><strong>（3）初始化一個 Gradle 項目</strong></p>\n<p>在項目文件夾中新建一個名爲 <code>build.gradle</code> 的文件，其內容如下：</p>\n<figure class=\"highlight groovy\"><table><tr><td class=\"code\"><pre><span class=\"line\">apply <span class=\"string\">plugin:</span> <span class=\"string\">'java'</span></span><br></pre></td></tr></table></figure>\n\n<p>隨後新建一個名爲 <code>settings.gradle</code> 的文件，其內容可暫時爲空。</p>\n<p>在 IDEA 中打開此項目，隨後 IDEA 會自動配置加入 <code>gradle-wrapper</code> ，其過程等價於執行以下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">gradle wrapper --gradle-version 6.5</span><br></pre></td></tr></table></figure>\n\n<p><strong>（4）編譯打包</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 編譯項目，會默認在 build/classes 中生成類文件，在 build/libs 中生成 jar 包</span></span><br><span class=\"line\">gradle build</span><br><span class=\"line\"><span class=\"comment\"># 或使用 gradle wrapper</span></span><br><span class=\"line\">./gradlew build</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 清理生成的文件</span></span><br><span class=\"line\">gradle clean</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 生成 jar 文件</span></span><br><span class=\"line\">gradle jar</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 運行生成的 jar 文件</span></span><br><span class=\"line\">gradle run</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 進行單元測試</span></span><br><span class=\"line\">gradle <span class=\"built_in\">test</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>（5）<code>build.gradle</code> 中可配置什麼？</strong></p>\n<figure class=\"highlight groovy\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 配置插件，插件提供語法定義</span></span><br><span class=\"line\">apply <span class=\"string\">plugin:</span> <span class=\"string\">'java'</span></span><br><span class=\"line\">apply <span class=\"string\">plugin:</span> <span class=\"string\">'application'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 配置入口類</span></span><br><span class=\"line\">mainClassName = <span class=\"string\">'hello.HelloWorld'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 配置依賴倉庫</span></span><br><span class=\"line\">repositories &#123;</span><br><span class=\"line\">    mavenCentral()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 配置生成的 jar 文件的入口類</span></span><br><span class=\"line\">jar &#123;</span><br><span class=\"line\">    manifest &#123;</span><br><span class=\"line\">        attributes <span class=\"string\">'Main-Class'</span>: mainClassName</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 配置 JDK 兼容性</span></span><br><span class=\"line\">sourceCompatibility = <span class=\"number\">1.8</span></span><br><span class=\"line\">targetCompatibility = <span class=\"number\">1.8</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 配置依賴</span></span><br><span class=\"line\">dependencies &#123;</span><br><span class=\"line\">    compile <span class=\"string\">\"joda-time:joda-time:2.2\"</span></span><br><span class=\"line\">    testCompile <span class=\"string\">\"junit:junit:4.12\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>如需將所有依賴 jar 打進同一個 jar 包，可使用 <a href=\"https://github.com/johnrengelman/shadow\" target=\"_blank\" rel=\"noopener\">shadow 插件</a>或使用 <a href=\"https://spring.io/quickstart\" target=\"_blank\" rel=\"noopener\">spring boot 插件</a>。</p>\n","site":{"data":{}},"excerpt":"<p>Java 自 95 年誕生至今，已有 25 年的歷史。它是一種半編譯的語言，先將代碼編譯成字節碼，然後在 JVM 中解釋執行。</p>\n<ul>\n<li>它是一種面向對象的語言，封裝、繼承和多態它都有，類可以多實現但不支持多繼承，而接口可以多繼承。</li>\n<li>它支持 8 種基本數據類型，同時還提供了其包裝類型，另外還提供了 BigDecimal 精確處理浮點數、提供了 BigInteger 處理大整數。</li>\n<li>它的方法只有值傳遞，傳遞對象時它是淺拷貝而非深拷貝。類的方法可以被子類重寫，同個類可以有多個同名的重載方法。</li>\n<li>它支持泛型，一種將類型參數化的技術。不過，也有人稱之爲「僞泛型」，因爲類型會在編譯時被擦除。</li>\n<li>它支持反射，一種在運行時操作任意對象的方法和屬性的技術，這在框架應用中很常見。</li>\n<li>它提供了豐富的集合類、迭代器及工具類。</li>\n<li>它支持多線程，一種在程序進程中同時執行多個任務的技術，同時還有豐富的鎖類型，所有對象的頭信息裏都有一個鎖標識。</li>\n<li>它支持異常處理，Exception 分編譯時異常和運行時異常，編譯時異常可以被編譯器檢查到，而運行時異常只能在程序運行時發生。</li>\n<li>它有豐富的 I/O API，派生自 4 個抽象類，InputStream、OutputStream、Reader、Writer，字符流的出現是爲了減少 JVM 進行字符編碼解碼的資源損耗和編解碼錯誤。</li>\n<li>另外，目前有兩大項目管理工具，Maven 和 Gradle。</li>\n</ul>","more":"<h2 id=\"Java-入門（基礎概念與常識）\"><a href=\"#Java-入門（基礎概念與常識）\" class=\"headerlink\" title=\"Java 入門（基礎概念與常識）\"></a>Java 入門（基礎概念與常識）</h2><h3 id=\"歷史\"><a href=\"#歷史\" class=\"headerlink\" title=\"歷史\"></a>歷史</h3><p>Java 編程語言本名爲 oak（橡樹），因爲商標被註冊了，所以更名爲 Java，而 Java 是印尼的一座島嶼，盛產咖啡豆，有一種咖啡就是以該島命名，Java 編程語言之名因之。使用十六進制編輯器打開 class 文件時會發現前 32 位顯示爲 <code>CA FE BA BE</code> ，即 cafe babe （咖啡寶貝）。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexdump Test.class</span><br><span class=\"line\"><span class=\"number\">0000000</span> ca fe ba be <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">3</span>b <span class=\"number\">00</span> <span class=\"number\">51</span> <span class=\"number\">0</span>a <span class=\"number\">00</span> <span class=\"number\">02</span> <span class=\"number\">00</span> <span class=\"number\">03</span> <span class=\"number\">07</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>1994 年完成 1.0 版本。</li>\n<li>1995 年首次對外發佈，Java 語言誕生。</li>\n<li>1996 年JDK 1.0 誕生。</li>\n<li>2004 年 SUN 公司發佈 Java SE 5。</li>\n<li>2005 年 SUN 公司發佈 Java SE 6。</li>\n<li>2006 年 SUN 公司推出 OpenJDK 計劃。</li>\n<li>2014年 Oracle 公司發佈 Java SE 8。</li>\n<li>2017年 Oracle公司發佈 Java SE 9。</li>\n<li>2020 年 Oracle 公司發佈 Java SE 15。</li>\n</ul>\n<h3 id=\"安裝與卸載JDK\"><a href=\"#安裝與卸載JDK\" class=\"headerlink\" title=\"安裝與卸載JDK\"></a>安裝與卸載JDK</h3><p>在 Mac 環境下，從 <a href=\"https://www.oracle.com/tw/java/technologies/javase-downloads.html\" target=\"_blank\" rel=\"noopener\">Oracle JavaSE 下載地址</a> 下載並安裝。安裝完成後執行 <code>java -version</code>  可查看安裝的版本，以確認安裝成功。安裝後的Java Home 位置爲 <code>/Library/Java/JavaVirtualMachines/jdk-9.0.1.jdk/Contents/Home</code> 。如需卸載該 jdk，可安裝以下 shell 命令，先移除插件後根據查詢到的 jdk 版本移除整個 jdk 文件夾即可。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo rm -fr /Library/Internet\\ Plug-Ins/JavaAppletPlugin.plugin</span><br><span class=\"line\">sudo rm -fr /Library/PreferencesPanes/JavaControlPanel.prefpane</span><br><span class=\"line\"></span><br><span class=\"line\">ls /Library/Java/JavaVirtualMachines/</span><br><span class=\"line\">输出：jdk-9.0.1.jdk</span><br><span class=\"line\"></span><br><span class=\"line\">sudo rm -rf /Library/Java/JavaVirtualMachines/jdk-9.0.1.jdk</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Hello-World\"><a href=\"#Hello-World\" class=\"headerlink\" title=\"Hello World\"></a>Hello World</h3><p>運行以下代碼，將輸出 <code>Hello World</code>。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> hello;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Hello</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"Hello World\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Java-語言的特點\"><a href=\"#Java-語言的特點\" class=\"headerlink\" title=\"Java 語言的特點\"></a>Java 語言的特點</h3><ol>\n<li>面向對象（封裝，繼承，多態）</li>\n<li>平台無關性（ Java 虛擬機實現平台無關性）</li>\n<li>支持多線程</li>\n<li>編譯與解釋並存</li>\n</ol>\n<p>編譯：生成字節碼(.class文件)，javac 指令。<br>解釋：解釋字節碼成機器碼，java 指令。</p>\n<h3 id=\"JVM、JDK-和-JRE\"><a href=\"#JVM、JDK-和-JRE\" class=\"headerlink\" title=\"JVM、JDK 和  JRE\"></a>JVM、JDK 和  JRE</h3><ol>\n<li>JVM，Java Virtual Machine 的縮寫，即 Java 虛擬機，是運行 Java 字節碼的虛擬機（包含解釋器 java），它包含在 JRE 中。不同的操作系統有特定的 JVM 實現，以便 Java 字節碼可以跨平台。</li>\n<li>JDK，Java Development Kit 的縮寫，即 Java 開發工具集，包含了 JRE 、編譯器（javac）和其他工具（javadoc 和 jdb 等）。</li>\n<li>JRE，Java Runtime 的縮寫，即 Java 運行時，包含了 JVM、必要的類庫、java 命令和其他基礎構件。</li>\n</ol>\n<h3 id=\"Java-與-C-對比\"><a href=\"#Java-與-C-對比\" class=\"headerlink\" title=\"Java 與 C++ 對比\"></a>Java 與 C++ 對比</h3><ol>\n<li>皆支持面向對象編程（封裝、繼承和多態）。</li>\n<li>Java 不提供指針來直接訪問內存；C++ 提供。</li>\n<li>Java 的類不支持多繼承，但接口可以；C++ 的類可以多繼承。</li>\n<li>Java 有內存垃圾自動回收機制（GC），不需要手動釋放無用內存；C++ 沒有。</li>\n<li>Java 字符串和字符數組沒有結束符的概念；C/C++ 中字符串和字符數組最後會有一個額外的字符<code>\\0</code> 來表示結束。</li>\n</ol>\n<h2 id=\"Java-語法\"><a href=\"#Java-語法\" class=\"headerlink\" title=\"Java 語法\"></a>Java 語法</h2><h3 id=\"基本類型及其大小\"><a href=\"#基本類型及其大小\" class=\"headerlink\" title=\"基本類型及其大小\"></a>基本類型及其大小</h3><p>Java 共 8 種數據類型（不包括 void），具體如下表：</p>\n<p><img src=\"/2020/12/02/it/java/java-basic/20201202_24328.png\" alt></p>\n<p>boolean 值的大小取決於 JVM 實現，Java 虛擬機規範（第8版）規定：單個 boolean佔 4 個字節，而 boolean 數組 1 個字節。</p>\n<p>char 值是一個 16 位的 Unicode 字符，最小值是 ‘\\u0000’ ，最大值是 ‘\\uffff’，即 0～65535，每個數字對應一個字符。</p>\n<ul>\n<li><p>代碼</p>\n  <figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">char</span> a = <span class=\"string\">'中'</span>;</span><br><span class=\"line\">System.out.println((<span class=\"keyword\">int</span>)a);</span><br><span class=\"line\"><span class=\"comment\">// 輸出 20013</span></span><br><span class=\"line\">System.out.println(Integer.toHexString(a));</span><br><span class=\"line\"><span class=\"comment\">// 輸出 4e2d</span></span><br><span class=\"line\">System.out.println(<span class=\"string\">'\\u4e2d'</span>);</span><br><span class=\"line\"><span class=\"comment\">// 輸出 中</span></span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<p>byte、short、int、long 類型，採用二進制補碼存儲數據，以便利減法運算。</p>\n<ul>\n<li>二進制補碼<ul>\n<li>過程：正數的補碼是其自身；負數的補碼是除符號位外所有二進制位做反碼後加 1 的結果。</li>\n<li>原理：假定 X、Y 是两个占1个字节的数。X-Y 等价于 X+(-Y) ，而 -Y 可以看作 0-Y，假定是 0 不足以被减，向上借 1 变为 1 0000 0000，而  1 0000 0000 又等價於 1111 1111 + 1，於是 -Y = 1111 1111 - Y + 1，即 Y 的反碼再 + 1。 見 <a href=\"https://www.ruanyifeng.com/blog/2009/08/twos_complement.html\" target=\"_blank\" rel=\"noopener\">https://www.ruanyifeng.com/blog/2009/08/twos_complement.htm</a>l</li>\n</ul>\n</li>\n</ul>\n<p>long 類型的數據後面一定要加上 L，否則會被認為是整型。</p>\n<p>char 類型值使用單引號括起來，String 使用雙引號。</p>\n<p>Java 有<strong>自動拆裝箱機制</strong>，裝箱即把基本類型使用其包裝類型包裝起來，拆箱即把包裝類型拆成基本類型。</p>\n<h3 id=\"包裝類型及常量池技術\"><a href=\"#包裝類型及常量池技術\" class=\"headerlink\" title=\"包裝類型及常量池技術\"></a>包裝類型及常量池技術</h3><ol>\n<li>Byte、Short、Integer 和 Long 分別默認創建了數值 [-128, 127] 的相應類型的緩存數據。</li>\n<li>Character 創建了數值在 [0, 127] 的緩存數據。</li>\n<li>Boolean 直接返回 True 和 False。</li>\n<li>Float 和 Double 沒有實現常量池技術。</li>\n</ol>\n<p>使用常量池技術意味著在緩存範圍內的包裝類型對象是相等的，除非 new 一個對象。使用包裝器的 valueOf 方法默認會先去緩存中取對象，取不到才會 new 一個。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">Integer i1 = <span class=\"number\">33</span>;</span><br><span class=\"line\">Integer i2 = <span class=\"number\">33</span>;</span><br><span class=\"line\">System.out.println(i1 == i2);<span class=\"comment\">// 输出 true</span></span><br><span class=\"line\">Integer i11 = <span class=\"number\">333</span>;</span><br><span class=\"line\">Integer i22 = <span class=\"number\">333</span>;</span><br><span class=\"line\">System.out.println(i11 == i22);<span class=\"comment\">// 输出 false</span></span><br><span class=\"line\">Double i3 = <span class=\"number\">1.2</span>;</span><br><span class=\"line\">Double i4 = <span class=\"number\">1.2</span>;</span><br><span class=\"line\">System.out.println(i3 == i4);<span class=\"comment\">// 输出 false</span></span><br></pre></td></tr></table></figure>\n\n<p>《阿里巴巴Java開發手冊》規定：</p>\n<ul>\n<li>【強制】<strong>所有的 POJO 類屬性必須使用包裝數據類型</strong>。</li>\n<li>【強制】RPC 方法的返回值和參數必須使用包裝數據類型。</li>\n<li>【推薦】所有的局部變量使用基本數據類型。</li>\n</ul>\n<h3 id=\"BigDecimal\"><a href=\"#BigDecimal\" class=\"headerlink\" title=\"BigDecimal\"></a>BigDecimal</h3><p><strong>（1）使用 BigDecimal 進行浮點數比較和精度取捨</strong></p>\n<p><strong>（2）使用 BigDecimal(String) 或 BigDecimal.valueOf(double) 構造對象</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">float</span> a = <span class=\"number\">1.0f</span> - <span class=\"number\">0.9f</span>;</span><br><span class=\"line\"><span class=\"keyword\">float</span> b = <span class=\"number\">0.9f</span> - <span class=\"number\">0.8f</span>;</span><br><span class=\"line\">System.out.println(a);</span><br><span class=\"line\">System.out.println(b);</span><br><span class=\"line\">System.out.println(a == b); <span class=\"comment\">// false</span></span><br><span class=\"line\"></span><br><span class=\"line\">BigDecimal a = <span class=\"keyword\">new</span> BigDecimal(<span class=\"string\">\"1.0\"</span>);</span><br><span class=\"line\">BigDecimal b = <span class=\"keyword\">new</span> BigDecimal(<span class=\"string\">\"0.9\"</span>);</span><br><span class=\"line\">BigDecimal c = <span class=\"keyword\">new</span> BigDecimal(<span class=\"string\">\"0.8\"</span>);</span><br><span class=\"line\">System.out.println(a.subtract(b));</span><br><span class=\"line\">System.out.println(b.subtract(c));</span><br><span class=\"line\">System.out.println(a.subtract(b).equals(b.subtract(c))); <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\">BigDecimal a = <span class=\"keyword\">new</span> BigDecimal(<span class=\"string\">\"1.1252312\"</span>);</span><br><span class=\"line\"><span class=\"comment\">// 取小數點後 2 位，四捨五入</span></span><br><span class=\"line\">BigDecimal scale = a.setScale(<span class=\"number\">2</span>, RoundingMode.HALF_UP);</span><br><span class=\"line\">System.out.println(scale.toString()); <span class=\"comment\">// 1.13</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"對象及其大小\"><a href=\"#對象及其大小\" class=\"headerlink\" title=\"對象及其大小\"></a>對象及其大小</h3><p>基本類型的封裝類型是對象，Java 中的對象由以下部分組成：</p>\n<ol>\n<li>對象頭（object header）：由 mark word 和 class pointer 組成。mark word 存儲了對象的 hashcode、GC信息和鎖信息；class pointer 存儲了指向類對象的指針。32 位的 JVM 上對象頭佔 8 個字節，mark word 和 class pointer 各佔一半。64 位的 JVM 默認開啟了壓縮指針選項（-XX+UseCompressedOops）後上對象頭佔用 12 個字節，mark word 佔用 8 個字節，class pointer 佔用 4 個字節。</li>\n<li>實例數據（instance data）：</li>\n<li>對齊填充（padding）</li>\n</ol>\n<p>可使用 <code>org.openjdk.jol</code> 工具查看一個對象佔用的字節大小，</p>\n<ul>\n<li><p>如下：</p>\n  <figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</span><br><span class=\"line\">    System.out.println(VM.current().details());</span><br><span class=\"line\">    System.out.println(ClassLayout.parseClass(Object.class).toPrintable());</span><br><span class=\"line\">    System.out.println(ClassLayout.parseInstance(Integer.valueOf(<span class=\"number\">1</span>)).toPrintable());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>  輸出結果：</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Running 64-bit HotSpot VM.</span></span><br><span class=\"line\"><span class=\"comment\"># Using compressed oop with 3-bit shift.</span></span><br><span class=\"line\"><span class=\"comment\"># Using compressed klass with 3-bit shift.</span></span><br><span class=\"line\"><span class=\"comment\"># WARNING | Compressed references base/shifts are guessed by the experiment!</span></span><br><span class=\"line\"><span class=\"comment\"># WARNING | Therefore, computed addresses are just guesses, and ARE NOT RELIABLE.</span></span><br><span class=\"line\"><span class=\"comment\"># WARNING | Make sure to attach Serviceability Agent to get the reliable addresses.</span></span><br><span class=\"line\"><span class=\"comment\"># Objects are 8 bytes aligned.</span></span><br><span class=\"line\"><span class=\"comment\"># Field sizes by type: 4, 1, 1, 2, 2, 4, 4, 8, 8 [bytes]</span></span><br><span class=\"line\"><span class=\"comment\"># Array element sizes: 4, 1, 1, 2, 2, 4, 4, 8, 8 [bytes]</span></span><br><span class=\"line\"></span><br><span class=\"line\">java.lang.Object object internals:</span><br><span class=\"line\"> OFFSET  SIZE   TYPE DESCRIPTION                               VALUE</span><br><span class=\"line\">      0    12        (object header)                           N/A</span><br><span class=\"line\">     12     4        (loss due to the next object alignment)</span><br><span class=\"line\">Instance size: 16 bytes</span><br><span class=\"line\">Space losses: 0 bytes internal + 4 bytes external = 4 bytes total</span><br><span class=\"line\"></span><br><span class=\"line\">java.lang.Integer object internals:</span><br><span class=\"line\"> OFFSET  SIZE   TYPE DESCRIPTION                               VALUE</span><br><span class=\"line\">      0     4        (object header)                           01 c9 01 4e (00000001 11001001 00000001 01001110) (1308739841)</span><br><span class=\"line\">      4     4        (object header)                           3d 00 00 00 (00111101 00000000 00000000 00000000) (61)</span><br><span class=\"line\">      8     4        (object header)                           48 71 00 00 (01001000 01110001 00000000 00000000) (29000)</span><br><span class=\"line\">     12     4    int Integer.value                             1</span><br><span class=\"line\">Instance size: 16 bytes</span><br><span class=\"line\">Space losses: 0 bytes internal + 0 bytes external = 0 bytes total</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<p>結論：在 64 位開啟指針壓縮的環境下，Object 對象佔用 16 個字節，Integer 對象也佔用 16 個字節。</p>\n<h3 id=\"String、StringBuffer-和-String-Builder-的區別\"><a href=\"#String、StringBuffer-和-String-Builder-的區別\" class=\"headerlink\" title=\"String、StringBuffer 和 String Builder 的區別\"></a>String、StringBuffer 和 String Builder 的區別</h3><p>String 類使用 final 修飾字符數組或字節數組來保存字符串，所以 String 對象是不可變的。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">String</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// Java 9 之前</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">char</span>[] value;</span><br><span class=\"line\">\t<span class=\"comment\">// Java 9 之後</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">byte</span>[] value;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>StringBuilder  和 StringBuffer 都繼承自 AbstractStringBuilder，AbstractStringBuilder 使用字符數組來保存字符串，但沒有使用 final 關鍵字修飾，所以這兩者是可變的。</p>\n<p>下面從不同角度比較下此三者：</p>\n<ol>\n<li>線程安全性：String 對象不可變，線程安全；StringBuffer 對方法加了同步鎖，線程安全；StringBuilder 對方法沒有加同步鎖，線程不安全。</li>\n<li>性能：每次對 String 類型進行改變時會生成一個新的 String 對象，然後將指針指向新的 String 對象。StringBuffer 和 StringBuilder 每次對自身進行操作，不生成新對象。同等情況下， StringBuilder 比 StringBuffer 能提升 10%～15% 性能，但要冒線程不安全的風險。</li>\n</ol>\n<h3 id=\"注釋\"><a href=\"#注釋\" class=\"headerlink\" title=\"注釋\"></a>注釋</h3><p>代碼即注釋。先讓標識符見名知意，然後再考慮增加注釋。</p>\n<h3 id=\"標識符和關鍵字的區別\"><a href=\"#標識符和關鍵字的區別\" class=\"headerlink\" title=\"標識符和關鍵字的區別\"></a>標識符和關鍵字的區別</h3><p>標識符是程序、類、變量、方法等取的名字，而關鍵字是具備特殊含義的標識符。常見的關鍵字有：</p>\n<ol>\n<li>訪問控制：private、protected、public</li>\n<li>類、方法和變量修飾符：abstract、class、extends、final、implements、interface、native、new、static、strictfp、synchronized、transient、volatile</li>\n<li>程序控制：break、continue、return、do、while、if、else、for、instanceof、switch、case、default</li>\n<li>錯誤處理：try、catch、throw、throws、finally</li>\n<li>包相關：import、package</li>\n<li>基本類型：boolean、byte、char、double、float、int、short、null、true、false</li>\n<li>變量引用：super、this、void</li>\n<li>保留字：goto、const</li>\n</ol>\n<h3 id=\"自增自減運算符\"><a href=\"#自增自減運算符\" class=\"headerlink\" title=\"自增自減運算符\"></a>自增自減運算符</h3><p>符號在前先加減再賦值，符號在後先賦值後加減。假定 <code>a = 1; b = a++</code> 最後 a 值爲 2，b 值爲 1。</p>\n<h3 id=\"和-equals-的區別\"><a href=\"#和-equals-的區別\" class=\"headerlink\" title=\"== 和 equals 的區別\"></a>== 和 equals 的區別</h3><ol>\n<li>基本數據類型 == 比較的是值，引用數據類型 == 比較的是內存地址。</li>\n<li>equals 是 Object 類的方法，如無重寫該方法，則默認使用 == 比較對象，即比較內存地址；String 類重寫了 equals 方法使其比較得是值。</li>\n<li>整型包裝類都應使用 equals 比較大小。</li>\n<li>浮點數之間的等值判斷，基本數據類型不能用==來比較，包裝數據類型不能用 equals 來判斷。</li>\n</ol>\n<ul>\n<li><p>重寫 equals 方法通常同時需要重寫 hashcode 方法，爲什麼？</p>\n<p>  hashcode 是 Object 類的一個本地方法，其實現時將對象的內存地址轉爲一個 int 值，不同的對象的 hashcode 可能相同。 HashSet 集合進行元素重複校驗時先比較 hashcode ，當 hashcode 一樣時再調用 equals，提高了校驗效率。因此，如果只重寫 equals 方法而不重寫 hashcode 方法，會出現 equals 返回 true，而 hashcode 不等的情況，這樣如果要求 HashSet 去重就會失敗。</p>\n<p>  HashSet 基於 HashMap 實現，HashMap 內部有一哈希表，裏面使用 hashcode 進行散列存儲。</p>\n</li>\n</ul>\n<h3 id=\"序列化時如果有些字段不想序列化，怎麼辦？\"><a href=\"#序列化時如果有些字段不想序列化，怎麼辦？\" class=\"headerlink\" title=\"序列化時如果有些字段不想序列化，怎麼辦？\"></a>序列化時如果有些字段不想序列化，怎麼辦？</h3><p>使用 transient 關鍵字修飾不想序列化的字段。</p>\n<h3 id=\"continue、break-和-return-的區別\"><a href=\"#continue、break-和-return-的區別\" class=\"headerlink\" title=\"continue、break 和 return 的區別\"></a>continue、break 和 return 的區別</h3><ol>\n<li>continue：跳出當前這一次循環，繼續下一次循環。</li>\n<li>break：跳出整個循環體，繼續執行循環外的語句。</li>\n<li>return：跳出所在的方法，結束方法，可以帶一個返回值。</li>\n</ol>\n<h3 id=\"泛型、類型擦除和通配符\"><a href=\"#泛型、類型擦除和通配符\" class=\"headerlink\" title=\"泛型、類型擦除和通配符\"></a>泛型、類型擦除和通配符</h3><p><strong>泛型的本質是將類型參數化。</strong>Java 的泛型（generics）是 JDK 5 中引入的新特性，還提供了編譯時類型安全檢測機制來檢測非法的類型。但是 Java 的泛型在編譯期間會將泛型信息擦除，即類型擦除，因此也被稱爲<strong>僞泛型</strong>。下面的例子展示了如何在運行期加入非法類型。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">List&lt;Integer&gt; list = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">list.add(<span class=\"number\">12</span>);</span><br><span class=\"line\"><span class=\"comment\">//這裡直接添加會報錯</span></span><br><span class=\"line\"><span class=\"comment\">// list.add(\"a\");</span></span><br><span class=\"line\">Class&lt;? extends List&gt; clazz = list.getClass();</span><br><span class=\"line\">Method add = clazz.getDeclaredMethod(<span class=\"string\">\"add\"</span>, Object.class);</span><br><span class=\"line\"><span class=\"comment\">//但是通過反射添加，是可以的</span></span><br><span class=\"line\">add.invoke(list, <span class=\"string\">\"kl\"</span>);</span><br><span class=\"line\">System.out.println(list);</span><br></pre></td></tr></table></figure>\n\n<p>泛型分泛型接口、泛型類和泛型方法。泛型類的具體類型通過實例化時傳入，泛型方法的具體類型通過方法調用時傳入的參數確定。</p>\n<p>泛型通配符約定：</p>\n<ol>\n<li>？ 表示不確定的 Java 類型，用於泛型方法</li>\n<li>T（Type）表示確定的一個 Java 類型</li>\n<li>K V（Key Value）分別表示映射中的鍵、值</li>\n<li>E（Element）表示集合中的一個元素</li>\n<li>&lt;? extends A&gt; 上界通配符，表示 A 類型或其子類</li>\n<li>&lt;? super A&gt; 下界通配符，表示 A 類型或其父類</li>\n<li><t extends a> 表示 A 類型或其子類的一種</t></li>\n<li>&lt;T extends A &amp; B&gt; 表示 A 類型且B類型的子類的一種</li>\n<li><del><t super a></t></del> </li>\n</ol>\n<p>泛型不是協變的，已知 Apple 繼承自 Fruit 的情況下，Plate<apple> 的引用並不能傳遞給 Plate<fruit>，但可以傳遞給 Plate&lt;? extends Fruit&gt;。</fruit></apple></p>\n<p>元素爲 &lt;? extends E&gt; 的集合，只能取出 E，而不能存入 E 及其子類的對象。因爲只能確定該類型是 E 的子類，但具體是哪個子類未知，因此編譯器不允許插入任何 E 或其子類的對象，取出來的時候只能當 E 類型。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">  List&lt;? extends A&gt; list = Arrays.asList(<span class=\"keyword\">new</span> A(), <span class=\"keyword\">new</span> B());</span><br><span class=\"line\">  list.add(<span class=\"keyword\">new</span> A()); <span class=\"comment\">// 報錯</span></span><br><span class=\"line\">  list.add(<span class=\"keyword\">new</span> B()); <span class=\"comment\">// 報錯</span></span><br><span class=\"line\">  A a = list.get(<span class=\"number\">1</span>);</span><br><span class=\"line\">  System.out.println(a.toString());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> </span>&#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">B</span> <span class=\"keyword\">extends</span> <span class=\"title\">A</span> </span>&#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>元素爲 &lt;? super E&gt; 的集合，只能取出 Object，只能存入 E 及其子類的對象。因爲只能確定該類型是 E 的超類，但不知是哪一個超類，所以插入任何 E 及其子類的對象是沒問題的，但是插入 E 的超類就不行了，取出來的時候也只能是 Object，因爲 Object 是一切類的超類。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">  List&lt;? <span class=\"keyword\">super</span> B&gt; list = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">  list.add(<span class=\"keyword\">new</span> A()); <span class=\"comment\">// 報錯</span></span><br><span class=\"line\">  list.add(<span class=\"keyword\">new</span> B());</span><br><span class=\"line\">  list.add(<span class=\"keyword\">new</span> C());</span><br><span class=\"line\">  Object object = list.get(<span class=\"number\">1</span>);</span><br><span class=\"line\">  System.out.println(object.toString());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> </span>&#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">B</span> <span class=\"keyword\">extends</span> <span class=\"title\">A</span> </span>&#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">C</span> <span class=\"keyword\">extends</span> <span class=\"title\">B</span></span>&#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"獲取鍵盤輸入數據的常用方法\"><a href=\"#獲取鍵盤輸入數據的常用方法\" class=\"headerlink\" title=\"獲取鍵盤輸入數據的常用方法\"></a>獲取鍵盤輸入數據的常用方法</h3><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 方法一：使用 Scanner，可以快速確定輸入數據的類型，按空格符分割數據</span></span><br><span class=\"line\">Scanner scanner = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">String s = scanner.nextLine();</span><br><span class=\"line\">System.out.println(s);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 方法二：使用 BufferedReader 讀取字符序列，高效但需要轉換成其他類型，會拋出 IOException</span></span><br><span class=\"line\">BufferedReader bufferedReader = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">String s1 = bufferedReader.readLine();</span><br><span class=\"line\">System.out.println(s1);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"方法（函數）\"><a href=\"#方法（函數）\" class=\"headerlink\" title=\"方法（函數）\"></a>方法（函數）</h2><h3 id=\"爲什麼-Java-只有值傳遞？\"><a href=\"#爲什麼-Java-只有值傳遞？\" class=\"headerlink\" title=\"爲什麼 Java 只有值傳遞？\"></a>爲什麼 Java 只有值傳遞？</h3><p>首先要明瞭程序設計語言中的有關函數參數傳遞的兩種方法：</p>\n<ol>\n<li>按值調用（call by value）：方法接收調用者提供的參數的值，方法內無法修改實際參數值。</li>\n<li>按引用調用（call by reference）：方法接收調用者提供的參數的地址，方法內可以修改實際參數值。</li>\n</ol>\n<p><strong>Java 總是採用按值調用，所有參數值都是一個拷貝，無法修改實際參數值。對於引用類型參數，傳遞的是引用的拷貝，引用的拷貝和引用指向同一個對象，即所謂的淺拷貝</strong>。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">  String s1 = <span class=\"string\">\"Hello\"</span>;</span><br><span class=\"line\">  String s2 = <span class=\"string\">\"World\"</span>;</span><br><span class=\"line\">  swap(s1, s2);</span><br><span class=\"line\">  System.out.printf(<span class=\"string\">\"main s1: %s, s2: %s%n\"</span>, s1, s2);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">swap</span><span class=\"params\">(String s1, String s2)</span> </span>&#123;</span><br><span class=\"line\">  String tmp = s1;</span><br><span class=\"line\">  s1 = s2;</span><br><span class=\"line\">  s2 = tmp;</span><br><span class=\"line\">  System.out.printf(<span class=\"string\">\"swap s1: %s, s2: %s%n\"</span>, s1, s2);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 運行結果：</span></span><br><span class=\"line\"><span class=\"comment\">// swap s1: World, s2: Hello</span></span><br><span class=\"line\"><span class=\"comment\">// main s1: Hello, s2: World</span></span><br></pre></td></tr></table></figure>\n\n<p>結論：</p>\n<ol>\n<li>一個方法不能修改一個基本類型的實參。</li>\n<li>一個方法可以改變一個對象類型的實參狀態。</li>\n<li>一個方法不能讓對象類型的實參引用一個新對象。</li>\n</ol>\n<h3 id=\"深拷貝和淺拷貝有什麼不同？\"><a href=\"#深拷貝和淺拷貝有什麼不同？\" class=\"headerlink\" title=\"深拷貝和淺拷貝有什麼不同？\"></a>深拷貝和淺拷貝有什麼不同？</h3><ol>\n<li>淺拷貝：對基本類型拷貝其值；對引用類型拷貝其引用。</li>\n<li>深拷貝：對基本類型拷貝其值；對引用類型，新建一個對象並拷貝原對象的值。</li>\n</ol>\n<p><img src=\"/2020/12/02/it/java/java-basic/Untitled.png\" alt></p>\n<h3 id=\"重載和重寫有什麼區別？\"><a href=\"#重載和重寫有什麼區別？\" class=\"headerlink\" title=\"重載和重寫有什麼區別？\"></a>重載和重寫有什麼區別？</h3><ol>\n<li>重載（overloading）：在一個類中，有多個同名但不同傳入參數的方法，各個重載方法簽名不同。</li>\n<li>重寫（overwrite）：子類對父類允許訪問的方法的重新編寫，方法簽名不變，訪問修飾符只能降低不能提高，拋出的異常只能更小，返回值類型也是。</li>\n</ol>\n<h2 id=\"Java-面向對象\"><a href=\"#Java-面向對象\" class=\"headerlink\" title=\"Java 面向對象\"></a>Java 面向對象</h2><h3 id=\"面向對象和面向過程\"><a href=\"#面向對象和面向過程\" class=\"headerlink\" title=\"面向對象和面向過程\"></a>面向對象和面向過程</h3><ol>\n<li>面向過程：不需要實例化對象，內存和 CPU 開銷小，但不容易維護。</li>\n<li>面向對象：需要實例化對象，內存和 CPU 開銷大，但易維護、易復用、易擴展。</li>\n</ol>\n<p>Java 因爲編譯出的字節碼並不能直接在機器上運行，因而效率上會稍慢。但一些面向過程的腳本語言性能也不一定比 Java 好。</p>\n<h3 id=\"構造方法\"><a href=\"#構造方法\" class=\"headerlink\" title=\"構造方法\"></a>構造方法</h3><ol>\n<li>特點：名字跟類名相同，沒有返回值，不可重寫但可重載。</li>\n<li>作用：執行對象的初始化工作，如果類沒有重載任何構造方法，那默認會有不帶參數的構造方法。</li>\n<li>子類初始化時一定會調用父類的構造方法，即使子類不顯式調用，也會默認調用父類的無參構造方法。</li>\n</ol>\n<h3 id=\"成員變量和局部變量的區別\"><a href=\"#成員變量和局部變量的區別\" class=\"headerlink\" title=\"成員變量和局部變量的區別\"></a>成員變量和局部變量的區別</h3><ol>\n<li>成員變量：屬於類；可以被 public、private、static 等修飾符修飾；如用 static 修飾則變量屬於類，否則屬於對象存在於堆內存；生命週期隨對象；自動賦予初始化值。</li>\n<li>局部變量：屬於代碼塊或方法；只能被 final 修飾；存在於棧內存；生命週期隨代碼塊或方法；不會自動賦予初始化值。</li>\n</ol>\n<h3 id=\"對象實例和對象引用的區別\"><a href=\"#對象實例和對象引用的區別\" class=\"headerlink\" title=\"對象實例和對象引用的區別\"></a>對象實例和對象引用的區別</h3><ol>\n<li>對象實例：存在於堆內存，一個對象實例可以被多個引用指向。</li>\n<li>對象引用：存在於棧內存，一個引用指向一個對象實例。</li>\n</ol>\n<h3 id=\"面向對象的三大特徵\"><a href=\"#面向對象的三大特徵\" class=\"headerlink\" title=\"面向對象的三大特徵\"></a>面向對象的三大特徵</h3><p><strong>（1）封裝</strong></p>\n<p>封裝是將一個對象的狀態信息（即屬性）隱藏在對象內部，一般不允許外界直接訪問，而是提供必要的方法給外界操作。</p>\n<p><strong>（2）繼承</strong></p>\n<p>繼承是使用已有的類創建新類的技術，它提高了代碼復用率和開發效率。關於繼承以下幾點務必明瞭：</p>\n<ol>\n<li>子類擁有父類所有的屬性和方法（包括私有的），但父類中的私有屬性和方法子類無法訪問（反射子類也無法訪問），<strong>僅僅擁有</strong>。</li>\n<li>子類可以對父類進行擴展，增加新的屬性和方法。</li>\n<li>子類可以重寫父類的方法。</li>\n</ol>\n<p><strong>（3）多態</strong></p>\n<p>多態，即一個對象可以擁有多種狀態。具體表現在父類的引用可以指向子類的實例。關於多態以下幾點務必知曉：</p>\n<ol>\n<li>對象類型和引用類型之間具有繼承/實現關係。</li>\n<li>對象類型不可變，引用類型可變。</li>\n<li>方法具有多態性，屬性不具有。父類的引用可以調用子類對象的方法，但不能訪問其屬性。</li>\n<li>父類的引用不能調用「只有子類存在但在父類不存在」的方法。</li>\n<li>如果子類重寫了父類的方法，真正執行的是子類覆蓋的方法。</li>\n</ol>\n<h3 id=\"靜態方法內爲什麼不能調用非靜態成員？\"><a href=\"#靜態方法內爲什麼不能調用非靜態成員？\" class=\"headerlink\" title=\"靜態方法內爲什麼不能調用非靜態成員？\"></a><strong>靜態方法內爲什麼不能調用非靜態成員？</strong></h3><p>因爲非靜態成員需要在類實例化成對象後才能被調用，而靜態方法不需要實例化對象就可以被調用。</p>\n<h3 id=\"接口和抽象類的區別\"><a href=\"#接口和抽象類的區別\" class=\"headerlink\" title=\"接口和抽象類的區別\"></a>接口和抽象類的區別</h3><ol>\n<li>方法上：接口的方法默認修飾符是 public，且不能實現（Java 8 開始可以有默認方法和靜態方法，Java 9 開始可以有私有方法和私有靜態方法）；而抽象類可有 public、protected 和 default 修飾符，且可有非抽象的方法。</li>\n<li>變量上：接口只能有 static、final 變量；而抽象類沒有限制。</li>\n<li>繼承上：一個類可以實現多個接口，接口本身也可以擴展多個接口；但一個類只能繼承一個抽象類。</li>\n<li>設計上：接口是對行爲的抽象，是一個行爲規範；抽象類是對類的抽象，是一種模板設計。</li>\n</ol>\n<h2 id=\"Java-核心技術\"><a href=\"#Java-核心技術\" class=\"headerlink\" title=\"Java 核心技術\"></a>Java 核心技術</h2><h3 id=\"集合\"><a href=\"#集合\" class=\"headerlink\" title=\"集合\"></a>集合</h3><p>見 <a href=\"https://linlshare.github.io/2020/12/02/it/java/java-collection/\" target=\"_blank\" rel=\"noopener\">Java 集合</a> </p>\n<h3 id=\"反射機制\"><a href=\"#反射機制\" class=\"headerlink\" title=\"反射機制\"></a>反射機制</h3><p><strong>（1）什麼是反射</strong></p>\n<p>Java 的反射機制是在運行時能知道任意一個類的所有屬性和方法，能調用任意一個對象的屬性和方法。</p>\n<p><strong>（2）反射的優缺點</strong></p>\n<ol>\n<li>優點：運行時確定類型，動態加載類，提高代碼靈活度。</li>\n<li>缺點：反射性能比直接的 Java 代碼慢，存在安全問題，因爲可以動態操作改變類的屬性。</li>\n</ol>\n<p>反射動態加載類的優點即是動態編譯，與之相對的是靜態編譯，靜態編譯是在編譯時就確定了類型。</p>\n<p><strong>（3）反射的應用場景</strong></p>\n<p>反射是框架設計的靈魂。其應用場景有：</p>\n<ol>\n<li>模塊化開發；</li>\n<li>動態代理設計模式；</li>\n<li>Spring 框架的 IOC（控制反轉）和 AOP（面向切面編程）；</li>\n<li>JDBC 連接數據庫等等。</li>\n</ol>\n<h3 id=\"異常\"><a href=\"#異常\" class=\"headerlink\" title=\"異常\"></a>異常</h3><p><strong>（1）簡介</strong></p>\n<p>Java 的異常歸於同一個 Throwable 類，並分爲兩大類：Error 和 Exception。<strong>Error 通常是 JVM 錯誤，程序無法處理</strong>；<strong>而 Exception 是程序本身可以處理的異常</strong>。Exception 分爲 Checked Exceptions（受檢異常）和 Unchecked Exceptions（不受檢異常）。</p>\n<p><img src=\"/2020/12/02/it/java/java-basic/Untitled%201.png\" alt></p>\n<p><strong>Checked Exceptions 又名 Compile Time Exceptions（編譯時異常）</strong>，編譯器可以發現並要求程序處理後才能正常通過編譯，常見的有：</p>\n<ul>\n<li><em>IOException</em></li>\n<li><em>EOFException</em></li>\n<li><em>MalFormedURLException</em></li>\n<li><em>IntruptedException</em></li>\n</ul>\n<p><strong>Unchecked Exception 又名 Runtime Exceptions（運行時異常）</strong>，編譯器無法檢測出，只有運行時才會發生的異常，常見的有：</p>\n<ul>\n<li><em>ArithmaticException</em></li>\n<li><em>NullPointerException</em></li>\n<li><em>IndexOutOfBoundsException</em></li>\n<li><em>ClassCastException</em></li>\n<li><em>ArrayIndexOutOfBoundsException</em></li>\n<li><em>NumberFormatException</em></li>\n</ul>\n<p><strong>（2）Throwable 類常用方法</strong></p>\n<ol>\n<li><code>getMessage</code>：返回異常的簡要描述</li>\n<li><code>toString</code>：返回異常的詳細信息</li>\n<li><code>getLocalizedMessage</code>：返回異常的本地化信息（需要子類覆蓋該方法，否則與 <code>getMessage</code> 一樣）</li>\n<li><code>printStackTrace</code>：在控制台打印 Throwable 对象封装的异常信息</li>\n</ol>\n<p><strong>（3）try-catch-finally</strong></p>\n<ol>\n<li>try 代碼塊：捕獲異常。其後可接零個或多個 catch 代碼塊，如零個則必須接一個 finally 代碼塊。</li>\n<li>catch 代碼塊：處理捕獲到的異常。</li>\n<li>finally 代碼塊：無論是否捕獲或處理異常，finally 代碼塊最終都會被執行。當在 try 代碼塊或 catch 代碼塊中遇到 return 語句時，finally 代碼塊將在方法返回之前被執行。此時如果 finally 中也有 return 語句的話，其返回值將覆蓋 try 或 catch 代碼塊中的返回值。</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">f</span><span class=\"params\">(<span class=\"keyword\">int</span> value)</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> value * value;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (value == <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// f(2) 將返回 0 ，而不是 4.</span></span><br></pre></td></tr></table></figure>\n\n<p>以下情況，finally 代碼塊不會被執行或只部分執行：</p>\n<ol>\n<li>finally 代碼塊中有異常，代碼會中異常處中止；</li>\n<li>在 catch 代碼塊或 finally 塊中調用了 <code>System.exit</code> 函數退出程序；</li>\n<li>程序所在的線程死亡等等不可預料的系統和硬件問題。</li>\n</ol>\n<p><strong>（4）try-witch-resources</strong></p>\n<p>Java 7 中新增了 ****try-witch-resources 語法糖，適用於實現<code>java.lang.AutoCloseable</code> 或者 <code>java.io.Closeable</code> 的對象，可以自動關閉申請的資源，然後再執行 catch 或 finally 代碼塊。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// try-catch-finally</span></span><br><span class=\"line\">Scanner scanner = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    scanner = <span class=\"keyword\">new</span> Scanner(<span class=\"keyword\">new</span> File(<span class=\"string\">\"src/main/resources/test.txt\"</span>));</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (scanner.hasNext()) &#123;</span><br><span class=\"line\">        System.out.println(scanner.nextLine());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">    e.printStackTrace();</span><br><span class=\"line\">&#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (scanner != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">        scanner.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// try-witch-resources</span></span><br><span class=\"line\"><span class=\"keyword\">try</span> (Scanner scanner = <span class=\"keyword\">new</span> Scanner(<span class=\"keyword\">new</span> File(<span class=\"string\">\"src/main/resources/test.txt\"</span>))) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (scanner.hasNext()) &#123;</span><br><span class=\"line\">        System.out.println(scanner.nextLine());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">    e.printStackTrace();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"多線程\"><a href=\"#多線程\" class=\"headerlink\" title=\"多線程\"></a>多線程</h3><p>見 <a href=\"https://linlshare.github.io/2020/12/02/it/java/java-concurrent/\" target=\"_blank\" rel=\"noopener\">Java 並發</a> </p>\n<h3 id=\"文件與-I-O-流\"><a href=\"#文件與-I-O-流\" class=\"headerlink\" title=\"文件與 I/O 流\"></a>文件與 I/O 流</h3><p><strong>（1）Java 中 I/O 流分爲幾種？</strong></p>\n<p>按不同的分類方法有不同的分類：</p>\n<ol>\n<li>按流向分：輸入流、輸出流。</li>\n<li>按操作單元分：字節流、字符流。</li>\n<li>按角色分：節點流、處理流。</li>\n</ol>\n<p>Java 中 40 多個 I/O 流相關的類都是從 4 個抽象基類派生：</p>\n<ol>\n<li>InputStream：字節輸入流</li>\n<li>Reader：字符輸入流</li>\n<li>OutputStream：字節輸出流</li>\n<li>Writer：字符輸出流</li>\n</ol>\n<p><img src=\"/2020/12/02/it/java/java-basic/Untitled%202.png\" alt></p>\n<p><img src=\"/2020/12/02/it/java/java-basic/Untitled%203.png\" alt></p>\n<p><strong>（2）爲什麼有了字節流還需要字符流？</strong></p>\n<p>不管是文件讀寫還是網絡發送接收，信息的最小存儲單元都是字節，那為什麼 I/O 流操作要分為字節流操作和字符流操作呢？</p>\n<p>字符流是由 JVM 將字節流轉換得到的，過程非常耗時，且容易出現亂碼問題。所以 I/O 流提供直接操作字符流的接口，以避免這種轉換。對於文本建議使用字符流，而圖片、音視頻等應使用字節流。</p>\n<p><strong>（3）BIO、NIO、AIO 有什麼區別？</strong></p>\n<ol>\n<li><strong>BIO</strong>（Blocking I/O），同步阻塞 I/O 模式，數據的讀取寫入必須阻塞在一個線程內等待其完成。適用於活動連接數不高（&lt; 單機 1000）的情況，結合線程池一起使用。</li>\n<li><strong>NIO</strong>（Non-blocking I/O 或 New I/O），同步非阻塞的 I/O 模型，Java 1.4 中引入，位於 <code>java.nio</code> 包，提供 Channel、Selector 和 Buffer 等抽象，支持基於通道面向緩衝的 I/O 操作方法。適用於高負載、高並發的（網絡）應用。</li>\n<li><strong>AIO</strong>（Asynchronous I/O），異步非阻塞的 I/O 模型，Java 7 中引入。支持基於事件回調機制的操作方法。</li>\n</ol>\n<p>NIO 模型：</p>\n<p><img src=\"/2020/12/02/it/java/java-basic/Untitled%204.png\" alt></p>\n<ul>\n<li><p>NIO 服務端代碼</p>\n  <figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MultiplexerNioServer</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Selector selector;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">volatile</span> <span class=\"keyword\">boolean</span> stop = <span class=\"keyword\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 初始化多路复用器 绑定监听端口</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> port</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MultiplexerNioServer</span><span class=\"params\">(<span class=\"keyword\">int</span> port)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            ServerSocketChannel serverSocketChannel = ServerSocketChannel.open();<span class=\"comment\">//获得一个serverChannel</span></span><br><span class=\"line\">            selector = Selector.open();<span class=\"comment\">////创建选择器  获得一个多路复用器</span></span><br><span class=\"line\">            serverSocketChannel.configureBlocking(<span class=\"keyword\">false</span>);<span class=\"comment\">//设置为非阻塞模式 如果为 true，则此通道将被置于阻塞模式；如果为 false，则此通道将被置于非阻塞模式</span></span><br><span class=\"line\">            serverSocketChannel.socket().bind(<span class=\"keyword\">new</span> InetSocketAddress(port), <span class=\"number\">1024</span>);<span class=\"comment\">//绑定一个端口和等待队列长度</span></span><br><span class=\"line\">            serverSocketChannel.register(selector, SelectionKey.OP_ACCEPT);<span class=\"comment\">//把selector注册到channel，关注链接事件</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">            System.exit(<span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">stop</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.stop = <span class=\"keyword\">true</span>; <span class=\"comment\">// 优雅停机</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (!stop) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                <span class=\"comment\">//无论是否有读写事件发生，selector每隔1s被唤醒一次。如果一定时间内没有事件，就需要做些其他的事情，就可以使用带超时的</span></span><br><span class=\"line\">                <span class=\"keyword\">int</span> client = selector.select(<span class=\"number\">1000</span>);</span><br><span class=\"line\">                System.out.println(<span class=\"string\">\"1:\"</span> + client);</span><br><span class=\"line\">                <span class=\"comment\">// 阻塞,只有当至少一个注册的事件发生的时候才会继续.</span></span><br><span class=\"line\">                <span class=\"comment\">// int client = selector.select(); 不设置超时时间为线程阻塞，但是IO上支持多个文件描述符就绪</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (client == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">\"2:\"</span> + client);</span><br><span class=\"line\">                Set&lt;SelectionKey&gt; selectionKeys = selector.selectedKeys();</span><br><span class=\"line\">                Iterator&lt;SelectionKey&gt; it = selectionKeys.iterator();</span><br><span class=\"line\">                SelectionKey key = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">                <span class=\"keyword\">while</span> (it.hasNext()) &#123;</span><br><span class=\"line\">                    key = it.next();</span><br><span class=\"line\">                    it.remove();</span><br><span class=\"line\">                    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                        <span class=\"comment\">//处理事件</span></span><br><span class=\"line\">                        handle(key);</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (key != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                            key.cancel();</span><br><span class=\"line\">                            <span class=\"keyword\">if</span> (key.channel() != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                                key.channel().close();</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (Throwable e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (selector != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// selector关闭后会自动释放里面管理的资源</span></span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                selector.close();</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">handle</span><span class=\"params\">(SelectionKey key)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (key.isValid()) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//连接事件</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (key.isAcceptable()) &#123;</span><br><span class=\"line\">                ServerSocketChannel ssc = (ServerSocketChannel) key.channel();</span><br><span class=\"line\">                <span class=\"comment\">// 通过ServerSocketChannel的accept创建SocketChannel实例</span></span><br><span class=\"line\">                <span class=\"comment\">// 完成该操作意味着完成TCP三次握手，TCP物理链路正式建立</span></span><br><span class=\"line\">                SocketChannel sc = ssc.accept();<span class=\"comment\">//3次握手</span></span><br><span class=\"line\">                sc.configureBlocking(<span class=\"keyword\">false</span>);</span><br><span class=\"line\">                sc.register(selector, SelectionKey.OP_READ);<span class=\"comment\">//连接建立后关注读事件</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//读事件</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (key.isReadable()) &#123;</span><br><span class=\"line\">                SocketChannel socketChannel = (SocketChannel) key.channel();</span><br><span class=\"line\">                ByteBuffer readbuffer = ByteBuffer.allocate(<span class=\"number\">1024</span>);<span class=\"comment\">//写 0 1024  1024</span></span><br><span class=\"line\"><span class=\"comment\">//                ByteBuffer readbuffer = ByteBuffer.allocateDirect(1024); //申请直接内存，也就是堆外内存</span></span><br><span class=\"line\">                <span class=\"comment\">// 读取请求码流，返回读取到的字节数</span></span><br><span class=\"line\">                <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">int</span> readBytes = socketChannel.read(readbuffer);</span><br><span class=\"line\">                    <span class=\"comment\">// 读取到字节，对字节进行编解码</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (readBytes &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                        <span class=\"comment\">// 将缓冲区当前的limit设置为position=0，用于后续对缓冲区的读取操作</span></span><br><span class=\"line\">                        readbuffer.flip();<span class=\"comment\">//读写模式反转</span></span><br><span class=\"line\">                        <span class=\"comment\">// 将缓冲区可读字节数组复制到新建的数组中</span></span><br><span class=\"line\">                        <span class=\"keyword\">byte</span>[] bytes = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[readbuffer.remaining()];</span><br><span class=\"line\">                        readbuffer.get(bytes);</span><br><span class=\"line\">                        String body = <span class=\"keyword\">new</span> String(bytes, StandardCharsets.UTF_8);</span><br><span class=\"line\">                        System.out.println(<span class=\"string\">\"input is:\"</span> + body);</span><br><span class=\"line\">                        res(socketChannel, body);</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (readBytes &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                        <span class=\"comment\">// 链路已经关闭 释放资源</span></span><br><span class=\"line\">                        key.cancel();</span><br><span class=\"line\">                        socketChannel.close();</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"comment\">// 没有读到字节忽略</span></span><br><span class=\"line\">                        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">res</span><span class=\"params\">(SocketChannel channel, String response)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (response != <span class=\"keyword\">null</span> &amp;&amp; response.length() &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">byte</span>[] bytes = response.getBytes();</span><br><span class=\"line\">            ByteBuffer writeBuffer = ByteBuffer.allocate(bytes.length);</span><br><span class=\"line\">            writeBuffer.put(bytes);</span><br><span class=\"line\">            writeBuffer.flip();</span><br><span class=\"line\">            channel.write(writeBuffer);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"res end\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>NIO 客戶端代碼</p>\n  <figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">NioClientHandler</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> String host;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> port;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Selector selector;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> SocketChannel socketChannel;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">volatile</span> <span class=\"keyword\">boolean</span> stop;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">NioClientHandler</span><span class=\"params\">(String host, <span class=\"keyword\">int</span> port)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.host = host;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.port = port;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 创建选择器</span></span><br><span class=\"line\">            selector = Selector.open();</span><br><span class=\"line\">            <span class=\"comment\">// 打开监听通道</span></span><br><span class=\"line\">            socketChannel = SocketChannel.open();</span><br><span class=\"line\">            <span class=\"comment\">// 如果为 true，则此通道将被置于阻塞模式；如果为 false，则此通道将被置于非阻塞模式</span></span><br><span class=\"line\">            socketChannel.configureBlocking(<span class=\"keyword\">false</span>); <span class=\"comment\">// 开启非阻塞模式</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">            System.exit(<span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            doConnect();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">            System.exit(<span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (!stop) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> wait = selector.select(<span class=\"number\">1000</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (wait == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                Set&lt;SelectionKey&gt; selectionKeys = selector.selectedKeys();</span><br><span class=\"line\">                Iterator&lt;SelectionKey&gt; it = selectionKeys.iterator();</span><br><span class=\"line\">                SelectionKey key = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">while</span> (it.hasNext()) &#123;</span><br><span class=\"line\">                    key = it.next();</span><br><span class=\"line\">                    it.remove();</span><br><span class=\"line\">                    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                        handle(key);</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (key != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                            key.cancel();</span><br><span class=\"line\">                            <span class=\"keyword\">if</span> (key.channel() != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                                key.channel().close();</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">                System.exit(<span class=\"number\">1</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (selector != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                selector.close();</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">doConnect</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (socketChannel.connect(<span class=\"keyword\">new</span> InetSocketAddress(host, port))) &#123;</span><br><span class=\"line\">            socketChannel.register(selector, SelectionKey.OP_READ);</span><br><span class=\"line\">            doWrite(socketChannel);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            socketChannel.register(selector, SelectionKey.OP_CONNECT);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">handle</span><span class=\"params\">(SelectionKey key)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (key.isValid()) &#123;</span><br><span class=\"line\">            SocketChannel sc = (SocketChannel) key.channel();</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (key.isConnectable()) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (sc.finishConnect()) &#123;</span><br><span class=\"line\">                    sc.register(selector, SelectionKey.OP_READ);</span><br><span class=\"line\">                    doWrite(sc);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    System.exit(<span class=\"number\">1</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (key.isReadable()) &#123;</span><br><span class=\"line\">                ByteBuffer readBuffer = ByteBuffer.allocate(<span class=\"number\">1024</span>);</span><br><span class=\"line\">                <span class=\"keyword\">int</span> readBytes = sc.read(readBuffer);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (readBytes &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                    readBuffer.flip();</span><br><span class=\"line\">                    <span class=\"keyword\">byte</span>[] bytes = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[readBuffer.remaining()];</span><br><span class=\"line\">                    readBuffer.get(bytes);</span><br><span class=\"line\">                    String body = <span class=\"keyword\">new</span> String(bytes, StandardCharsets.UTF_8);</span><br><span class=\"line\">                    System.out.println(<span class=\"string\">\"res\"</span> + body);</span><br><span class=\"line\">                    <span class=\"keyword\">this</span>.stop = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (readBytes &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                    key.cancel();</span><br><span class=\"line\">                    sc.close();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">doWrite</span><span class=\"params\">(SocketChannel sc)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 将消息编码为字节数组</span></span><br><span class=\"line\">        <span class=\"keyword\">byte</span>[] request = <span class=\"string\">\"Hello\"</span>.getBytes();</span><br><span class=\"line\">        <span class=\"comment\">// 根据数组容量创建ByteBuffer</span></span><br><span class=\"line\">        ByteBuffer writeBuffer = ByteBuffer.allocate(request.length);</span><br><span class=\"line\">        <span class=\"comment\">// 将字节数组复制到缓冲区</span></span><br><span class=\"line\">        writeBuffer.put(request);</span><br><span class=\"line\">        <span class=\"comment\">// flip读写切换操作</span></span><br><span class=\"line\">        writeBuffer.flip();</span><br><span class=\"line\">        sc.write(writeBuffer);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!writeBuffer.hasRemaining()) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"写入完成\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"Java-項目管理和構建\"><a href=\"#Java-項目管理和構建\" class=\"headerlink\" title=\"Java 項目管理和構建\"></a>Java 項目管理和構建</h2><h3 id=\"Maven-项目\"><a href=\"#Maven-项目\" class=\"headerlink\" title=\"Maven 项目\"></a>Maven 项目</h3><p><strong>（1）安装</strong></p>\n<p>從 <a href=\"https://maven.apache.org/download.cgi\" target=\"_blank\" rel=\"noopener\">Maven 官網</a>下載 maven 包，解壓並設置環境變量。還可以直接使用 IDEA 的 Maven 插件。</p>\n<p><strong>（2）初始化一個 Maven 項目</strong></p>\n<p>使用以下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">mvn -B archetype:generate -DgroupId=com.mycompany.app -DartifactId=my-app -DarchetypeArtifactId=maven-archetype-quickstart -DarchetypeVersion=1.4</span><br></pre></td></tr></table></figure>\n\n<p>或者用 IDEA 直接新建一個 Maven 項目，其結構如下：</p>\n<p><img src=\"/2020/12/02/it/java/java-basic/20201114_101407.png\" alt></p>\n<p>其中 pom.xml 的內容如下：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">project</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://maven.apache.org/POM/4.0.0\"</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">modelVersion</span>&gt;</span>4.0.0<span class=\"tag\">&lt;/<span class=\"name\">modelVersion</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.example<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>testmaven<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--  添加以下屬性，解決編譯報錯  --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class=\"tag\">&lt;/<span class=\"name\">project.build.sourceEncoding</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">maven.compiler.encoding</span>&gt;</span>UTF-8<span class=\"tag\">&lt;/<span class=\"name\">maven.compiler.encoding</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">java.version</span>&gt;</span>15<span class=\"tag\">&lt;/<span class=\"name\">java.version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">maven.compiler.source</span>&gt;</span>15<span class=\"tag\">&lt;/<span class=\"name\">maven.compiler.source</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">maven.compiler.target</span>&gt;</span>15<span class=\"tag\">&lt;/<span class=\"name\">maven.compiler.target</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 新增依賴在下方 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.openjdk.jol<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jol-core<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.14<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">project</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>為什麼叫 Maven？</p>\n<p>  Maven 來源於意第緒語，爲「行家」的意思。最初是為了簡化 Jakarta Turbine 項目中的構建過程而建立。Maven 使用項目對象模型（POM）和一組插件來構件項目。</p>\n</li>\n<li><p>POM 又是指什麼？</p>\n<p>  POM（project object model）項目對象模型，maven 使用 <code>pom.xml</code> 定義了整個項目的構建、報告和文檔。</p>\n</li>\n</ul>\n<p><strong>（3）編譯測試打包</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 清理 target 中的文件</span></span><br><span class=\"line\">mvn clean</span><br><span class=\"line\"><span class=\"comment\"># 編譯 java 文件成 class 文件，置於 target/classes 文件夾中</span></span><br><span class=\"line\">mvn compile</span><br><span class=\"line\"><span class=\"comment\"># 進行單元測試</span></span><br><span class=\"line\">mvn <span class=\"built_in\">test</span></span><br><span class=\"line\"><span class=\"comment\"># 打包成 jar 文件，置於 target 文件夾中</span></span><br><span class=\"line\">mvn package</span><br><span class=\"line\"><span class=\"comment\"># 安裝 jar 包到本地存儲庫（$&#123;user.home&#125;/.m2/repository）</span></span><br><span class=\"line\">mvn install</span><br><span class=\"line\"><span class=\"comment\"># 生成自己的 maven 站點</span></span><br><span class=\"line\">mvn site</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>SNAPSHOT 是什麼？</p>\n<p>  snapshot 簡要的意思，在版本號之後添加 <code>-SNAPSHOT</code> 是說明該版本仍處於開發階段，不是最終的發行版本。以 <code>x.y-SNAPSHOT</code> 版本為例，發行時會去除 <code>-SNAPSHOT</code>  後綴，然後將最新的開發版本升爲<code>x.(y+1)-SNAPSHOT</code> 。</p>\n</li>\n<li><p>使用 mvn compile 生成的 jar 包，其內容是怎樣的？</p>\n<p>  除了 class 文件外，還有 <code>META-INF</code> 文件夾，裏面存放一些清單文件和pom 文件。存放到項目資源文件夾（<code>main/resources</code> ）的文件也會被打包到<code>META-INF</code> 文件夾中，代碼中可通過<code>getClass().getResourceAsStream( &quot;/application.properties&quot; )</code> 調用。</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ jar tf target/testmaven-1.0-SNAPSHOT.jar </span><br><span class=\"line\">META-INF/</span><br><span class=\"line\">META-INF/MANIFEST.MF</span><br><span class=\"line\">B.class</span><br><span class=\"line\">MemoryLayoutTest.class</span><br><span class=\"line\">A.class</span><br><span class=\"line\">C.class</span><br><span class=\"line\">META-INF/maven/</span><br><span class=\"line\">META-INF/maven/org.example/</span><br><span class=\"line\">META-INF/maven/org.example/testmaven/</span><br><span class=\"line\">META-INF/maven/org.example/testmaven/pom.xml</span><br><span class=\"line\">META-INF/maven/org.example/testmaven/pom.properties</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h3 id=\"Gradle-项目\"><a href=\"#Gradle-项目\" class=\"headerlink\" title=\"Gradle 项目\"></a>Gradle 项目</h3><p><strong>（1）安裝</strong></p>\n<p>可從 <a href=\"https://www.gradle.org/downloads\" target=\"_blank\" rel=\"noopener\">gradle 官網</a>下載解壓並配置環境變量的方式安裝。Mac 用戶還可以使用 <code>brew install gradle</code> 的方式安裝。或者直接使用 IDEA 項目中的 <code>gradle-wrapper</code> ，此時對應的 <code>gradle</code> 命令變爲 <code>gradlew</code>。</p>\n<p><strong>（2）gradle 命令能做什麼？</strong></p>\n<p>gradle 命令能構建項目， 查看項目依賴、子項目和項目配置等等。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ gradle tasks</span><br><span class=\"line\"></span><br><span class=\"line\">:tasks</span><br><span class=\"line\"></span><br><span class=\"line\">== All tasks runnable from root project</span><br><span class=\"line\"></span><br><span class=\"line\">== Build Setup tasks</span><br><span class=\"line\">setupBuild - Initializes a new Gradle build. [incubating]</span><br><span class=\"line\"></span><br><span class=\"line\">== Help tasks</span><br><span class=\"line\">dependencies - Displays all dependencies declared <span class=\"keyword\">in</span> root project <span class=\"string\">'gs-gradle'</span>.</span><br><span class=\"line\">dependencyInsight - Displays the insight into a specific dependency <span class=\"keyword\">in</span> root project <span class=\"string\">'gs-gradle'</span>.</span><br><span class=\"line\"><span class=\"built_in\">help</span> - Displays a <span class=\"built_in\">help</span> message</span><br><span class=\"line\">projects - Displays the sub-projects of root project <span class=\"string\">'gs-gradle'</span>.</span><br><span class=\"line\">properties - Displays the properties of root project <span class=\"string\">'gs-gradle'</span>.</span><br><span class=\"line\">tasks - Displays the tasks runnable from root project <span class=\"string\">'gs-gradle'</span>.</span><br><span class=\"line\"></span><br><span class=\"line\">To see all tasks and more detail, run with --all.</span><br><span class=\"line\"></span><br><span class=\"line\">BUILD SUCCESSFUL</span><br><span class=\"line\"></span><br><span class=\"line\">Total time: 3.077 secs</span><br></pre></td></tr></table></figure>\n\n<p><strong>（3）初始化一個 Gradle 項目</strong></p>\n<p>在項目文件夾中新建一個名爲 <code>build.gradle</code> 的文件，其內容如下：</p>\n<figure class=\"highlight groovy\"><table><tr><td class=\"code\"><pre><span class=\"line\">apply <span class=\"string\">plugin:</span> <span class=\"string\">'java'</span></span><br></pre></td></tr></table></figure>\n\n<p>隨後新建一個名爲 <code>settings.gradle</code> 的文件，其內容可暫時爲空。</p>\n<p>在 IDEA 中打開此項目，隨後 IDEA 會自動配置加入 <code>gradle-wrapper</code> ，其過程等價於執行以下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">gradle wrapper --gradle-version 6.5</span><br></pre></td></tr></table></figure>\n\n<p><strong>（4）編譯打包</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 編譯項目，會默認在 build/classes 中生成類文件，在 build/libs 中生成 jar 包</span></span><br><span class=\"line\">gradle build</span><br><span class=\"line\"><span class=\"comment\"># 或使用 gradle wrapper</span></span><br><span class=\"line\">./gradlew build</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 清理生成的文件</span></span><br><span class=\"line\">gradle clean</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 生成 jar 文件</span></span><br><span class=\"line\">gradle jar</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 運行生成的 jar 文件</span></span><br><span class=\"line\">gradle run</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 進行單元測試</span></span><br><span class=\"line\">gradle <span class=\"built_in\">test</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>（5）<code>build.gradle</code> 中可配置什麼？</strong></p>\n<figure class=\"highlight groovy\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 配置插件，插件提供語法定義</span></span><br><span class=\"line\">apply <span class=\"string\">plugin:</span> <span class=\"string\">'java'</span></span><br><span class=\"line\">apply <span class=\"string\">plugin:</span> <span class=\"string\">'application'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 配置入口類</span></span><br><span class=\"line\">mainClassName = <span class=\"string\">'hello.HelloWorld'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 配置依賴倉庫</span></span><br><span class=\"line\">repositories &#123;</span><br><span class=\"line\">    mavenCentral()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 配置生成的 jar 文件的入口類</span></span><br><span class=\"line\">jar &#123;</span><br><span class=\"line\">    manifest &#123;</span><br><span class=\"line\">        attributes <span class=\"string\">'Main-Class'</span>: mainClassName</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 配置 JDK 兼容性</span></span><br><span class=\"line\">sourceCompatibility = <span class=\"number\">1.8</span></span><br><span class=\"line\">targetCompatibility = <span class=\"number\">1.8</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 配置依賴</span></span><br><span class=\"line\">dependencies &#123;</span><br><span class=\"line\">    compile <span class=\"string\">\"joda-time:joda-time:2.2\"</span></span><br><span class=\"line\">    testCompile <span class=\"string\">\"junit:junit:4.12\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>如需將所有依賴 jar 打進同一個 jar 包，可使用 <a href=\"https://github.com/johnrengelman/shadow\" target=\"_blank\" rel=\"noopener\">shadow 插件</a>或使用 <a href=\"https://spring.io/quickstart\" target=\"_blank\" rel=\"noopener\">spring boot 插件</a>。</p>"},{"title":"在潮劇中學之《玉堂春》","p":"language/min/teochew-opera-ghêgdengcung","_content":"\n潮劇自明朝已然形成，發展到現在有近 500 年的歷史，據統計截止 2007 年 6 月已有超過 5000 個劇目。明朝嘉靖丙寅年（1566年）刊本的《荔鏡記》，是迄今所能見到的最早一個運用「泉潮腔」演唱的演出劇本。它於 2006 年被列入首批國家級非物質文化遺產保護名錄。\n\n潮劇的語音特點是：最早的潮劇基本上是以潮州府城音爲主要音系來表演的，但迴避了潮州音的最明顯的特徵音韻母——潮州府城話的 iêng/iêg、uêng/uêg、iêm/iêb 等韻母，換成了跟其他方言相同的 iang/iag、uang/uag 和 iam/iab 韻母。然後，還參雜了揭陽話的一些特點。（引自林倫倫《潮劇是用哪個地方的方言來演唱的？》）\n\n今日要講的是明朝一段跟名妓玉堂春有關的冤案。請看視頻（時長 4:35:52）：\n<iframe width=\"720\" height=\"480\" src=\"https://www.youtube.com/embed/_F8IQgDZjnw\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\n<!--more-->\n\n## 故事概要\n蘇三，花名玉堂春，原名周玉潔，明朝山西大同府周家莊人，因被販賣到燕京的「蘇淮妓院」而改姓蘇，又在妓女中排行第三，是爲蘇三。在馮夢龍版的故事裏，故事的男主角叫王景隆，其父令其到燕京收債，得銀三萬兩，遂到妓院尋歡，傾盡身資，佔有了才貌雙全的蘇三，兩人許下山盟海誓。不到一年，身資喪盡，被鴇婆趕出妓院。蘇三勸王景隆考取功名，王景隆回到金陵，奮發圖強，上京趕考，中了進士，選任真定府理刑判官。後爲父所迫，娶了劉都堂之女爲妻。\n\n另一方面，蘇三被老鴇以白銀一千兩百兩賣給山西洪洞縣馬販沈洪爲妾，因記與王景隆之山盟，不肯與沈洪同牀。沈洪正室皮氏與趙監生昴有姦情，聯合毒害了沈洪，並栽贓給蘇三，賄賂官府。蘇三遂入獄。\n\n恰逢王景隆改任山西八府巡按，得知蘇三犯了死罪，感念昔日恩情，微服私訪，探查蘇三冤情，後命縣衙起解蘇三等到太原府三堂會審。後沉冤昭雪，知縣被革職查辦，趙昴、皮氏被正法，蘇三獲釋。\n\n在各大劇中，王景隆被改爲王金龍，潮劇也不例外。潮劇中故事情節多有改動，但大體如此。本次欣賞的是林初發飾演王金龍、張儀鳳飾演蘇三的版本，唱腔依循黃欽賜，可從梅雪亭中「風啊……，風卷松聲魂欲銷，愁人慘境筆墨難描」唱段看出。\n\n網絡上蒐集的潮劇《玉堂春》相關歷史脈絡：\n- 明朝，馮夢龍《警世通言》第24卷《玉堂春落難逢夫》。\n- 20世紀30年代，**林如烈**編導《王金龍》，即《玉堂春》。\n-  1962年，潮劇元華潮劇團排演《梅亭雪》。該折子戲以林如烈的《玉堂春》中「雪淚情天」一折爲藍本。劇本整理謝吟、王老漢（王菲）、何苦（吳南生），作曲黃玉鬥、金林表、吳錫有，導演翁炳林。\n- 1981年，廣東潮劇院整理《梅亭雪》。劇本整理謝吟、王菲、鄭文風，唱腔設計**黃欽賜**，導演吳峰。由姚璇秋、鄭小霞飾蘇三，陳麗華、陳瑜飾王金龍，李有存、鄭蔡岳、林建東飾獄吏，謝素貞、馬嬋如飾獄婆。林如烈的雪淚情天，以「風打松聲儂心焦，愁人慘境筆墨難描」爲開始，是爲「如烈曲」；黃欽賜的梅亭雪，以「風啊……，風卷松聲魂欲銷，愁人慘境筆墨難描」爲開始。\n\n## 潮劇筆記\n\n### 上集第一場 \n故事概要：鴇婆強迫蘇三梳攏接客，蘇三拒絕遭打。王金龍出銀百兩解救蘇三，與蘇三一見鍾情。\n1. 5:01 衋(gêg⁴)心：傷心。\n2. 5:13 煩惱(huang⁵ lo²)：擔心。\n3. 5:22 變(bin³)作寶。\n4. 5:44 相(siên³)輔：幫忙。\n5. 5:58 祭到這老：吃到這麼老。祭，七月半祭孤，餓鬼來享用食物。所以用「祭孤」/「祭」來指人像餓鬼一般狼吞虎嚥或者沒有勞動坐享其成。\n6. 7:24 鴇(bao²)婆。\n7. 9:12 人客：客人。\n8. 10:10 雨來囉：不是說真的雨來了，通常在認爲別人的話語或行爲不合邏輯或不合時宜時會這樣出言制止。\n9. 10:31 梳攏(siu¹ lang⁵)：指妓女首次接客。妓院中處女只梳辮，接客後梳髻，稱「梳攏」。\n10. 10:55 十五貫錢，買作菜脯，儉儉好食一年。\n11. 10:59 鄙相(pi² siên³)：看人低賤，抑是用話來罵人低賤的意思。同義的有「睇相」。\n12. 11:27 個面七個空，怎知汝是乜人。\n13. 11:37 縣衙(guin⁷ ghê⁵)。\n14. 11:41 頭欹欹(ki¹)：歪頭狀。\n15. 11:57 常來常往，若敢胡來，就著知慘。\n16. 12:47 稍(ciao²)候。\n17. 13:10 至切：一定。如：至切勿上錯牀。\n18. 15:04 吃(ngeg⁴)。\n19. 15:48 參詳：商量。如：這事好參詳。\n20. 15:49 偪側(bêg⁴ cêg⁴)：逼迫。\n21. 16:14 娉婷(pêng³ têng⁵)。\n22. 16:53 後生人：年輕人。\n23. 16:54 通朗(tang¹ lang⁵)：洞明事理。如：呾話唔通朗。\n24. 17:03 愈更：更加。如：愈更胡說。\n25. 17:20 強扭之瓜不甜，強掰之花不香。\n26. 17:37 翹楚：翹，高出仰起。楚，荊木，可做杖。翹楚是高出一般灌木的荊木。喻指厲害、超群。如：你若翹楚，同樣𢭪(kiêh⁸ 拿)出三十兩銀。\n\n### 上集第二場\n故事概要：王金龍三萬兩銀錢爲蘇三建了留春院北樓，飲酒作樂過了一年。其父發覺後到留春院將其掠回處置。\n1. 21:14王(hêng⁵)瓊。\n2. 23:09 才華洋溢(iang⁵ êg⁸)。\n3. 25:12 鴛鴦(uang¹ iang¹)。\n4. 27:56 絢(sung¹)麗。\n5. 28:09 秦樓楚館煙(ing¹)花地。\n6. 30:30 銅錢落草草會青，豈容坐食破大家。\n7. 30:42 仔細：客氣。如：免仔細。\n8. 30:43 熟人免行生(cên¹)禮(loi²)。\n9. 32:02 一朝無食夫妻無義。\n10. 33:33 沈溺(dim⁵ nêg⁸)。\n11. 33:33 紈絝(iang⁵ kou³)子弟。\n12. 33:51 戰戰兢兢(kêng¹)。\n13. 35:08 食罪陷百罹(li⁵)。\n14. 38:15 鵬程(pong⁵ têng⁵)。\n15. 38:30 擔承：承擔。\n16. 39:25 畜(têg⁴)生。\n17. 40:00 戲歇棚拆：比喻世態炎涼，人情淡薄，類似的有「人走茶涼」。\n18. 40:13 如其不然。\n\n### 上集第三場 關王廟♥️\n![](teochew-opera-ghêgdengcung/2020-10-14-12.41.34.png)\n故事概要：蘇三以爲王金龍已被其父打死，遂前往關王廟祭奠王金龍。而殊不知王金龍僥倖逃脫，淪落爲乞丐，剛好也在關王廟。蘇三勸王金龍應效仿呂蒙正去考取功名。\n1. 41:40 奇事年年有，無年奇相同。\n2. 42:00 花子(hua¹ ze²)：叫花子。\n3. 42:13 庵寺：尼寺、僧寺的通稱。\n4. 42:24 照書行事。\n5. 44:42 膠漆(ga¹ cag⁴)。如：情如膠漆割捨不能。\n6. 45:16 殷勤(heng¹ keng⁵)。\n7. 46:57 人事不省(sêng³)。\n8. 48:12 五行：面相，處境。\n9. 48:37 忍淚吞聲(sêng¹)。\n10. 49:35 訴(su³)苦。\n11. 49:35 顏(nguang⁵)色。\n12. 50:13 烏雲密佈(bu³)。\n13. 50:24 時運不濟。\n14. 52:21 鶉(sung⁵)衣百結(gag⁴)：鵪鶉小頭禿尾， 羽毛赤褐色，雜有暗黃色斑點和條文，像一件沒有下擺，布滿補丁的衣服。形容衣服破爛不堪。\n15. 53:52 坫(diam³)：躲藏。如：走去坫牀下。\n16. 55:09 祭奠(diang⁶)。\n17. 56:14 齊備(ci⁵ bi⁶)：齊全完備。\n18. 56:21 包山包海：包攬全活。如：爲儉錢銀，一人包山包海。\n19. 1:00:27 愁雲冉冉難見晴空。\n20. 1:00:49 飛禍疊(tah⁸)至慘無窮。\n21. 1:01:13 噩耗(ngag⁸ ho³)。\n22. 1:04:35 衣衫襤褸(nam⁵ nu²)。\n23. 1:05:08 邂逅(hai⁶ hou⁶)。\n24. 1:05:44 一霎(siab⁴)時。\n25. 1:07:09 果(guan²)然。\n26. 1:07:17 妾願隨君陰曹去，從此聚首不分離。\n27. 1:09:23 嗟嘆(za¹ tam³)。\n28. 1:09:55 寂寞(sog⁴ mog⁸)。\n29. 1:10:49 啜(coih⁴)泣。\n30. 1:11:43 甌：大碗。\n31. 1:11:44 箸：筷子。\n32. 1:13:22 朱買臣：字翁子，西漢會稽吳人。家貧好學，以賣薪自給，妻羞之，改適他人，後買臣顯貴，婦慚，自縊而死；買臣官至丞相長史，因與張湯相傾軋，遭誅殺。\n33. 1:13:33 呂蒙正(mong⁵ zêng³)：宋朝人，自幼父母雙亡，因此淪落爲乞丐，但其非常好學，把分來的錢都會拿去買書。因其在尚未發達當官之前，白天乞討，並投靠於佛院，晚上住於破窯。\n34. 1:16:52 鄭元和：元石君寶李亞仙花酒曲江池雜劇中的人物。鄭元和爲洛陽府尹鄭公弼的兒子，因與妓女李亞仙相戀，以致散盡錢財，荒廢學業，淪爲乞丐。歷盡一番滄桑後，終在李亞仙的鼓勵下，專心向學，得以應試高中，返家團圓。\n\n### 上集第四場\n故事概要：蘇三被留春院賣給馬販沈洪爲妾。王金龍回鄉備考，途中盤纏被劫。\n1. 1:19:22 未是孥囝砌宮闈，騙汝好怎呢？\n2. 1:19:48 排比：不是指修辭手法，而是安排的意思。《全唐詩．卷七九八．花蕊夫人．宮詞》：「今宵駕幸池頭宿，排比椒房得暖無。」\n3. 1:22:48 主僕(bog⁸)。\n4. 1:22:58 擺踩：調侃、嘲弄、嘲諷、批評。「踩」字存疑。如：奴才，敢掠阿爺來擺踩。\n5. 1:23:15 會哩開嘴，𠀾就放屁，一旁咬蝨(sag⁴)。\n6. 1:26:29 惆悵(tiu⁵ ziang³)。\n7. 1:26:46 贖(sog⁸)身。\n8. 1:26:48 解倒懸(dao² hiang⁵)：倒懸，縛人兩足倒掛。比喻極爲困苦。解倒懸比喻解救人於困苦之境。\n9. 1:30:53 主施：不是施主的意思，而是處理的意思。如：進退兩難怎主施？\n\n### 上集第五場\n故事概要：沈洪妻子皮氏下毒麵欲殺蘇三，不料蘇三拒食，湯麵爲沈洪所食，暴斃。\n1. 1:34:11 眼中釘(ding¹/dêng¹)。\n2. 1:40:47 聰穎(kêng²)。\n3. 1:41:22 物輕意重。\n4. 1:42:26 狗母蛇假龍。\n5. 1:42:45 好心分你作歹意。\n6. 1:42:56 皮燈籠，肚內明。\n7. 1:43:45 二山相疊出出出。\n8. 1:48:16 拖三延四。\n9. 1:51:36 糙米錔(tag⁴)空臼(ku⁶)。\n\n### 上集第六場 縣衙公堂\n故事概要：皮氏連同情夫趙監生賄賂縣太爺，蘇三遭屈打成招、打入死牢。\n1. 2:01:17 踉蹌(lang⁵ cang¹)。如：步履踉蹌肝腸斷。\n2. 2:01:17 淚涔涔(ngim⁵)。如：百感交集淚涔涔。\n3. 2:02:53 嫩(lung³)。如：鮮花嫩蕊悅死鬼。\n4. 2:04:25 蛇蠍(hiah⁴)心腸(ciang⁵)。\n5. 2:05:40 好貨墊底。\n6. 2:09:42 砒(bi¹)霜。\n7. 2:11:02 舵(dua⁶)。如：轉舵往回走。\n8. 2:14:41 因依：原委、緣由。如：時晴時雨何因依。\n9. 2:15:21 呼嘯(hu¹ sao³)。如：狂風呼嘯心膽寒。\n10. 2:17:32 死牢(lo⁵)。\n\n### 下集第一場\n故事概要：王金龍中了進士，封官到太原府任巡按。路過洪洞縣，調查蘇三的冤情並命縣令將蘇三起解太原。\n1. 名譽(u⁶)。\n2. 花腳：比喻閒游浪蕩﹑愛串門子的人。如：一個花腳，一個風流。\n3. 蹺蹊(kiao¹ ki¹)：蹊蹺。\n\n### 下集第二場 荒野 ♥️\n![](teochew-opera-ghêgdengcung/2020-10-15-1.10.20.png)\n故事概要：蘇三起解太原。解差程公道知道蘇三的冤情後，中途休息時爲其解開枷鎖，並令其將訴狀放到枷鎖中以避免被搜身。蘇三感恩，認程公道爲乾爹。\n1. 2:35:13 蘇三(sam¹)離了洪洞(tong⁵)境，一步一淚暗傷(siang¹)情。\n2. 2:36:54 跋涉(buag⁸ siab⁴)。\n3. 2:37:35 拚駁：盡力辯駁。\n4. 2:41:20 勿許生哩免這生，欲許生哩著這生。\n5. 2:42:18 含冤負屈。\n6. 2:48:07 顧身都唔離(li⁷)：照顧自己都不能全，無法放開手腳去理會他人。離：放開。\n7. 2:49:18 一死如死，現死駁賒死。\n8. 2:50:53 合(hah⁸)卺(geng²)酒：卺，古代結婚時用作酒器的一種瓢。舊時夫妻結婚的一種儀式，把一個匏瓜剖成兩個瓢，新郎新娘各拿一個飲酒。\n9. 2:51:33 契走囝：乾女兒。走，是諸母(za¹ bhou²，泛指婦女)的合音借詞。\n\n### 下集第三場 太原府公堂 ♥️\n![](teochew-opera-ghêgdengcung/2020-10-15-1.11.30.png)\n故事概要：王巡按金龍，連同按察使何布政使，三司會審蘇三。按察使、布政使戲弄王金龍。\n1. 2:55:28布(bu³)政使(sai³)，官名。\n2. 2:59:24寸步難行(hêng⁵)。\n3. 3:03:13 昏厥(kiag⁴)。\n4. 3:12:26 修葺(cib⁴)。\n5. 3:16:50 梟(hiao¹)情絕義：無情無義。\n6. 3:20:18 吹毛求疵(cuê¹ mo⁵ kiu⁵ ce⁵)。\n\n### 下集第四場\n故事概要：皮氏到太原按察使劉秉義府，以金環、金釵賄賂其妻。按察使大公無私，設下凍雪計。\n1. 3:28:46 金釵(toi¹)。\n2. 3:29:16 擺宴(ang³)。\n3. 3:31:55 家無常禮(li²)。\n\n### 下集第五場♥️ 城外五里亭（梅亭）\n![](teochew-opera-ghêgdengcung/2020-10-15-1.12.28.png)\n故事概要：蘇三被按察使置於梅亭，是夜，大雪紛飛，天寒地凍。王金龙冒雪前往看望。兩人互訴衷情。按察使暗中觀看，察明案情。\n1. 3:37:56 怨疊疊(tah⁸)，恨重重。\n2. 3:41:05 履(li²)薄衣單(dang¹)。\n3. 3:42:05 證(zêng³)龜成(zian⁵)鱉：將烏龜說成甲魚，比喻蓄意歪曲，顛倒是非。同義詞有「指鹿爲馬」。\n4. 3:44:04 坐摩(mua⁵)些。摩，近。\n5. 3:46:11 風呀……風卷松聲魂欲銷，愁人慘境筆墨難描。\n6. 3:55:39 啱(ngam¹)：恰好。\n7. 3.58:33得魚忘筌(cuang⁵)：指捕得到了魚，便忘掉了用來捕魚的筌。比喻悟道者忘其形骸。也比喻人在達到目的以後，就忘記他賴以成功的憑藉。\n8. 4:01:06 假惺惺(sêng¹)。\n9. 4:01:07 寒夜無燈心自明。\n10. 4:08:46 失寵(tong²)。\n11. 4:17:10 珍重(diang¹ dong⁶)。\n12. 4:19:12 草芥(gai⁶)。如：功名利祿如草芥。\n\n### 下集第六場\n故事概要：三司再審蘇三案，眾招供，皮巧英被判終生監禁，趙監生被判秋後處斬，洪洞縣縣令被革職查辦，蘇三無罪釋放。沈冤得雪，歌舞收場。\n1. 4:21:35 親幫親，鄰幫鄰，老鼠幫戶蠅。戶蠅，蒼蠅。\n2. 4:27:25 馬入中宮(dong¹ giong¹)，𠀾死必凶。\n3. 4:30:06 助紂(diu⁶)爲虐(ngiag⁸)。\n","source":"_posts/language/min/teochew-opera-ghêgdengcung.md","raw":"---\ntitle: 在潮劇中學之《玉堂春》\np: language/min/teochew-opera-ghêgdengcung\ntags:\n- 潮劇\n- 潮州話\n- 閩南語\n---\n\n潮劇自明朝已然形成，發展到現在有近 500 年的歷史，據統計截止 2007 年 6 月已有超過 5000 個劇目。明朝嘉靖丙寅年（1566年）刊本的《荔鏡記》，是迄今所能見到的最早一個運用「泉潮腔」演唱的演出劇本。它於 2006 年被列入首批國家級非物質文化遺產保護名錄。\n\n潮劇的語音特點是：最早的潮劇基本上是以潮州府城音爲主要音系來表演的，但迴避了潮州音的最明顯的特徵音韻母——潮州府城話的 iêng/iêg、uêng/uêg、iêm/iêb 等韻母，換成了跟其他方言相同的 iang/iag、uang/uag 和 iam/iab 韻母。然後，還參雜了揭陽話的一些特點。（引自林倫倫《潮劇是用哪個地方的方言來演唱的？》）\n\n今日要講的是明朝一段跟名妓玉堂春有關的冤案。請看視頻（時長 4:35:52）：\n<iframe width=\"720\" height=\"480\" src=\"https://www.youtube.com/embed/_F8IQgDZjnw\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\n<!--more-->\n\n## 故事概要\n蘇三，花名玉堂春，原名周玉潔，明朝山西大同府周家莊人，因被販賣到燕京的「蘇淮妓院」而改姓蘇，又在妓女中排行第三，是爲蘇三。在馮夢龍版的故事裏，故事的男主角叫王景隆，其父令其到燕京收債，得銀三萬兩，遂到妓院尋歡，傾盡身資，佔有了才貌雙全的蘇三，兩人許下山盟海誓。不到一年，身資喪盡，被鴇婆趕出妓院。蘇三勸王景隆考取功名，王景隆回到金陵，奮發圖強，上京趕考，中了進士，選任真定府理刑判官。後爲父所迫，娶了劉都堂之女爲妻。\n\n另一方面，蘇三被老鴇以白銀一千兩百兩賣給山西洪洞縣馬販沈洪爲妾，因記與王景隆之山盟，不肯與沈洪同牀。沈洪正室皮氏與趙監生昴有姦情，聯合毒害了沈洪，並栽贓給蘇三，賄賂官府。蘇三遂入獄。\n\n恰逢王景隆改任山西八府巡按，得知蘇三犯了死罪，感念昔日恩情，微服私訪，探查蘇三冤情，後命縣衙起解蘇三等到太原府三堂會審。後沉冤昭雪，知縣被革職查辦，趙昴、皮氏被正法，蘇三獲釋。\n\n在各大劇中，王景隆被改爲王金龍，潮劇也不例外。潮劇中故事情節多有改動，但大體如此。本次欣賞的是林初發飾演王金龍、張儀鳳飾演蘇三的版本，唱腔依循黃欽賜，可從梅雪亭中「風啊……，風卷松聲魂欲銷，愁人慘境筆墨難描」唱段看出。\n\n網絡上蒐集的潮劇《玉堂春》相關歷史脈絡：\n- 明朝，馮夢龍《警世通言》第24卷《玉堂春落難逢夫》。\n- 20世紀30年代，**林如烈**編導《王金龍》，即《玉堂春》。\n-  1962年，潮劇元華潮劇團排演《梅亭雪》。該折子戲以林如烈的《玉堂春》中「雪淚情天」一折爲藍本。劇本整理謝吟、王老漢（王菲）、何苦（吳南生），作曲黃玉鬥、金林表、吳錫有，導演翁炳林。\n- 1981年，廣東潮劇院整理《梅亭雪》。劇本整理謝吟、王菲、鄭文風，唱腔設計**黃欽賜**，導演吳峰。由姚璇秋、鄭小霞飾蘇三，陳麗華、陳瑜飾王金龍，李有存、鄭蔡岳、林建東飾獄吏，謝素貞、馬嬋如飾獄婆。林如烈的雪淚情天，以「風打松聲儂心焦，愁人慘境筆墨難描」爲開始，是爲「如烈曲」；黃欽賜的梅亭雪，以「風啊……，風卷松聲魂欲銷，愁人慘境筆墨難描」爲開始。\n\n## 潮劇筆記\n\n### 上集第一場 \n故事概要：鴇婆強迫蘇三梳攏接客，蘇三拒絕遭打。王金龍出銀百兩解救蘇三，與蘇三一見鍾情。\n1. 5:01 衋(gêg⁴)心：傷心。\n2. 5:13 煩惱(huang⁵ lo²)：擔心。\n3. 5:22 變(bin³)作寶。\n4. 5:44 相(siên³)輔：幫忙。\n5. 5:58 祭到這老：吃到這麼老。祭，七月半祭孤，餓鬼來享用食物。所以用「祭孤」/「祭」來指人像餓鬼一般狼吞虎嚥或者沒有勞動坐享其成。\n6. 7:24 鴇(bao²)婆。\n7. 9:12 人客：客人。\n8. 10:10 雨來囉：不是說真的雨來了，通常在認爲別人的話語或行爲不合邏輯或不合時宜時會這樣出言制止。\n9. 10:31 梳攏(siu¹ lang⁵)：指妓女首次接客。妓院中處女只梳辮，接客後梳髻，稱「梳攏」。\n10. 10:55 十五貫錢，買作菜脯，儉儉好食一年。\n11. 10:59 鄙相(pi² siên³)：看人低賤，抑是用話來罵人低賤的意思。同義的有「睇相」。\n12. 11:27 個面七個空，怎知汝是乜人。\n13. 11:37 縣衙(guin⁷ ghê⁵)。\n14. 11:41 頭欹欹(ki¹)：歪頭狀。\n15. 11:57 常來常往，若敢胡來，就著知慘。\n16. 12:47 稍(ciao²)候。\n17. 13:10 至切：一定。如：至切勿上錯牀。\n18. 15:04 吃(ngeg⁴)。\n19. 15:48 參詳：商量。如：這事好參詳。\n20. 15:49 偪側(bêg⁴ cêg⁴)：逼迫。\n21. 16:14 娉婷(pêng³ têng⁵)。\n22. 16:53 後生人：年輕人。\n23. 16:54 通朗(tang¹ lang⁵)：洞明事理。如：呾話唔通朗。\n24. 17:03 愈更：更加。如：愈更胡說。\n25. 17:20 強扭之瓜不甜，強掰之花不香。\n26. 17:37 翹楚：翹，高出仰起。楚，荊木，可做杖。翹楚是高出一般灌木的荊木。喻指厲害、超群。如：你若翹楚，同樣𢭪(kiêh⁸ 拿)出三十兩銀。\n\n### 上集第二場\n故事概要：王金龍三萬兩銀錢爲蘇三建了留春院北樓，飲酒作樂過了一年。其父發覺後到留春院將其掠回處置。\n1. 21:14王(hêng⁵)瓊。\n2. 23:09 才華洋溢(iang⁵ êg⁸)。\n3. 25:12 鴛鴦(uang¹ iang¹)。\n4. 27:56 絢(sung¹)麗。\n5. 28:09 秦樓楚館煙(ing¹)花地。\n6. 30:30 銅錢落草草會青，豈容坐食破大家。\n7. 30:42 仔細：客氣。如：免仔細。\n8. 30:43 熟人免行生(cên¹)禮(loi²)。\n9. 32:02 一朝無食夫妻無義。\n10. 33:33 沈溺(dim⁵ nêg⁸)。\n11. 33:33 紈絝(iang⁵ kou³)子弟。\n12. 33:51 戰戰兢兢(kêng¹)。\n13. 35:08 食罪陷百罹(li⁵)。\n14. 38:15 鵬程(pong⁵ têng⁵)。\n15. 38:30 擔承：承擔。\n16. 39:25 畜(têg⁴)生。\n17. 40:00 戲歇棚拆：比喻世態炎涼，人情淡薄，類似的有「人走茶涼」。\n18. 40:13 如其不然。\n\n### 上集第三場 關王廟♥️\n![](teochew-opera-ghêgdengcung/2020-10-14-12.41.34.png)\n故事概要：蘇三以爲王金龍已被其父打死，遂前往關王廟祭奠王金龍。而殊不知王金龍僥倖逃脫，淪落爲乞丐，剛好也在關王廟。蘇三勸王金龍應效仿呂蒙正去考取功名。\n1. 41:40 奇事年年有，無年奇相同。\n2. 42:00 花子(hua¹ ze²)：叫花子。\n3. 42:13 庵寺：尼寺、僧寺的通稱。\n4. 42:24 照書行事。\n5. 44:42 膠漆(ga¹ cag⁴)。如：情如膠漆割捨不能。\n6. 45:16 殷勤(heng¹ keng⁵)。\n7. 46:57 人事不省(sêng³)。\n8. 48:12 五行：面相，處境。\n9. 48:37 忍淚吞聲(sêng¹)。\n10. 49:35 訴(su³)苦。\n11. 49:35 顏(nguang⁵)色。\n12. 50:13 烏雲密佈(bu³)。\n13. 50:24 時運不濟。\n14. 52:21 鶉(sung⁵)衣百結(gag⁴)：鵪鶉小頭禿尾， 羽毛赤褐色，雜有暗黃色斑點和條文，像一件沒有下擺，布滿補丁的衣服。形容衣服破爛不堪。\n15. 53:52 坫(diam³)：躲藏。如：走去坫牀下。\n16. 55:09 祭奠(diang⁶)。\n17. 56:14 齊備(ci⁵ bi⁶)：齊全完備。\n18. 56:21 包山包海：包攬全活。如：爲儉錢銀，一人包山包海。\n19. 1:00:27 愁雲冉冉難見晴空。\n20. 1:00:49 飛禍疊(tah⁸)至慘無窮。\n21. 1:01:13 噩耗(ngag⁸ ho³)。\n22. 1:04:35 衣衫襤褸(nam⁵ nu²)。\n23. 1:05:08 邂逅(hai⁶ hou⁶)。\n24. 1:05:44 一霎(siab⁴)時。\n25. 1:07:09 果(guan²)然。\n26. 1:07:17 妾願隨君陰曹去，從此聚首不分離。\n27. 1:09:23 嗟嘆(za¹ tam³)。\n28. 1:09:55 寂寞(sog⁴ mog⁸)。\n29. 1:10:49 啜(coih⁴)泣。\n30. 1:11:43 甌：大碗。\n31. 1:11:44 箸：筷子。\n32. 1:13:22 朱買臣：字翁子，西漢會稽吳人。家貧好學，以賣薪自給，妻羞之，改適他人，後買臣顯貴，婦慚，自縊而死；買臣官至丞相長史，因與張湯相傾軋，遭誅殺。\n33. 1:13:33 呂蒙正(mong⁵ zêng³)：宋朝人，自幼父母雙亡，因此淪落爲乞丐，但其非常好學，把分來的錢都會拿去買書。因其在尚未發達當官之前，白天乞討，並投靠於佛院，晚上住於破窯。\n34. 1:16:52 鄭元和：元石君寶李亞仙花酒曲江池雜劇中的人物。鄭元和爲洛陽府尹鄭公弼的兒子，因與妓女李亞仙相戀，以致散盡錢財，荒廢學業，淪爲乞丐。歷盡一番滄桑後，終在李亞仙的鼓勵下，專心向學，得以應試高中，返家團圓。\n\n### 上集第四場\n故事概要：蘇三被留春院賣給馬販沈洪爲妾。王金龍回鄉備考，途中盤纏被劫。\n1. 1:19:22 未是孥囝砌宮闈，騙汝好怎呢？\n2. 1:19:48 排比：不是指修辭手法，而是安排的意思。《全唐詩．卷七九八．花蕊夫人．宮詞》：「今宵駕幸池頭宿，排比椒房得暖無。」\n3. 1:22:48 主僕(bog⁸)。\n4. 1:22:58 擺踩：調侃、嘲弄、嘲諷、批評。「踩」字存疑。如：奴才，敢掠阿爺來擺踩。\n5. 1:23:15 會哩開嘴，𠀾就放屁，一旁咬蝨(sag⁴)。\n6. 1:26:29 惆悵(tiu⁵ ziang³)。\n7. 1:26:46 贖(sog⁸)身。\n8. 1:26:48 解倒懸(dao² hiang⁵)：倒懸，縛人兩足倒掛。比喻極爲困苦。解倒懸比喻解救人於困苦之境。\n9. 1:30:53 主施：不是施主的意思，而是處理的意思。如：進退兩難怎主施？\n\n### 上集第五場\n故事概要：沈洪妻子皮氏下毒麵欲殺蘇三，不料蘇三拒食，湯麵爲沈洪所食，暴斃。\n1. 1:34:11 眼中釘(ding¹/dêng¹)。\n2. 1:40:47 聰穎(kêng²)。\n3. 1:41:22 物輕意重。\n4. 1:42:26 狗母蛇假龍。\n5. 1:42:45 好心分你作歹意。\n6. 1:42:56 皮燈籠，肚內明。\n7. 1:43:45 二山相疊出出出。\n8. 1:48:16 拖三延四。\n9. 1:51:36 糙米錔(tag⁴)空臼(ku⁶)。\n\n### 上集第六場 縣衙公堂\n故事概要：皮氏連同情夫趙監生賄賂縣太爺，蘇三遭屈打成招、打入死牢。\n1. 2:01:17 踉蹌(lang⁵ cang¹)。如：步履踉蹌肝腸斷。\n2. 2:01:17 淚涔涔(ngim⁵)。如：百感交集淚涔涔。\n3. 2:02:53 嫩(lung³)。如：鮮花嫩蕊悅死鬼。\n4. 2:04:25 蛇蠍(hiah⁴)心腸(ciang⁵)。\n5. 2:05:40 好貨墊底。\n6. 2:09:42 砒(bi¹)霜。\n7. 2:11:02 舵(dua⁶)。如：轉舵往回走。\n8. 2:14:41 因依：原委、緣由。如：時晴時雨何因依。\n9. 2:15:21 呼嘯(hu¹ sao³)。如：狂風呼嘯心膽寒。\n10. 2:17:32 死牢(lo⁵)。\n\n### 下集第一場\n故事概要：王金龍中了進士，封官到太原府任巡按。路過洪洞縣，調查蘇三的冤情並命縣令將蘇三起解太原。\n1. 名譽(u⁶)。\n2. 花腳：比喻閒游浪蕩﹑愛串門子的人。如：一個花腳，一個風流。\n3. 蹺蹊(kiao¹ ki¹)：蹊蹺。\n\n### 下集第二場 荒野 ♥️\n![](teochew-opera-ghêgdengcung/2020-10-15-1.10.20.png)\n故事概要：蘇三起解太原。解差程公道知道蘇三的冤情後，中途休息時爲其解開枷鎖，並令其將訴狀放到枷鎖中以避免被搜身。蘇三感恩，認程公道爲乾爹。\n1. 2:35:13 蘇三(sam¹)離了洪洞(tong⁵)境，一步一淚暗傷(siang¹)情。\n2. 2:36:54 跋涉(buag⁸ siab⁴)。\n3. 2:37:35 拚駁：盡力辯駁。\n4. 2:41:20 勿許生哩免這生，欲許生哩著這生。\n5. 2:42:18 含冤負屈。\n6. 2:48:07 顧身都唔離(li⁷)：照顧自己都不能全，無法放開手腳去理會他人。離：放開。\n7. 2:49:18 一死如死，現死駁賒死。\n8. 2:50:53 合(hah⁸)卺(geng²)酒：卺，古代結婚時用作酒器的一種瓢。舊時夫妻結婚的一種儀式，把一個匏瓜剖成兩個瓢，新郎新娘各拿一個飲酒。\n9. 2:51:33 契走囝：乾女兒。走，是諸母(za¹ bhou²，泛指婦女)的合音借詞。\n\n### 下集第三場 太原府公堂 ♥️\n![](teochew-opera-ghêgdengcung/2020-10-15-1.11.30.png)\n故事概要：王巡按金龍，連同按察使何布政使，三司會審蘇三。按察使、布政使戲弄王金龍。\n1. 2:55:28布(bu³)政使(sai³)，官名。\n2. 2:59:24寸步難行(hêng⁵)。\n3. 3:03:13 昏厥(kiag⁴)。\n4. 3:12:26 修葺(cib⁴)。\n5. 3:16:50 梟(hiao¹)情絕義：無情無義。\n6. 3:20:18 吹毛求疵(cuê¹ mo⁵ kiu⁵ ce⁵)。\n\n### 下集第四場\n故事概要：皮氏到太原按察使劉秉義府，以金環、金釵賄賂其妻。按察使大公無私，設下凍雪計。\n1. 3:28:46 金釵(toi¹)。\n2. 3:29:16 擺宴(ang³)。\n3. 3:31:55 家無常禮(li²)。\n\n### 下集第五場♥️ 城外五里亭（梅亭）\n![](teochew-opera-ghêgdengcung/2020-10-15-1.12.28.png)\n故事概要：蘇三被按察使置於梅亭，是夜，大雪紛飛，天寒地凍。王金龙冒雪前往看望。兩人互訴衷情。按察使暗中觀看，察明案情。\n1. 3:37:56 怨疊疊(tah⁸)，恨重重。\n2. 3:41:05 履(li²)薄衣單(dang¹)。\n3. 3:42:05 證(zêng³)龜成(zian⁵)鱉：將烏龜說成甲魚，比喻蓄意歪曲，顛倒是非。同義詞有「指鹿爲馬」。\n4. 3:44:04 坐摩(mua⁵)些。摩，近。\n5. 3:46:11 風呀……風卷松聲魂欲銷，愁人慘境筆墨難描。\n6. 3:55:39 啱(ngam¹)：恰好。\n7. 3.58:33得魚忘筌(cuang⁵)：指捕得到了魚，便忘掉了用來捕魚的筌。比喻悟道者忘其形骸。也比喻人在達到目的以後，就忘記他賴以成功的憑藉。\n8. 4:01:06 假惺惺(sêng¹)。\n9. 4:01:07 寒夜無燈心自明。\n10. 4:08:46 失寵(tong²)。\n11. 4:17:10 珍重(diang¹ dong⁶)。\n12. 4:19:12 草芥(gai⁶)。如：功名利祿如草芥。\n\n### 下集第六場\n故事概要：三司再審蘇三案，眾招供，皮巧英被判終生監禁，趙監生被判秋後處斬，洪洞縣縣令被革職查辦，蘇三無罪釋放。沈冤得雪，歌舞收場。\n1. 4:21:35 親幫親，鄰幫鄰，老鼠幫戶蠅。戶蠅，蒼蠅。\n2. 4:27:25 馬入中宮(dong¹ giong¹)，𠀾死必凶。\n3. 4:30:06 助紂(diu⁶)爲虐(ngiag⁸)。\n","slug":"language/min/teochew-opera-ghêgdengcung","published":1,"date":"2020-10-15T05:16:09.930Z","updated":"2020-10-15T15:51:36.531Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cki7m45ke000e86w8zh7ztng4","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css\"><p>潮劇自明朝已然形成，發展到現在有近 500 年的歷史，據統計截止 2007 年 6 月已有超過 5000 個劇目。明朝嘉靖丙寅年（1566年）刊本的《荔鏡記》，是迄今所能見到的最早一個運用「泉潮腔」演唱的演出劇本。它於 2006 年被列入首批國家級非物質文化遺產保護名錄。</p>\n<p>潮劇的語音特點是：最早的潮劇基本上是以潮州府城音爲主要音系來表演的，但迴避了潮州音的最明顯的特徵音韻母——潮州府城話的 iêng/iêg、uêng/uêg、iêm/iêb 等韻母，換成了跟其他方言相同的 iang/iag、uang/uag 和 iam/iab 韻母。然後，還參雜了揭陽話的一些特點。（引自林倫倫《潮劇是用哪個地方的方言來演唱的？》）</p>\n<p>今日要講的是明朝一段跟名妓玉堂春有關的冤案。請看視頻（時長 4:35:52）：</p>\n<iframe width=\"720\" height=\"480\" src=\"https://www.youtube.com/embed/_F8IQgDZjnw\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\n<a id=\"more\"></a>\n\n<h2 id=\"故事概要\"><a href=\"#故事概要\" class=\"headerlink\" title=\"故事概要\"></a>故事概要</h2><p>蘇三，花名玉堂春，原名周玉潔，明朝山西大同府周家莊人，因被販賣到燕京的「蘇淮妓院」而改姓蘇，又在妓女中排行第三，是爲蘇三。在馮夢龍版的故事裏，故事的男主角叫王景隆，其父令其到燕京收債，得銀三萬兩，遂到妓院尋歡，傾盡身資，佔有了才貌雙全的蘇三，兩人許下山盟海誓。不到一年，身資喪盡，被鴇婆趕出妓院。蘇三勸王景隆考取功名，王景隆回到金陵，奮發圖強，上京趕考，中了進士，選任真定府理刑判官。後爲父所迫，娶了劉都堂之女爲妻。</p>\n<p>另一方面，蘇三被老鴇以白銀一千兩百兩賣給山西洪洞縣馬販沈洪爲妾，因記與王景隆之山盟，不肯與沈洪同牀。沈洪正室皮氏與趙監生昴有姦情，聯合毒害了沈洪，並栽贓給蘇三，賄賂官府。蘇三遂入獄。</p>\n<p>恰逢王景隆改任山西八府巡按，得知蘇三犯了死罪，感念昔日恩情，微服私訪，探查蘇三冤情，後命縣衙起解蘇三等到太原府三堂會審。後沉冤昭雪，知縣被革職查辦，趙昴、皮氏被正法，蘇三獲釋。</p>\n<p>在各大劇中，王景隆被改爲王金龍，潮劇也不例外。潮劇中故事情節多有改動，但大體如此。本次欣賞的是林初發飾演王金龍、張儀鳳飾演蘇三的版本，唱腔依循黃欽賜，可從梅雪亭中「風啊……，風卷松聲魂欲銷，愁人慘境筆墨難描」唱段看出。</p>\n<p>網絡上蒐集的潮劇《玉堂春》相關歷史脈絡：</p>\n<ul>\n<li>明朝，馮夢龍《警世通言》第24卷《玉堂春落難逢夫》。</li>\n<li>20世紀30年代，<strong>林如烈</strong>編導《王金龍》，即《玉堂春》。</li>\n<li>1962年，潮劇元華潮劇團排演《梅亭雪》。該折子戲以林如烈的《玉堂春》中「雪淚情天」一折爲藍本。劇本整理謝吟、王老漢（王菲）、何苦（吳南生），作曲黃玉鬥、金林表、吳錫有，導演翁炳林。</li>\n<li>1981年，廣東潮劇院整理《梅亭雪》。劇本整理謝吟、王菲、鄭文風，唱腔設計<strong>黃欽賜</strong>，導演吳峰。由姚璇秋、鄭小霞飾蘇三，陳麗華、陳瑜飾王金龍，李有存、鄭蔡岳、林建東飾獄吏，謝素貞、馬嬋如飾獄婆。林如烈的雪淚情天，以「風打松聲儂心焦，愁人慘境筆墨難描」爲開始，是爲「如烈曲」；黃欽賜的梅亭雪，以「風啊……，風卷松聲魂欲銷，愁人慘境筆墨難描」爲開始。</li>\n</ul>\n<h2 id=\"潮劇筆記\"><a href=\"#潮劇筆記\" class=\"headerlink\" title=\"潮劇筆記\"></a>潮劇筆記</h2><h3 id=\"上集第一場\"><a href=\"#上集第一場\" class=\"headerlink\" title=\"上集第一場\"></a>上集第一場</h3><p>故事概要：鴇婆強迫蘇三梳攏接客，蘇三拒絕遭打。王金龍出銀百兩解救蘇三，與蘇三一見鍾情。</p>\n<ol>\n<li>5:01 衋(gêg⁴)心：傷心。</li>\n<li>5:13 煩惱(huang⁵ lo²)：擔心。</li>\n<li>5:22 變(bin³)作寶。</li>\n<li>5:44 相(siên³)輔：幫忙。</li>\n<li>5:58 祭到這老：吃到這麼老。祭，七月半祭孤，餓鬼來享用食物。所以用「祭孤」/「祭」來指人像餓鬼一般狼吞虎嚥或者沒有勞動坐享其成。</li>\n<li>7:24 鴇(bao²)婆。</li>\n<li>9:12 人客：客人。</li>\n<li>10:10 雨來囉：不是說真的雨來了，通常在認爲別人的話語或行爲不合邏輯或不合時宜時會這樣出言制止。</li>\n<li>10:31 梳攏(siu¹ lang⁵)：指妓女首次接客。妓院中處女只梳辮，接客後梳髻，稱「梳攏」。</li>\n<li>10:55 十五貫錢，買作菜脯，儉儉好食一年。</li>\n<li>10:59 鄙相(pi² siên³)：看人低賤，抑是用話來罵人低賤的意思。同義的有「睇相」。</li>\n<li>11:27 個面七個空，怎知汝是乜人。</li>\n<li>11:37 縣衙(guin⁷ ghê⁵)。</li>\n<li>11:41 頭欹欹(ki¹)：歪頭狀。</li>\n<li>11:57 常來常往，若敢胡來，就著知慘。</li>\n<li>12:47 稍(ciao²)候。</li>\n<li>13:10 至切：一定。如：至切勿上錯牀。</li>\n<li>15:04 吃(ngeg⁴)。</li>\n<li>15:48 參詳：商量。如：這事好參詳。</li>\n<li>15:49 偪側(bêg⁴ cêg⁴)：逼迫。</li>\n<li>16:14 娉婷(pêng³ têng⁵)。</li>\n<li>16:53 後生人：年輕人。</li>\n<li>16:54 通朗(tang¹ lang⁵)：洞明事理。如：呾話唔通朗。</li>\n<li>17:03 愈更：更加。如：愈更胡說。</li>\n<li>17:20 強扭之瓜不甜，強掰之花不香。</li>\n<li>17:37 翹楚：翹，高出仰起。楚，荊木，可做杖。翹楚是高出一般灌木的荊木。喻指厲害、超群。如：你若翹楚，同樣𢭪(kiêh⁸ 拿)出三十兩銀。</li>\n</ol>\n<h3 id=\"上集第二場\"><a href=\"#上集第二場\" class=\"headerlink\" title=\"上集第二場\"></a>上集第二場</h3><p>故事概要：王金龍三萬兩銀錢爲蘇三建了留春院北樓，飲酒作樂過了一年。其父發覺後到留春院將其掠回處置。</p>\n<ol>\n<li>21:14王(hêng⁵)瓊。</li>\n<li>23:09 才華洋溢(iang⁵ êg⁸)。</li>\n<li>25:12 鴛鴦(uang¹ iang¹)。</li>\n<li>27:56 絢(sung¹)麗。</li>\n<li>28:09 秦樓楚館煙(ing¹)花地。</li>\n<li>30:30 銅錢落草草會青，豈容坐食破大家。</li>\n<li>30:42 仔細：客氣。如：免仔細。</li>\n<li>30:43 熟人免行生(cên¹)禮(loi²)。</li>\n<li>32:02 一朝無食夫妻無義。</li>\n<li>33:33 沈溺(dim⁵ nêg⁸)。</li>\n<li>33:33 紈絝(iang⁵ kou³)子弟。</li>\n<li>33:51 戰戰兢兢(kêng¹)。</li>\n<li>35:08 食罪陷百罹(li⁵)。</li>\n<li>38:15 鵬程(pong⁵ têng⁵)。</li>\n<li>38:30 擔承：承擔。</li>\n<li>39:25 畜(têg⁴)生。</li>\n<li>40:00 戲歇棚拆：比喻世態炎涼，人情淡薄，類似的有「人走茶涼」。</li>\n<li>40:13 如其不然。</li>\n</ol>\n<h3 id=\"上集第三場-關王廟♥️\"><a href=\"#上集第三場-關王廟♥️\" class=\"headerlink\" title=\"上集第三場 關王廟♥️\"></a>上集第三場 關王廟♥️</h3><p><img src=\"/2020/10/15/language/min/teochew-opera-ghêgdengcung/2020-10-14-12.41.34.png\" alt><br>故事概要：蘇三以爲王金龍已被其父打死，遂前往關王廟祭奠王金龍。而殊不知王金龍僥倖逃脫，淪落爲乞丐，剛好也在關王廟。蘇三勸王金龍應效仿呂蒙正去考取功名。</p>\n<ol>\n<li>41:40 奇事年年有，無年奇相同。</li>\n<li>42:00 花子(hua¹ ze²)：叫花子。</li>\n<li>42:13 庵寺：尼寺、僧寺的通稱。</li>\n<li>42:24 照書行事。</li>\n<li>44:42 膠漆(ga¹ cag⁴)。如：情如膠漆割捨不能。</li>\n<li>45:16 殷勤(heng¹ keng⁵)。</li>\n<li>46:57 人事不省(sêng³)。</li>\n<li>48:12 五行：面相，處境。</li>\n<li>48:37 忍淚吞聲(sêng¹)。</li>\n<li>49:35 訴(su³)苦。</li>\n<li>49:35 顏(nguang⁵)色。</li>\n<li>50:13 烏雲密佈(bu³)。</li>\n<li>50:24 時運不濟。</li>\n<li>52:21 鶉(sung⁵)衣百結(gag⁴)：鵪鶉小頭禿尾， 羽毛赤褐色，雜有暗黃色斑點和條文，像一件沒有下擺，布滿補丁的衣服。形容衣服破爛不堪。</li>\n<li>53:52 坫(diam³)：躲藏。如：走去坫牀下。</li>\n<li>55:09 祭奠(diang⁶)。</li>\n<li>56:14 齊備(ci⁵ bi⁶)：齊全完備。</li>\n<li>56:21 包山包海：包攬全活。如：爲儉錢銀，一人包山包海。</li>\n<li>1:00:27 愁雲冉冉難見晴空。</li>\n<li>1:00:49 飛禍疊(tah⁸)至慘無窮。</li>\n<li>1:01:13 噩耗(ngag⁸ ho³)。</li>\n<li>1:04:35 衣衫襤褸(nam⁵ nu²)。</li>\n<li>1:05:08 邂逅(hai⁶ hou⁶)。</li>\n<li>1:05:44 一霎(siab⁴)時。</li>\n<li>1:07:09 果(guan²)然。</li>\n<li>1:07:17 妾願隨君陰曹去，從此聚首不分離。</li>\n<li>1:09:23 嗟嘆(za¹ tam³)。</li>\n<li>1:09:55 寂寞(sog⁴ mog⁸)。</li>\n<li>1:10:49 啜(coih⁴)泣。</li>\n<li>1:11:43 甌：大碗。</li>\n<li>1:11:44 箸：筷子。</li>\n<li>1:13:22 朱買臣：字翁子，西漢會稽吳人。家貧好學，以賣薪自給，妻羞之，改適他人，後買臣顯貴，婦慚，自縊而死；買臣官至丞相長史，因與張湯相傾軋，遭誅殺。</li>\n<li>1:13:33 呂蒙正(mong⁵ zêng³)：宋朝人，自幼父母雙亡，因此淪落爲乞丐，但其非常好學，把分來的錢都會拿去買書。因其在尚未發達當官之前，白天乞討，並投靠於佛院，晚上住於破窯。</li>\n<li>1:16:52 鄭元和：元石君寶李亞仙花酒曲江池雜劇中的人物。鄭元和爲洛陽府尹鄭公弼的兒子，因與妓女李亞仙相戀，以致散盡錢財，荒廢學業，淪爲乞丐。歷盡一番滄桑後，終在李亞仙的鼓勵下，專心向學，得以應試高中，返家團圓。</li>\n</ol>\n<h3 id=\"上集第四場\"><a href=\"#上集第四場\" class=\"headerlink\" title=\"上集第四場\"></a>上集第四場</h3><p>故事概要：蘇三被留春院賣給馬販沈洪爲妾。王金龍回鄉備考，途中盤纏被劫。</p>\n<ol>\n<li>1:19:22 未是孥囝砌宮闈，騙汝好怎呢？</li>\n<li>1:19:48 排比：不是指修辭手法，而是安排的意思。《全唐詩．卷七九八．花蕊夫人．宮詞》：「今宵駕幸池頭宿，排比椒房得暖無。」</li>\n<li>1:22:48 主僕(bog⁸)。</li>\n<li>1:22:58 擺踩：調侃、嘲弄、嘲諷、批評。「踩」字存疑。如：奴才，敢掠阿爺來擺踩。</li>\n<li>1:23:15 會哩開嘴，𠀾就放屁，一旁咬蝨(sag⁴)。</li>\n<li>1:26:29 惆悵(tiu⁵ ziang³)。</li>\n<li>1:26:46 贖(sog⁸)身。</li>\n<li>1:26:48 解倒懸(dao² hiang⁵)：倒懸，縛人兩足倒掛。比喻極爲困苦。解倒懸比喻解救人於困苦之境。</li>\n<li>1:30:53 主施：不是施主的意思，而是處理的意思。如：進退兩難怎主施？</li>\n</ol>\n<h3 id=\"上集第五場\"><a href=\"#上集第五場\" class=\"headerlink\" title=\"上集第五場\"></a>上集第五場</h3><p>故事概要：沈洪妻子皮氏下毒麵欲殺蘇三，不料蘇三拒食，湯麵爲沈洪所食，暴斃。</p>\n<ol>\n<li>1:34:11 眼中釘(ding¹/dêng¹)。</li>\n<li>1:40:47 聰穎(kêng²)。</li>\n<li>1:41:22 物輕意重。</li>\n<li>1:42:26 狗母蛇假龍。</li>\n<li>1:42:45 好心分你作歹意。</li>\n<li>1:42:56 皮燈籠，肚內明。</li>\n<li>1:43:45 二山相疊出出出。</li>\n<li>1:48:16 拖三延四。</li>\n<li>1:51:36 糙米錔(tag⁴)空臼(ku⁶)。</li>\n</ol>\n<h3 id=\"上集第六場-縣衙公堂\"><a href=\"#上集第六場-縣衙公堂\" class=\"headerlink\" title=\"上集第六場 縣衙公堂\"></a>上集第六場 縣衙公堂</h3><p>故事概要：皮氏連同情夫趙監生賄賂縣太爺，蘇三遭屈打成招、打入死牢。</p>\n<ol>\n<li>2:01:17 踉蹌(lang⁵ cang¹)。如：步履踉蹌肝腸斷。</li>\n<li>2:01:17 淚涔涔(ngim⁵)。如：百感交集淚涔涔。</li>\n<li>2:02:53 嫩(lung³)。如：鮮花嫩蕊悅死鬼。</li>\n<li>2:04:25 蛇蠍(hiah⁴)心腸(ciang⁵)。</li>\n<li>2:05:40 好貨墊底。</li>\n<li>2:09:42 砒(bi¹)霜。</li>\n<li>2:11:02 舵(dua⁶)。如：轉舵往回走。</li>\n<li>2:14:41 因依：原委、緣由。如：時晴時雨何因依。</li>\n<li>2:15:21 呼嘯(hu¹ sao³)。如：狂風呼嘯心膽寒。</li>\n<li>2:17:32 死牢(lo⁵)。</li>\n</ol>\n<h3 id=\"下集第一場\"><a href=\"#下集第一場\" class=\"headerlink\" title=\"下集第一場\"></a>下集第一場</h3><p>故事概要：王金龍中了進士，封官到太原府任巡按。路過洪洞縣，調查蘇三的冤情並命縣令將蘇三起解太原。</p>\n<ol>\n<li>名譽(u⁶)。</li>\n<li>花腳：比喻閒游浪蕩﹑愛串門子的人。如：一個花腳，一個風流。</li>\n<li>蹺蹊(kiao¹ ki¹)：蹊蹺。</li>\n</ol>\n<h3 id=\"下集第二場-荒野-♥️\"><a href=\"#下集第二場-荒野-♥️\" class=\"headerlink\" title=\"下集第二場 荒野 ♥️\"></a>下集第二場 荒野 ♥️</h3><p><img src=\"/2020/10/15/language/min/teochew-opera-ghêgdengcung/2020-10-15-1.10.20.png\" alt><br>故事概要：蘇三起解太原。解差程公道知道蘇三的冤情後，中途休息時爲其解開枷鎖，並令其將訴狀放到枷鎖中以避免被搜身。蘇三感恩，認程公道爲乾爹。</p>\n<ol>\n<li>2:35:13 蘇三(sam¹)離了洪洞(tong⁵)境，一步一淚暗傷(siang¹)情。</li>\n<li>2:36:54 跋涉(buag⁸ siab⁴)。</li>\n<li>2:37:35 拚駁：盡力辯駁。</li>\n<li>2:41:20 勿許生哩免這生，欲許生哩著這生。</li>\n<li>2:42:18 含冤負屈。</li>\n<li>2:48:07 顧身都唔離(li⁷)：照顧自己都不能全，無法放開手腳去理會他人。離：放開。</li>\n<li>2:49:18 一死如死，現死駁賒死。</li>\n<li>2:50:53 合(hah⁸)卺(geng²)酒：卺，古代結婚時用作酒器的一種瓢。舊時夫妻結婚的一種儀式，把一個匏瓜剖成兩個瓢，新郎新娘各拿一個飲酒。</li>\n<li>2:51:33 契走囝：乾女兒。走，是諸母(za¹ bhou²，泛指婦女)的合音借詞。</li>\n</ol>\n<h3 id=\"下集第三場-太原府公堂-♥️\"><a href=\"#下集第三場-太原府公堂-♥️\" class=\"headerlink\" title=\"下集第三場 太原府公堂 ♥️\"></a>下集第三場 太原府公堂 ♥️</h3><p><img src=\"/2020/10/15/language/min/teochew-opera-ghêgdengcung/2020-10-15-1.11.30.png\" alt><br>故事概要：王巡按金龍，連同按察使何布政使，三司會審蘇三。按察使、布政使戲弄王金龍。</p>\n<ol>\n<li>2:55:28布(bu³)政使(sai³)，官名。</li>\n<li>2:59:24寸步難行(hêng⁵)。</li>\n<li>3:03:13 昏厥(kiag⁴)。</li>\n<li>3:12:26 修葺(cib⁴)。</li>\n<li>3:16:50 梟(hiao¹)情絕義：無情無義。</li>\n<li>3:20:18 吹毛求疵(cuê¹ mo⁵ kiu⁵ ce⁵)。</li>\n</ol>\n<h3 id=\"下集第四場\"><a href=\"#下集第四場\" class=\"headerlink\" title=\"下集第四場\"></a>下集第四場</h3><p>故事概要：皮氏到太原按察使劉秉義府，以金環、金釵賄賂其妻。按察使大公無私，設下凍雪計。</p>\n<ol>\n<li>3:28:46 金釵(toi¹)。</li>\n<li>3:29:16 擺宴(ang³)。</li>\n<li>3:31:55 家無常禮(li²)。</li>\n</ol>\n<h3 id=\"下集第五場♥️-城外五里亭（梅亭）\"><a href=\"#下集第五場♥️-城外五里亭（梅亭）\" class=\"headerlink\" title=\"下集第五場♥️ 城外五里亭（梅亭）\"></a>下集第五場♥️ 城外五里亭（梅亭）</h3><p><img src=\"/2020/10/15/language/min/teochew-opera-ghêgdengcung/2020-10-15-1.12.28.png\" alt><br>故事概要：蘇三被按察使置於梅亭，是夜，大雪紛飛，天寒地凍。王金龙冒雪前往看望。兩人互訴衷情。按察使暗中觀看，察明案情。</p>\n<ol>\n<li>3:37:56 怨疊疊(tah⁸)，恨重重。</li>\n<li>3:41:05 履(li²)薄衣單(dang¹)。</li>\n<li>3:42:05 證(zêng³)龜成(zian⁵)鱉：將烏龜說成甲魚，比喻蓄意歪曲，顛倒是非。同義詞有「指鹿爲馬」。</li>\n<li>3:44:04 坐摩(mua⁵)些。摩，近。</li>\n<li>3:46:11 風呀……風卷松聲魂欲銷，愁人慘境筆墨難描。</li>\n<li>3:55:39 啱(ngam¹)：恰好。</li>\n<li>3.58:33得魚忘筌(cuang⁵)：指捕得到了魚，便忘掉了用來捕魚的筌。比喻悟道者忘其形骸。也比喻人在達到目的以後，就忘記他賴以成功的憑藉。</li>\n<li>4:01:06 假惺惺(sêng¹)。</li>\n<li>4:01:07 寒夜無燈心自明。</li>\n<li>4:08:46 失寵(tong²)。</li>\n<li>4:17:10 珍重(diang¹ dong⁶)。</li>\n<li>4:19:12 草芥(gai⁶)。如：功名利祿如草芥。</li>\n</ol>\n<h3 id=\"下集第六場\"><a href=\"#下集第六場\" class=\"headerlink\" title=\"下集第六場\"></a>下集第六場</h3><p>故事概要：三司再審蘇三案，眾招供，皮巧英被判終生監禁，趙監生被判秋後處斬，洪洞縣縣令被革職查辦，蘇三無罪釋放。沈冤得雪，歌舞收場。</p>\n<ol>\n<li>4:21:35 親幫親，鄰幫鄰，老鼠幫戶蠅。戶蠅，蒼蠅。</li>\n<li>4:27:25 馬入中宮(dong¹ giong¹)，𠀾死必凶。</li>\n<li>4:30:06 助紂(diu⁶)爲虐(ngiag⁸)。</li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>潮劇自明朝已然形成，發展到現在有近 500 年的歷史，據統計截止 2007 年 6 月已有超過 5000 個劇目。明朝嘉靖丙寅年（1566年）刊本的《荔鏡記》，是迄今所能見到的最早一個運用「泉潮腔」演唱的演出劇本。它於 2006 年被列入首批國家級非物質文化遺產保護名錄。</p>\n<p>潮劇的語音特點是：最早的潮劇基本上是以潮州府城音爲主要音系來表演的，但迴避了潮州音的最明顯的特徵音韻母——潮州府城話的 iêng/iêg、uêng/uêg、iêm/iêb 等韻母，換成了跟其他方言相同的 iang/iag、uang/uag 和 iam/iab 韻母。然後，還參雜了揭陽話的一些特點。（引自林倫倫《潮劇是用哪個地方的方言來演唱的？》）</p>\n<p>今日要講的是明朝一段跟名妓玉堂春有關的冤案。請看視頻（時長 4:35:52）：</p>\n<iframe width=\"720\" height=\"480\" src=\"https://www.youtube.com/embed/_F8IQgDZjnw\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>","more":"<h2 id=\"故事概要\"><a href=\"#故事概要\" class=\"headerlink\" title=\"故事概要\"></a>故事概要</h2><p>蘇三，花名玉堂春，原名周玉潔，明朝山西大同府周家莊人，因被販賣到燕京的「蘇淮妓院」而改姓蘇，又在妓女中排行第三，是爲蘇三。在馮夢龍版的故事裏，故事的男主角叫王景隆，其父令其到燕京收債，得銀三萬兩，遂到妓院尋歡，傾盡身資，佔有了才貌雙全的蘇三，兩人許下山盟海誓。不到一年，身資喪盡，被鴇婆趕出妓院。蘇三勸王景隆考取功名，王景隆回到金陵，奮發圖強，上京趕考，中了進士，選任真定府理刑判官。後爲父所迫，娶了劉都堂之女爲妻。</p>\n<p>另一方面，蘇三被老鴇以白銀一千兩百兩賣給山西洪洞縣馬販沈洪爲妾，因記與王景隆之山盟，不肯與沈洪同牀。沈洪正室皮氏與趙監生昴有姦情，聯合毒害了沈洪，並栽贓給蘇三，賄賂官府。蘇三遂入獄。</p>\n<p>恰逢王景隆改任山西八府巡按，得知蘇三犯了死罪，感念昔日恩情，微服私訪，探查蘇三冤情，後命縣衙起解蘇三等到太原府三堂會審。後沉冤昭雪，知縣被革職查辦，趙昴、皮氏被正法，蘇三獲釋。</p>\n<p>在各大劇中，王景隆被改爲王金龍，潮劇也不例外。潮劇中故事情節多有改動，但大體如此。本次欣賞的是林初發飾演王金龍、張儀鳳飾演蘇三的版本，唱腔依循黃欽賜，可從梅雪亭中「風啊……，風卷松聲魂欲銷，愁人慘境筆墨難描」唱段看出。</p>\n<p>網絡上蒐集的潮劇《玉堂春》相關歷史脈絡：</p>\n<ul>\n<li>明朝，馮夢龍《警世通言》第24卷《玉堂春落難逢夫》。</li>\n<li>20世紀30年代，<strong>林如烈</strong>編導《王金龍》，即《玉堂春》。</li>\n<li>1962年，潮劇元華潮劇團排演《梅亭雪》。該折子戲以林如烈的《玉堂春》中「雪淚情天」一折爲藍本。劇本整理謝吟、王老漢（王菲）、何苦（吳南生），作曲黃玉鬥、金林表、吳錫有，導演翁炳林。</li>\n<li>1981年，廣東潮劇院整理《梅亭雪》。劇本整理謝吟、王菲、鄭文風，唱腔設計<strong>黃欽賜</strong>，導演吳峰。由姚璇秋、鄭小霞飾蘇三，陳麗華、陳瑜飾王金龍，李有存、鄭蔡岳、林建東飾獄吏，謝素貞、馬嬋如飾獄婆。林如烈的雪淚情天，以「風打松聲儂心焦，愁人慘境筆墨難描」爲開始，是爲「如烈曲」；黃欽賜的梅亭雪，以「風啊……，風卷松聲魂欲銷，愁人慘境筆墨難描」爲開始。</li>\n</ul>\n<h2 id=\"潮劇筆記\"><a href=\"#潮劇筆記\" class=\"headerlink\" title=\"潮劇筆記\"></a>潮劇筆記</h2><h3 id=\"上集第一場\"><a href=\"#上集第一場\" class=\"headerlink\" title=\"上集第一場\"></a>上集第一場</h3><p>故事概要：鴇婆強迫蘇三梳攏接客，蘇三拒絕遭打。王金龍出銀百兩解救蘇三，與蘇三一見鍾情。</p>\n<ol>\n<li>5:01 衋(gêg⁴)心：傷心。</li>\n<li>5:13 煩惱(huang⁵ lo²)：擔心。</li>\n<li>5:22 變(bin³)作寶。</li>\n<li>5:44 相(siên³)輔：幫忙。</li>\n<li>5:58 祭到這老：吃到這麼老。祭，七月半祭孤，餓鬼來享用食物。所以用「祭孤」/「祭」來指人像餓鬼一般狼吞虎嚥或者沒有勞動坐享其成。</li>\n<li>7:24 鴇(bao²)婆。</li>\n<li>9:12 人客：客人。</li>\n<li>10:10 雨來囉：不是說真的雨來了，通常在認爲別人的話語或行爲不合邏輯或不合時宜時會這樣出言制止。</li>\n<li>10:31 梳攏(siu¹ lang⁵)：指妓女首次接客。妓院中處女只梳辮，接客後梳髻，稱「梳攏」。</li>\n<li>10:55 十五貫錢，買作菜脯，儉儉好食一年。</li>\n<li>10:59 鄙相(pi² siên³)：看人低賤，抑是用話來罵人低賤的意思。同義的有「睇相」。</li>\n<li>11:27 個面七個空，怎知汝是乜人。</li>\n<li>11:37 縣衙(guin⁷ ghê⁵)。</li>\n<li>11:41 頭欹欹(ki¹)：歪頭狀。</li>\n<li>11:57 常來常往，若敢胡來，就著知慘。</li>\n<li>12:47 稍(ciao²)候。</li>\n<li>13:10 至切：一定。如：至切勿上錯牀。</li>\n<li>15:04 吃(ngeg⁴)。</li>\n<li>15:48 參詳：商量。如：這事好參詳。</li>\n<li>15:49 偪側(bêg⁴ cêg⁴)：逼迫。</li>\n<li>16:14 娉婷(pêng³ têng⁵)。</li>\n<li>16:53 後生人：年輕人。</li>\n<li>16:54 通朗(tang¹ lang⁵)：洞明事理。如：呾話唔通朗。</li>\n<li>17:03 愈更：更加。如：愈更胡說。</li>\n<li>17:20 強扭之瓜不甜，強掰之花不香。</li>\n<li>17:37 翹楚：翹，高出仰起。楚，荊木，可做杖。翹楚是高出一般灌木的荊木。喻指厲害、超群。如：你若翹楚，同樣𢭪(kiêh⁸ 拿)出三十兩銀。</li>\n</ol>\n<h3 id=\"上集第二場\"><a href=\"#上集第二場\" class=\"headerlink\" title=\"上集第二場\"></a>上集第二場</h3><p>故事概要：王金龍三萬兩銀錢爲蘇三建了留春院北樓，飲酒作樂過了一年。其父發覺後到留春院將其掠回處置。</p>\n<ol>\n<li>21:14王(hêng⁵)瓊。</li>\n<li>23:09 才華洋溢(iang⁵ êg⁸)。</li>\n<li>25:12 鴛鴦(uang¹ iang¹)。</li>\n<li>27:56 絢(sung¹)麗。</li>\n<li>28:09 秦樓楚館煙(ing¹)花地。</li>\n<li>30:30 銅錢落草草會青，豈容坐食破大家。</li>\n<li>30:42 仔細：客氣。如：免仔細。</li>\n<li>30:43 熟人免行生(cên¹)禮(loi²)。</li>\n<li>32:02 一朝無食夫妻無義。</li>\n<li>33:33 沈溺(dim⁵ nêg⁸)。</li>\n<li>33:33 紈絝(iang⁵ kou³)子弟。</li>\n<li>33:51 戰戰兢兢(kêng¹)。</li>\n<li>35:08 食罪陷百罹(li⁵)。</li>\n<li>38:15 鵬程(pong⁵ têng⁵)。</li>\n<li>38:30 擔承：承擔。</li>\n<li>39:25 畜(têg⁴)生。</li>\n<li>40:00 戲歇棚拆：比喻世態炎涼，人情淡薄，類似的有「人走茶涼」。</li>\n<li>40:13 如其不然。</li>\n</ol>\n<h3 id=\"上集第三場-關王廟♥️\"><a href=\"#上集第三場-關王廟♥️\" class=\"headerlink\" title=\"上集第三場 關王廟♥️\"></a>上集第三場 關王廟♥️</h3><p><img src=\"/2020/10/15/language/min/teochew-opera-ghêgdengcung/2020-10-14-12.41.34.png\" alt><br>故事概要：蘇三以爲王金龍已被其父打死，遂前往關王廟祭奠王金龍。而殊不知王金龍僥倖逃脫，淪落爲乞丐，剛好也在關王廟。蘇三勸王金龍應效仿呂蒙正去考取功名。</p>\n<ol>\n<li>41:40 奇事年年有，無年奇相同。</li>\n<li>42:00 花子(hua¹ ze²)：叫花子。</li>\n<li>42:13 庵寺：尼寺、僧寺的通稱。</li>\n<li>42:24 照書行事。</li>\n<li>44:42 膠漆(ga¹ cag⁴)。如：情如膠漆割捨不能。</li>\n<li>45:16 殷勤(heng¹ keng⁵)。</li>\n<li>46:57 人事不省(sêng³)。</li>\n<li>48:12 五行：面相，處境。</li>\n<li>48:37 忍淚吞聲(sêng¹)。</li>\n<li>49:35 訴(su³)苦。</li>\n<li>49:35 顏(nguang⁵)色。</li>\n<li>50:13 烏雲密佈(bu³)。</li>\n<li>50:24 時運不濟。</li>\n<li>52:21 鶉(sung⁵)衣百結(gag⁴)：鵪鶉小頭禿尾， 羽毛赤褐色，雜有暗黃色斑點和條文，像一件沒有下擺，布滿補丁的衣服。形容衣服破爛不堪。</li>\n<li>53:52 坫(diam³)：躲藏。如：走去坫牀下。</li>\n<li>55:09 祭奠(diang⁶)。</li>\n<li>56:14 齊備(ci⁵ bi⁶)：齊全完備。</li>\n<li>56:21 包山包海：包攬全活。如：爲儉錢銀，一人包山包海。</li>\n<li>1:00:27 愁雲冉冉難見晴空。</li>\n<li>1:00:49 飛禍疊(tah⁸)至慘無窮。</li>\n<li>1:01:13 噩耗(ngag⁸ ho³)。</li>\n<li>1:04:35 衣衫襤褸(nam⁵ nu²)。</li>\n<li>1:05:08 邂逅(hai⁶ hou⁶)。</li>\n<li>1:05:44 一霎(siab⁴)時。</li>\n<li>1:07:09 果(guan²)然。</li>\n<li>1:07:17 妾願隨君陰曹去，從此聚首不分離。</li>\n<li>1:09:23 嗟嘆(za¹ tam³)。</li>\n<li>1:09:55 寂寞(sog⁴ mog⁸)。</li>\n<li>1:10:49 啜(coih⁴)泣。</li>\n<li>1:11:43 甌：大碗。</li>\n<li>1:11:44 箸：筷子。</li>\n<li>1:13:22 朱買臣：字翁子，西漢會稽吳人。家貧好學，以賣薪自給，妻羞之，改適他人，後買臣顯貴，婦慚，自縊而死；買臣官至丞相長史，因與張湯相傾軋，遭誅殺。</li>\n<li>1:13:33 呂蒙正(mong⁵ zêng³)：宋朝人，自幼父母雙亡，因此淪落爲乞丐，但其非常好學，把分來的錢都會拿去買書。因其在尚未發達當官之前，白天乞討，並投靠於佛院，晚上住於破窯。</li>\n<li>1:16:52 鄭元和：元石君寶李亞仙花酒曲江池雜劇中的人物。鄭元和爲洛陽府尹鄭公弼的兒子，因與妓女李亞仙相戀，以致散盡錢財，荒廢學業，淪爲乞丐。歷盡一番滄桑後，終在李亞仙的鼓勵下，專心向學，得以應試高中，返家團圓。</li>\n</ol>\n<h3 id=\"上集第四場\"><a href=\"#上集第四場\" class=\"headerlink\" title=\"上集第四場\"></a>上集第四場</h3><p>故事概要：蘇三被留春院賣給馬販沈洪爲妾。王金龍回鄉備考，途中盤纏被劫。</p>\n<ol>\n<li>1:19:22 未是孥囝砌宮闈，騙汝好怎呢？</li>\n<li>1:19:48 排比：不是指修辭手法，而是安排的意思。《全唐詩．卷七九八．花蕊夫人．宮詞》：「今宵駕幸池頭宿，排比椒房得暖無。」</li>\n<li>1:22:48 主僕(bog⁸)。</li>\n<li>1:22:58 擺踩：調侃、嘲弄、嘲諷、批評。「踩」字存疑。如：奴才，敢掠阿爺來擺踩。</li>\n<li>1:23:15 會哩開嘴，𠀾就放屁，一旁咬蝨(sag⁴)。</li>\n<li>1:26:29 惆悵(tiu⁵ ziang³)。</li>\n<li>1:26:46 贖(sog⁸)身。</li>\n<li>1:26:48 解倒懸(dao² hiang⁵)：倒懸，縛人兩足倒掛。比喻極爲困苦。解倒懸比喻解救人於困苦之境。</li>\n<li>1:30:53 主施：不是施主的意思，而是處理的意思。如：進退兩難怎主施？</li>\n</ol>\n<h3 id=\"上集第五場\"><a href=\"#上集第五場\" class=\"headerlink\" title=\"上集第五場\"></a>上集第五場</h3><p>故事概要：沈洪妻子皮氏下毒麵欲殺蘇三，不料蘇三拒食，湯麵爲沈洪所食，暴斃。</p>\n<ol>\n<li>1:34:11 眼中釘(ding¹/dêng¹)。</li>\n<li>1:40:47 聰穎(kêng²)。</li>\n<li>1:41:22 物輕意重。</li>\n<li>1:42:26 狗母蛇假龍。</li>\n<li>1:42:45 好心分你作歹意。</li>\n<li>1:42:56 皮燈籠，肚內明。</li>\n<li>1:43:45 二山相疊出出出。</li>\n<li>1:48:16 拖三延四。</li>\n<li>1:51:36 糙米錔(tag⁴)空臼(ku⁶)。</li>\n</ol>\n<h3 id=\"上集第六場-縣衙公堂\"><a href=\"#上集第六場-縣衙公堂\" class=\"headerlink\" title=\"上集第六場 縣衙公堂\"></a>上集第六場 縣衙公堂</h3><p>故事概要：皮氏連同情夫趙監生賄賂縣太爺，蘇三遭屈打成招、打入死牢。</p>\n<ol>\n<li>2:01:17 踉蹌(lang⁵ cang¹)。如：步履踉蹌肝腸斷。</li>\n<li>2:01:17 淚涔涔(ngim⁵)。如：百感交集淚涔涔。</li>\n<li>2:02:53 嫩(lung³)。如：鮮花嫩蕊悅死鬼。</li>\n<li>2:04:25 蛇蠍(hiah⁴)心腸(ciang⁵)。</li>\n<li>2:05:40 好貨墊底。</li>\n<li>2:09:42 砒(bi¹)霜。</li>\n<li>2:11:02 舵(dua⁶)。如：轉舵往回走。</li>\n<li>2:14:41 因依：原委、緣由。如：時晴時雨何因依。</li>\n<li>2:15:21 呼嘯(hu¹ sao³)。如：狂風呼嘯心膽寒。</li>\n<li>2:17:32 死牢(lo⁵)。</li>\n</ol>\n<h3 id=\"下集第一場\"><a href=\"#下集第一場\" class=\"headerlink\" title=\"下集第一場\"></a>下集第一場</h3><p>故事概要：王金龍中了進士，封官到太原府任巡按。路過洪洞縣，調查蘇三的冤情並命縣令將蘇三起解太原。</p>\n<ol>\n<li>名譽(u⁶)。</li>\n<li>花腳：比喻閒游浪蕩﹑愛串門子的人。如：一個花腳，一個風流。</li>\n<li>蹺蹊(kiao¹ ki¹)：蹊蹺。</li>\n</ol>\n<h3 id=\"下集第二場-荒野-♥️\"><a href=\"#下集第二場-荒野-♥️\" class=\"headerlink\" title=\"下集第二場 荒野 ♥️\"></a>下集第二場 荒野 ♥️</h3><p><img src=\"/2020/10/15/language/min/teochew-opera-ghêgdengcung/2020-10-15-1.10.20.png\" alt><br>故事概要：蘇三起解太原。解差程公道知道蘇三的冤情後，中途休息時爲其解開枷鎖，並令其將訴狀放到枷鎖中以避免被搜身。蘇三感恩，認程公道爲乾爹。</p>\n<ol>\n<li>2:35:13 蘇三(sam¹)離了洪洞(tong⁵)境，一步一淚暗傷(siang¹)情。</li>\n<li>2:36:54 跋涉(buag⁸ siab⁴)。</li>\n<li>2:37:35 拚駁：盡力辯駁。</li>\n<li>2:41:20 勿許生哩免這生，欲許生哩著這生。</li>\n<li>2:42:18 含冤負屈。</li>\n<li>2:48:07 顧身都唔離(li⁷)：照顧自己都不能全，無法放開手腳去理會他人。離：放開。</li>\n<li>2:49:18 一死如死，現死駁賒死。</li>\n<li>2:50:53 合(hah⁸)卺(geng²)酒：卺，古代結婚時用作酒器的一種瓢。舊時夫妻結婚的一種儀式，把一個匏瓜剖成兩個瓢，新郎新娘各拿一個飲酒。</li>\n<li>2:51:33 契走囝：乾女兒。走，是諸母(za¹ bhou²，泛指婦女)的合音借詞。</li>\n</ol>\n<h3 id=\"下集第三場-太原府公堂-♥️\"><a href=\"#下集第三場-太原府公堂-♥️\" class=\"headerlink\" title=\"下集第三場 太原府公堂 ♥️\"></a>下集第三場 太原府公堂 ♥️</h3><p><img src=\"/2020/10/15/language/min/teochew-opera-ghêgdengcung/2020-10-15-1.11.30.png\" alt><br>故事概要：王巡按金龍，連同按察使何布政使，三司會審蘇三。按察使、布政使戲弄王金龍。</p>\n<ol>\n<li>2:55:28布(bu³)政使(sai³)，官名。</li>\n<li>2:59:24寸步難行(hêng⁵)。</li>\n<li>3:03:13 昏厥(kiag⁴)。</li>\n<li>3:12:26 修葺(cib⁴)。</li>\n<li>3:16:50 梟(hiao¹)情絕義：無情無義。</li>\n<li>3:20:18 吹毛求疵(cuê¹ mo⁵ kiu⁵ ce⁵)。</li>\n</ol>\n<h3 id=\"下集第四場\"><a href=\"#下集第四場\" class=\"headerlink\" title=\"下集第四場\"></a>下集第四場</h3><p>故事概要：皮氏到太原按察使劉秉義府，以金環、金釵賄賂其妻。按察使大公無私，設下凍雪計。</p>\n<ol>\n<li>3:28:46 金釵(toi¹)。</li>\n<li>3:29:16 擺宴(ang³)。</li>\n<li>3:31:55 家無常禮(li²)。</li>\n</ol>\n<h3 id=\"下集第五場♥️-城外五里亭（梅亭）\"><a href=\"#下集第五場♥️-城外五里亭（梅亭）\" class=\"headerlink\" title=\"下集第五場♥️ 城外五里亭（梅亭）\"></a>下集第五場♥️ 城外五里亭（梅亭）</h3><p><img src=\"/2020/10/15/language/min/teochew-opera-ghêgdengcung/2020-10-15-1.12.28.png\" alt><br>故事概要：蘇三被按察使置於梅亭，是夜，大雪紛飛，天寒地凍。王金龙冒雪前往看望。兩人互訴衷情。按察使暗中觀看，察明案情。</p>\n<ol>\n<li>3:37:56 怨疊疊(tah⁸)，恨重重。</li>\n<li>3:41:05 履(li²)薄衣單(dang¹)。</li>\n<li>3:42:05 證(zêng³)龜成(zian⁵)鱉：將烏龜說成甲魚，比喻蓄意歪曲，顛倒是非。同義詞有「指鹿爲馬」。</li>\n<li>3:44:04 坐摩(mua⁵)些。摩，近。</li>\n<li>3:46:11 風呀……風卷松聲魂欲銷，愁人慘境筆墨難描。</li>\n<li>3:55:39 啱(ngam¹)：恰好。</li>\n<li>3.58:33得魚忘筌(cuang⁵)：指捕得到了魚，便忘掉了用來捕魚的筌。比喻悟道者忘其形骸。也比喻人在達到目的以後，就忘記他賴以成功的憑藉。</li>\n<li>4:01:06 假惺惺(sêng¹)。</li>\n<li>4:01:07 寒夜無燈心自明。</li>\n<li>4:08:46 失寵(tong²)。</li>\n<li>4:17:10 珍重(diang¹ dong⁶)。</li>\n<li>4:19:12 草芥(gai⁶)。如：功名利祿如草芥。</li>\n</ol>\n<h3 id=\"下集第六場\"><a href=\"#下集第六場\" class=\"headerlink\" title=\"下集第六場\"></a>下集第六場</h3><p>故事概要：三司再審蘇三案，眾招供，皮巧英被判終生監禁，趙監生被判秋後處斬，洪洞縣縣令被革職查辦，蘇三無罪釋放。沈冤得雪，歌舞收場。</p>\n<ol>\n<li>4:21:35 親幫親，鄰幫鄰，老鼠幫戶蠅。戶蠅，蒼蠅。</li>\n<li>4:27:25 馬入中宮(dong¹ giong¹)，𠀾死必凶。</li>\n<li>4:30:06 助紂(diu⁶)爲虐(ngiag⁸)。</li>\n</ol>"},{"title":"工作邮件中的中文敬语","p":"language/han/writing/chinese-honorific-for-work-mail","_content":"\n《论语·学而》讲到「有子曰：礼之用，和为贵。」，大意是说礼的运用贵在使人际关系和谐。如今我提倡善用敬语，其原因就在于此。我希望能通过敬语的推广减少如今社会的戾气，营造相互尊重相互关怀的社会风气。\n\n<!--more-->\n\n## 东西方邮件比照\n\n在开始讲述我们的主题之前，先来看看我从网络上寻到的几份邮件/信件。\n\n第一份是日文的，是一份公司内部部门名称变更的通知，[原文](https://business-mail.jp/example/753)如下：\n\n```\n営業部の皆様、お疲れ様です。\n総務部の◎◎太郎です。\n\n2011年6月1日（水）より、社内組織の名称を変更いたします。\n\n■変更前：顧客管理部\n\n■変更後：お客様相談センター\n\n■変更実施日：2011年6月1日（水）9:00より\n\nHP、会社案内、配布資料などについては、\n5月30日（月）までに新しいものを各部署に配布いたします。\n古い案内や資料は破棄しますので、各部署でまとめて、\n管理部までお持ちください。\n\n以上、よろしくお願いいたします。\n```\n\n拙译如下：\n\n```\n各位营业部同仁，辛苦您们了。\n我是总务部的◎◎太郎。\n\n2011 年 6 月 1 日（星期三）起，公司内部组织名称有所变更。\n\n变更前：顾客管理部\n变更后：客户咨询中心\n变更实施日：2011 年 6 月 1 日（星期三）9:00 起\n\n至于公司主页、介绍册和散发的资料等，5 月 30 日（星期一）前会发送新的到各职守。\n旧的介绍册及资料要废弃了，请各职守汇总到管理部。\n\n谨此，顺颂商祺。\n```\n\n第二份是英文的，是公司对外婉言谢绝合作的复信，[原文](http://www.blairenglish.com/exercises/emails/exercises/business-email-examples/business-email-examples.html)如下：\n```\nDear Mr Boxall,\n\nThank you for your enquiry about supplying our company with new photocopying equipment.\n\nUnfortunately, we are currently not in need of replacing our existing photocopiers. We recently entered a new 2 year contract with our existing photocopier provider.\n\nYou would be more than welcome to contact us again when our current contract is up for renewal.\n\nYours sincerely,\n\n\nJeff Thompson\nOffice Manager\n```\n\n草译如下：\n\n```\n尊敬的 Boxal 先生：\n\n感谢您上次有关本公司新复印机采购的垂询。\n不巧的是，我们当前没有替换现有复印机的需求。不过不久我们将与现有供应商签订新的为期两年的合同。\n非常欢迎您在我们当前合同续订时再次来询。\n\n敬复。\n\n\n杰夫·汤普森\n办公室主管\n```\n\n第三份是中文繁体的，是一份银行追讨用户欠款的通知，[原文](http://www.cuhk.edu.hk/ics/clrc/crcl_74/wong.pdf)如下（格式上依电子邮件特点略有改动）。\n\n```\nX 先生：\n\n根據本行記錄，貴戶 X 月份信用咭賬項，至 X 月 X 日為止，尚未清繳信用咭使用條款規定的最低還款款額港幣 XXXX 元正。閣下如因私務繁忙，未有按時繳款，敬希於此信發出日期起 X 天內清繳上述欠款，以免妨礙本行繼續為閣下提供信用咭服務。\n如有任何查詢，請致電 XXXXXXXX 與本行職員聯絡。閣下如已清繳上述欠款，請毋須理會此信。\n\nXX 銀行謹啟。\nXXXX 年 X 月 X 日\n```\n\n按大陆习惯转成简体字如下：\n\n```\nX 先生：\n\n根据本行记录，贵户 X 月份信用卡账项，至 X 月 X 日为止，尚未清缴信用卡使用条款规定的最低还款款额港币 XXXX 元整。阁下如因私务繁忙，未有按时缴款，敬希于此信发出日期起 X 天内清缴上述欠款，以免妨碍本行继续为阁下提供信用卡服务。\n如有任何查询，请致电 XXXXXXXX 与本行职员联络。阁下如已清缴上述欠款，请毋须理会此信。\n\nXX 银行谨启。\nXXXX 年 X 月 X 日\n```\n\n最后一份是东晋书法家王羲之写给友人的一封书信，后人称之为《快雪时晴帖》，为台北故宫博物院「三希」之首，[原帖](https://baike.baidu.com/item/%E5%BF%AB%E9%9B%AA%E6%97%B6%E6%99%B4%E5%B8%96/1247442)如下：\n\n![快雪时晴帖](chinese-honorific-for-work-mail/快雪時晴帖.jpg)\n\n取其中一种断句如下：\n\n```\n羲之頓首/快雪時晴/佳/想安善/未果為結/力不次/王羲之頓首/山陰張侯\n```\n\n用白话文可以略译如下：\n\n```\n羲之顿首。下了一场雪，很舒爽，停得也是时候，很不错。想来你应该都平安健康。没能照心意把信写完，体力不继，表达难以得体，就此停笔。王羲之顿首。\n```\n\n（注：译文参考[*《為王羲之快雪時晴帖解碼 -- Mandulover 的部落格》*](http://blog.udn.com/Mandulover/5585178)。此外，「山阴张侯」应该是写在信封上的收件人，因此不写入书信内容）\n\n## 中文电子邮件敬语分析\n\n中文邮件分公函和私函两大类，公函结构简单不累赘，私函有应酬语体现书写者的情真意切。香港有个站点甚佳，叫 [*中小學中文實用寫作學習軟件（測試版）*](http://203.198.171.19/teaching/program/tongqingdayi/index.htm)，在[*書信*](http://203.198.171.19/teaching/program/tongqingdayi/letter/letter-format02a.htm) 栏目，可以看到有两种公函格式。这两种都是正式的写法，不过公函一应用较广。现根据电子邮件特点稍改格式如下：\n\n![现代电子邮件公函格式](chinese-honorific-for-work-mail/现代电子邮件公函格式.jpg)\n\n这么改有什么案例可以支撑吗？有，请看下文。\n\n第一封邮件是 Apple 发送的安全提醒：\n\n```\n◎◎，您好：\n\n您的 Apple ID **@**.com 刚刚在一台以前未与此 Apple ID 相关联的电脑或设备上从 Mac App Store 下载了 QQ。如果您自上次购买后重设过您的密码，您可能也会收到此邮件。\n\n如果是您本人启始了此项下载，请忽略此邮件。发送此邮件只是为了提醒您注意，以防此下载非您本人所为。\n\n如果此下载不是由您启始的，我们建议你前往 iforgot.apple.com 更改您的密码，然后查看 Apple ID：安全性和 Apple ID获取更多帮助。\n\n谨上\nApple\n```\n第二封是 Google 发送的账户验证：\n```\n尊敬的◎◎，您好！\n\n我们收到了一项要求将 **@**.com 添加到您的 Google 帐户的请求。请点击下面的链接验证此请求。\n\nhttps://accounts.google.com/VA?c=****=zh-CN\n\n如果点击以上链接无法访问相关内容，请将该网址复制并粘贴至新的浏览器窗口中。\n\n您不该收到这封电子邮件？\n请忽略这封邮件，并且不要点击上方的链接。可能是有人输错了电子邮件地址，并无意中试图添加您的电子邮件地址。如果您没有点击上方的链接，您的电子邮件地址就不会被添加到其他帐户。\n\n此致\nGoogle 帐户小组敬上\n```\n\n第三封是七牛云的账户绑定安全提醒：\n\n```\n尊敬的◎◎：\n\n您的账号 **@**.com 于 2017-04-03 17:24:26 成功绑定了 Github 账号 **@**.com (登录IP：*.*.*.*)。若非您本人操作，请尽快 解绑此账号 ，同时 修改您的密码 或 联系我们。\n\n此致\n七牛云团队\n```\n\n### 称谓语分析\n\n### 敬启语分析\n\n### 祝颂语分析\n\n![中文祝颂词分析](chinese-honorific-for-work-mail/中文祝颂词分析.jpg)\n\n","source":"_drafts/language/han/writing/chinese-honorific-for-work-mail.md","raw":"---\ntitle: 工作邮件中的中文敬语\np: language/han/writing/chinese-honorific-for-work-mail\ntags:\n- Chinese\n- Hhonorific\n- Mail\n- 中文\n- 敬语\n- 邮件\n---\n\n《论语·学而》讲到「有子曰：礼之用，和为贵。」，大意是说礼的运用贵在使人际关系和谐。如今我提倡善用敬语，其原因就在于此。我希望能通过敬语的推广减少如今社会的戾气，营造相互尊重相互关怀的社会风气。\n\n<!--more-->\n\n## 东西方邮件比照\n\n在开始讲述我们的主题之前，先来看看我从网络上寻到的几份邮件/信件。\n\n第一份是日文的，是一份公司内部部门名称变更的通知，[原文](https://business-mail.jp/example/753)如下：\n\n```\n営業部の皆様、お疲れ様です。\n総務部の◎◎太郎です。\n\n2011年6月1日（水）より、社内組織の名称を変更いたします。\n\n■変更前：顧客管理部\n\n■変更後：お客様相談センター\n\n■変更実施日：2011年6月1日（水）9:00より\n\nHP、会社案内、配布資料などについては、\n5月30日（月）までに新しいものを各部署に配布いたします。\n古い案内や資料は破棄しますので、各部署でまとめて、\n管理部までお持ちください。\n\n以上、よろしくお願いいたします。\n```\n\n拙译如下：\n\n```\n各位营业部同仁，辛苦您们了。\n我是总务部的◎◎太郎。\n\n2011 年 6 月 1 日（星期三）起，公司内部组织名称有所变更。\n\n变更前：顾客管理部\n变更后：客户咨询中心\n变更实施日：2011 年 6 月 1 日（星期三）9:00 起\n\n至于公司主页、介绍册和散发的资料等，5 月 30 日（星期一）前会发送新的到各职守。\n旧的介绍册及资料要废弃了，请各职守汇总到管理部。\n\n谨此，顺颂商祺。\n```\n\n第二份是英文的，是公司对外婉言谢绝合作的复信，[原文](http://www.blairenglish.com/exercises/emails/exercises/business-email-examples/business-email-examples.html)如下：\n```\nDear Mr Boxall,\n\nThank you for your enquiry about supplying our company with new photocopying equipment.\n\nUnfortunately, we are currently not in need of replacing our existing photocopiers. We recently entered a new 2 year contract with our existing photocopier provider.\n\nYou would be more than welcome to contact us again when our current contract is up for renewal.\n\nYours sincerely,\n\n\nJeff Thompson\nOffice Manager\n```\n\n草译如下：\n\n```\n尊敬的 Boxal 先生：\n\n感谢您上次有关本公司新复印机采购的垂询。\n不巧的是，我们当前没有替换现有复印机的需求。不过不久我们将与现有供应商签订新的为期两年的合同。\n非常欢迎您在我们当前合同续订时再次来询。\n\n敬复。\n\n\n杰夫·汤普森\n办公室主管\n```\n\n第三份是中文繁体的，是一份银行追讨用户欠款的通知，[原文](http://www.cuhk.edu.hk/ics/clrc/crcl_74/wong.pdf)如下（格式上依电子邮件特点略有改动）。\n\n```\nX 先生：\n\n根據本行記錄，貴戶 X 月份信用咭賬項，至 X 月 X 日為止，尚未清繳信用咭使用條款規定的最低還款款額港幣 XXXX 元正。閣下如因私務繁忙，未有按時繳款，敬希於此信發出日期起 X 天內清繳上述欠款，以免妨礙本行繼續為閣下提供信用咭服務。\n如有任何查詢，請致電 XXXXXXXX 與本行職員聯絡。閣下如已清繳上述欠款，請毋須理會此信。\n\nXX 銀行謹啟。\nXXXX 年 X 月 X 日\n```\n\n按大陆习惯转成简体字如下：\n\n```\nX 先生：\n\n根据本行记录，贵户 X 月份信用卡账项，至 X 月 X 日为止，尚未清缴信用卡使用条款规定的最低还款款额港币 XXXX 元整。阁下如因私务繁忙，未有按时缴款，敬希于此信发出日期起 X 天内清缴上述欠款，以免妨碍本行继续为阁下提供信用卡服务。\n如有任何查询，请致电 XXXXXXXX 与本行职员联络。阁下如已清缴上述欠款，请毋须理会此信。\n\nXX 银行谨启。\nXXXX 年 X 月 X 日\n```\n\n最后一份是东晋书法家王羲之写给友人的一封书信，后人称之为《快雪时晴帖》，为台北故宫博物院「三希」之首，[原帖](https://baike.baidu.com/item/%E5%BF%AB%E9%9B%AA%E6%97%B6%E6%99%B4%E5%B8%96/1247442)如下：\n\n![快雪时晴帖](chinese-honorific-for-work-mail/快雪時晴帖.jpg)\n\n取其中一种断句如下：\n\n```\n羲之頓首/快雪時晴/佳/想安善/未果為結/力不次/王羲之頓首/山陰張侯\n```\n\n用白话文可以略译如下：\n\n```\n羲之顿首。下了一场雪，很舒爽，停得也是时候，很不错。想来你应该都平安健康。没能照心意把信写完，体力不继，表达难以得体，就此停笔。王羲之顿首。\n```\n\n（注：译文参考[*《為王羲之快雪時晴帖解碼 -- Mandulover 的部落格》*](http://blog.udn.com/Mandulover/5585178)。此外，「山阴张侯」应该是写在信封上的收件人，因此不写入书信内容）\n\n## 中文电子邮件敬语分析\n\n中文邮件分公函和私函两大类，公函结构简单不累赘，私函有应酬语体现书写者的情真意切。香港有个站点甚佳，叫 [*中小學中文實用寫作學習軟件（測試版）*](http://203.198.171.19/teaching/program/tongqingdayi/index.htm)，在[*書信*](http://203.198.171.19/teaching/program/tongqingdayi/letter/letter-format02a.htm) 栏目，可以看到有两种公函格式。这两种都是正式的写法，不过公函一应用较广。现根据电子邮件特点稍改格式如下：\n\n![现代电子邮件公函格式](chinese-honorific-for-work-mail/现代电子邮件公函格式.jpg)\n\n这么改有什么案例可以支撑吗？有，请看下文。\n\n第一封邮件是 Apple 发送的安全提醒：\n\n```\n◎◎，您好：\n\n您的 Apple ID **@**.com 刚刚在一台以前未与此 Apple ID 相关联的电脑或设备上从 Mac App Store 下载了 QQ。如果您自上次购买后重设过您的密码，您可能也会收到此邮件。\n\n如果是您本人启始了此项下载，请忽略此邮件。发送此邮件只是为了提醒您注意，以防此下载非您本人所为。\n\n如果此下载不是由您启始的，我们建议你前往 iforgot.apple.com 更改您的密码，然后查看 Apple ID：安全性和 Apple ID获取更多帮助。\n\n谨上\nApple\n```\n第二封是 Google 发送的账户验证：\n```\n尊敬的◎◎，您好！\n\n我们收到了一项要求将 **@**.com 添加到您的 Google 帐户的请求。请点击下面的链接验证此请求。\n\nhttps://accounts.google.com/VA?c=****=zh-CN\n\n如果点击以上链接无法访问相关内容，请将该网址复制并粘贴至新的浏览器窗口中。\n\n您不该收到这封电子邮件？\n请忽略这封邮件，并且不要点击上方的链接。可能是有人输错了电子邮件地址，并无意中试图添加您的电子邮件地址。如果您没有点击上方的链接，您的电子邮件地址就不会被添加到其他帐户。\n\n此致\nGoogle 帐户小组敬上\n```\n\n第三封是七牛云的账户绑定安全提醒：\n\n```\n尊敬的◎◎：\n\n您的账号 **@**.com 于 2017-04-03 17:24:26 成功绑定了 Github 账号 **@**.com (登录IP：*.*.*.*)。若非您本人操作，请尽快 解绑此账号 ，同时 修改您的密码 或 联系我们。\n\n此致\n七牛云团队\n```\n\n### 称谓语分析\n\n### 敬启语分析\n\n### 祝颂语分析\n\n![中文祝颂词分析](chinese-honorific-for-work-mail/中文祝颂词分析.jpg)\n\n","slug":"language/han/writing/chinese-honorific-for-work-mail","published":0,"date":"2020-10-04T07:48:34.818Z","updated":"2020-10-04T07:48:34.818Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cki7m45ll001086w8bpnsjdpi","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css\"><p>《论语·学而》讲到「有子曰：礼之用，和为贵。」，大意是说礼的运用贵在使人际关系和谐。如今我提倡善用敬语，其原因就在于此。我希望能通过敬语的推广减少如今社会的戾气，营造相互尊重相互关怀的社会风气。</p>\n<a id=\"more\"></a>\n\n<h2 id=\"东西方邮件比照\"><a href=\"#东西方邮件比照\" class=\"headerlink\" title=\"东西方邮件比照\"></a>东西方邮件比照</h2><p>在开始讲述我们的主题之前，先来看看我从网络上寻到的几份邮件/信件。</p>\n<p>第一份是日文的，是一份公司内部部门名称变更的通知，<a href=\"https://business-mail.jp/example/753\" target=\"_blank\" rel=\"noopener\">原文</a>如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">営業部の皆様、お疲れ様です。</span><br><span class=\"line\">総務部の◎◎太郎です。</span><br><span class=\"line\"></span><br><span class=\"line\">2011年6月1日（水）より、社内組織の名称を変更いたします。</span><br><span class=\"line\"></span><br><span class=\"line\">■変更前：顧客管理部</span><br><span class=\"line\"></span><br><span class=\"line\">■変更後：お客様相談センター</span><br><span class=\"line\"></span><br><span class=\"line\">■変更実施日：2011年6月1日（水）9:00より</span><br><span class=\"line\"></span><br><span class=\"line\">HP、会社案内、配布資料などについては、</span><br><span class=\"line\">5月30日（月）までに新しいものを各部署に配布いたします。</span><br><span class=\"line\">古い案内や資料は破棄しますので、各部署でまとめて、</span><br><span class=\"line\">管理部までお持ちください。</span><br><span class=\"line\"></span><br><span class=\"line\">以上、よろしくお願いいたします。</span><br></pre></td></tr></table></figure>\n\n<p>拙译如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">各位营业部同仁，辛苦您们了。</span><br><span class=\"line\">我是总务部的◎◎太郎。</span><br><span class=\"line\"></span><br><span class=\"line\">2011 年 6 月 1 日（星期三）起，公司内部组织名称有所变更。</span><br><span class=\"line\"></span><br><span class=\"line\">变更前：顾客管理部</span><br><span class=\"line\">变更后：客户咨询中心</span><br><span class=\"line\">变更实施日：2011 年 6 月 1 日（星期三）9:00 起</span><br><span class=\"line\"></span><br><span class=\"line\">至于公司主页、介绍册和散发的资料等，5 月 30 日（星期一）前会发送新的到各职守。</span><br><span class=\"line\">旧的介绍册及资料要废弃了，请各职守汇总到管理部。</span><br><span class=\"line\"></span><br><span class=\"line\">谨此，顺颂商祺。</span><br></pre></td></tr></table></figure>\n\n<p>第二份是英文的，是公司对外婉言谢绝合作的复信，<a href=\"http://www.blairenglish.com/exercises/emails/exercises/business-email-examples/business-email-examples.html\" target=\"_blank\" rel=\"noopener\">原文</a>如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Dear Mr Boxall,</span><br><span class=\"line\"></span><br><span class=\"line\">Thank you for your enquiry about supplying our company with new photocopying equipment.</span><br><span class=\"line\"></span><br><span class=\"line\">Unfortunately, we are currently not in need of replacing our existing photocopiers. We recently entered a new 2 year contract with our existing photocopier provider.</span><br><span class=\"line\"></span><br><span class=\"line\">You would be more than welcome to contact us again when our current contract is up for renewal.</span><br><span class=\"line\"></span><br><span class=\"line\">Yours sincerely,</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Jeff Thompson</span><br><span class=\"line\">Office Manager</span><br></pre></td></tr></table></figure>\n\n<p>草译如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">尊敬的 Boxal 先生：</span><br><span class=\"line\"></span><br><span class=\"line\">感谢您上次有关本公司新复印机采购的垂询。</span><br><span class=\"line\">不巧的是，我们当前没有替换现有复印机的需求。不过不久我们将与现有供应商签订新的为期两年的合同。</span><br><span class=\"line\">非常欢迎您在我们当前合同续订时再次来询。</span><br><span class=\"line\"></span><br><span class=\"line\">敬复。</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">杰夫·汤普森</span><br><span class=\"line\">办公室主管</span><br></pre></td></tr></table></figure>\n\n<p>第三份是中文繁体的，是一份银行追讨用户欠款的通知，<a href=\"http://www.cuhk.edu.hk/ics/clrc/crcl_74/wong.pdf\" target=\"_blank\" rel=\"noopener\">原文</a>如下（格式上依电子邮件特点略有改动）。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">X 先生：</span><br><span class=\"line\"></span><br><span class=\"line\">根據本行記錄，貴戶 X 月份信用咭賬項，至 X 月 X 日為止，尚未清繳信用咭使用條款規定的最低還款款額港幣 XXXX 元正。閣下如因私務繁忙，未有按時繳款，敬希於此信發出日期起 X 天內清繳上述欠款，以免妨礙本行繼續為閣下提供信用咭服務。</span><br><span class=\"line\">如有任何查詢，請致電 XXXXXXXX 與本行職員聯絡。閣下如已清繳上述欠款，請毋須理會此信。</span><br><span class=\"line\"></span><br><span class=\"line\">XX 銀行謹啟。</span><br><span class=\"line\">XXXX 年 X 月 X 日</span><br></pre></td></tr></table></figure>\n\n<p>按大陆习惯转成简体字如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">X 先生：</span><br><span class=\"line\"></span><br><span class=\"line\">根据本行记录，贵户 X 月份信用卡账项，至 X 月 X 日为止，尚未清缴信用卡使用条款规定的最低还款款额港币 XXXX 元整。阁下如因私务繁忙，未有按时缴款，敬希于此信发出日期起 X 天内清缴上述欠款，以免妨碍本行继续为阁下提供信用卡服务。</span><br><span class=\"line\">如有任何查询，请致电 XXXXXXXX 与本行职员联络。阁下如已清缴上述欠款，请毋须理会此信。</span><br><span class=\"line\"></span><br><span class=\"line\">XX 银行谨启。</span><br><span class=\"line\">XXXX 年 X 月 X 日</span><br></pre></td></tr></table></figure>\n\n<p>最后一份是东晋书法家王羲之写给友人的一封书信，后人称之为《快雪时晴帖》，为台北故宫博物院「三希」之首，<a href=\"https://baike.baidu.com/item/%E5%BF%AB%E9%9B%AA%E6%97%B6%E6%99%B4%E5%B8%96/1247442\" target=\"_blank\" rel=\"noopener\">原帖</a>如下：</p>\n<p><img src=\"/2020/10/04/language/han/writing/chinese-honorific-for-work-mail/%E5%BF%AB%E9%9B%AA%E6%99%82%E6%99%B4%E5%B8%96.jpg\" alt=\"快雪时晴帖\"></p>\n<p>取其中一种断句如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">羲之頓首/快雪時晴/佳/想安善/未果為結/力不次/王羲之頓首/山陰張侯</span><br></pre></td></tr></table></figure>\n\n<p>用白话文可以略译如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">羲之顿首。下了一场雪，很舒爽，停得也是时候，很不错。想来你应该都平安健康。没能照心意把信写完，体力不继，表达难以得体，就此停笔。王羲之顿首。</span><br></pre></td></tr></table></figure>\n\n<p>（注：译文参考<a href=\"http://blog.udn.com/Mandulover/5585178\" target=\"_blank\" rel=\"noopener\"><em>《為王羲之快雪時晴帖解碼 – Mandulover 的部落格》</em></a>。此外，「山阴张侯」应该是写在信封上的收件人，因此不写入书信内容）</p>\n<h2 id=\"中文电子邮件敬语分析\"><a href=\"#中文电子邮件敬语分析\" class=\"headerlink\" title=\"中文电子邮件敬语分析\"></a>中文电子邮件敬语分析</h2><p>中文邮件分公函和私函两大类，公函结构简单不累赘，私函有应酬语体现书写者的情真意切。香港有个站点甚佳，叫 <a href=\"http://203.198.171.19/teaching/program/tongqingdayi/index.htm\" target=\"_blank\" rel=\"noopener\"><em>中小學中文實用寫作學習軟件（測試版）</em></a>，在<a href=\"http://203.198.171.19/teaching/program/tongqingdayi/letter/letter-format02a.htm\" target=\"_blank\" rel=\"noopener\"><em>書信</em></a> 栏目，可以看到有两种公函格式。这两种都是正式的写法，不过公函一应用较广。现根据电子邮件特点稍改格式如下：</p>\n<p><img src=\"/2020/10/04/language/han/writing/chinese-honorific-for-work-mail/%E7%8E%B0%E4%BB%A3%E7%94%B5%E5%AD%90%E9%82%AE%E4%BB%B6%E5%85%AC%E5%87%BD%E6%A0%BC%E5%BC%8F.jpg\" alt=\"现代电子邮件公函格式\"></p>\n<p>这么改有什么案例可以支撑吗？有，请看下文。</p>\n<p>第一封邮件是 Apple 发送的安全提醒：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">◎◎，您好：</span><br><span class=\"line\"></span><br><span class=\"line\">您的 Apple ID **@**.com 刚刚在一台以前未与此 Apple ID 相关联的电脑或设备上从 Mac App Store 下载了 QQ。如果您自上次购买后重设过您的密码，您可能也会收到此邮件。</span><br><span class=\"line\"></span><br><span class=\"line\">如果是您本人启始了此项下载，请忽略此邮件。发送此邮件只是为了提醒您注意，以防此下载非您本人所为。</span><br><span class=\"line\"></span><br><span class=\"line\">如果此下载不是由您启始的，我们建议你前往 iforgot.apple.com 更改您的密码，然后查看 Apple ID：安全性和 Apple ID获取更多帮助。</span><br><span class=\"line\"></span><br><span class=\"line\">谨上</span><br><span class=\"line\">Apple</span><br></pre></td></tr></table></figure>\n\n<p>第二封是 Google 发送的账户验证：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">尊敬的◎◎，您好！</span><br><span class=\"line\"></span><br><span class=\"line\">我们收到了一项要求将 **@**.com 添加到您的 Google 帐户的请求。请点击下面的链接验证此请求。</span><br><span class=\"line\"></span><br><span class=\"line\">https://accounts.google.com/VA?c=****=zh-CN</span><br><span class=\"line\"></span><br><span class=\"line\">如果点击以上链接无法访问相关内容，请将该网址复制并粘贴至新的浏览器窗口中。</span><br><span class=\"line\"></span><br><span class=\"line\">您不该收到这封电子邮件？</span><br><span class=\"line\">请忽略这封邮件，并且不要点击上方的链接。可能是有人输错了电子邮件地址，并无意中试图添加您的电子邮件地址。如果您没有点击上方的链接，您的电子邮件地址就不会被添加到其他帐户。</span><br><span class=\"line\"></span><br><span class=\"line\">此致</span><br><span class=\"line\">Google 帐户小组敬上</span><br></pre></td></tr></table></figure>\n\n<p>第三封是七牛云的账户绑定安全提醒：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">尊敬的◎◎：</span><br><span class=\"line\"></span><br><span class=\"line\">您的账号 **@**.com 于 2017-04-03 17:24:26 成功绑定了 Github 账号 **@**.com (登录IP：*.*.*.*)。若非您本人操作，请尽快 解绑此账号 ，同时 修改您的密码 或 联系我们。</span><br><span class=\"line\"></span><br><span class=\"line\">此致</span><br><span class=\"line\">七牛云团队</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"称谓语分析\"><a href=\"#称谓语分析\" class=\"headerlink\" title=\"称谓语分析\"></a>称谓语分析</h3><h3 id=\"敬启语分析\"><a href=\"#敬启语分析\" class=\"headerlink\" title=\"敬启语分析\"></a>敬启语分析</h3><h3 id=\"祝颂语分析\"><a href=\"#祝颂语分析\" class=\"headerlink\" title=\"祝颂语分析\"></a>祝颂语分析</h3><p><img src=\"/2020/10/04/language/han/writing/chinese-honorific-for-work-mail/%E4%B8%AD%E6%96%87%E7%A5%9D%E9%A2%82%E8%AF%8D%E5%88%86%E6%9E%90.jpg\" alt=\"中文祝颂词分析\"></p>\n","site":{"data":{}},"excerpt":"<p>《论语·学而》讲到「有子曰：礼之用，和为贵。」，大意是说礼的运用贵在使人际关系和谐。如今我提倡善用敬语，其原因就在于此。我希望能通过敬语的推广减少如今社会的戾气，营造相互尊重相互关怀的社会风气。</p>","more":"<h2 id=\"东西方邮件比照\"><a href=\"#东西方邮件比照\" class=\"headerlink\" title=\"东西方邮件比照\"></a>东西方邮件比照</h2><p>在开始讲述我们的主题之前，先来看看我从网络上寻到的几份邮件/信件。</p>\n<p>第一份是日文的，是一份公司内部部门名称变更的通知，<a href=\"https://business-mail.jp/example/753\" target=\"_blank\" rel=\"noopener\">原文</a>如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">営業部の皆様、お疲れ様です。</span><br><span class=\"line\">総務部の◎◎太郎です。</span><br><span class=\"line\"></span><br><span class=\"line\">2011年6月1日（水）より、社内組織の名称を変更いたします。</span><br><span class=\"line\"></span><br><span class=\"line\">■変更前：顧客管理部</span><br><span class=\"line\"></span><br><span class=\"line\">■変更後：お客様相談センター</span><br><span class=\"line\"></span><br><span class=\"line\">■変更実施日：2011年6月1日（水）9:00より</span><br><span class=\"line\"></span><br><span class=\"line\">HP、会社案内、配布資料などについては、</span><br><span class=\"line\">5月30日（月）までに新しいものを各部署に配布いたします。</span><br><span class=\"line\">古い案内や資料は破棄しますので、各部署でまとめて、</span><br><span class=\"line\">管理部までお持ちください。</span><br><span class=\"line\"></span><br><span class=\"line\">以上、よろしくお願いいたします。</span><br></pre></td></tr></table></figure>\n\n<p>拙译如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">各位营业部同仁，辛苦您们了。</span><br><span class=\"line\">我是总务部的◎◎太郎。</span><br><span class=\"line\"></span><br><span class=\"line\">2011 年 6 月 1 日（星期三）起，公司内部组织名称有所变更。</span><br><span class=\"line\"></span><br><span class=\"line\">变更前：顾客管理部</span><br><span class=\"line\">变更后：客户咨询中心</span><br><span class=\"line\">变更实施日：2011 年 6 月 1 日（星期三）9:00 起</span><br><span class=\"line\"></span><br><span class=\"line\">至于公司主页、介绍册和散发的资料等，5 月 30 日（星期一）前会发送新的到各职守。</span><br><span class=\"line\">旧的介绍册及资料要废弃了，请各职守汇总到管理部。</span><br><span class=\"line\"></span><br><span class=\"line\">谨此，顺颂商祺。</span><br></pre></td></tr></table></figure>\n\n<p>第二份是英文的，是公司对外婉言谢绝合作的复信，<a href=\"http://www.blairenglish.com/exercises/emails/exercises/business-email-examples/business-email-examples.html\" target=\"_blank\" rel=\"noopener\">原文</a>如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Dear Mr Boxall,</span><br><span class=\"line\"></span><br><span class=\"line\">Thank you for your enquiry about supplying our company with new photocopying equipment.</span><br><span class=\"line\"></span><br><span class=\"line\">Unfortunately, we are currently not in need of replacing our existing photocopiers. We recently entered a new 2 year contract with our existing photocopier provider.</span><br><span class=\"line\"></span><br><span class=\"line\">You would be more than welcome to contact us again when our current contract is up for renewal.</span><br><span class=\"line\"></span><br><span class=\"line\">Yours sincerely,</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Jeff Thompson</span><br><span class=\"line\">Office Manager</span><br></pre></td></tr></table></figure>\n\n<p>草译如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">尊敬的 Boxal 先生：</span><br><span class=\"line\"></span><br><span class=\"line\">感谢您上次有关本公司新复印机采购的垂询。</span><br><span class=\"line\">不巧的是，我们当前没有替换现有复印机的需求。不过不久我们将与现有供应商签订新的为期两年的合同。</span><br><span class=\"line\">非常欢迎您在我们当前合同续订时再次来询。</span><br><span class=\"line\"></span><br><span class=\"line\">敬复。</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">杰夫·汤普森</span><br><span class=\"line\">办公室主管</span><br></pre></td></tr></table></figure>\n\n<p>第三份是中文繁体的，是一份银行追讨用户欠款的通知，<a href=\"http://www.cuhk.edu.hk/ics/clrc/crcl_74/wong.pdf\" target=\"_blank\" rel=\"noopener\">原文</a>如下（格式上依电子邮件特点略有改动）。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">X 先生：</span><br><span class=\"line\"></span><br><span class=\"line\">根據本行記錄，貴戶 X 月份信用咭賬項，至 X 月 X 日為止，尚未清繳信用咭使用條款規定的最低還款款額港幣 XXXX 元正。閣下如因私務繁忙，未有按時繳款，敬希於此信發出日期起 X 天內清繳上述欠款，以免妨礙本行繼續為閣下提供信用咭服務。</span><br><span class=\"line\">如有任何查詢，請致電 XXXXXXXX 與本行職員聯絡。閣下如已清繳上述欠款，請毋須理會此信。</span><br><span class=\"line\"></span><br><span class=\"line\">XX 銀行謹啟。</span><br><span class=\"line\">XXXX 年 X 月 X 日</span><br></pre></td></tr></table></figure>\n\n<p>按大陆习惯转成简体字如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">X 先生：</span><br><span class=\"line\"></span><br><span class=\"line\">根据本行记录，贵户 X 月份信用卡账项，至 X 月 X 日为止，尚未清缴信用卡使用条款规定的最低还款款额港币 XXXX 元整。阁下如因私务繁忙，未有按时缴款，敬希于此信发出日期起 X 天内清缴上述欠款，以免妨碍本行继续为阁下提供信用卡服务。</span><br><span class=\"line\">如有任何查询，请致电 XXXXXXXX 与本行职员联络。阁下如已清缴上述欠款，请毋须理会此信。</span><br><span class=\"line\"></span><br><span class=\"line\">XX 银行谨启。</span><br><span class=\"line\">XXXX 年 X 月 X 日</span><br></pre></td></tr></table></figure>\n\n<p>最后一份是东晋书法家王羲之写给友人的一封书信，后人称之为《快雪时晴帖》，为台北故宫博物院「三希」之首，<a href=\"https://baike.baidu.com/item/%E5%BF%AB%E9%9B%AA%E6%97%B6%E6%99%B4%E5%B8%96/1247442\" target=\"_blank\" rel=\"noopener\">原帖</a>如下：</p>\n<p><img src=\"/2020/10/04/language/han/writing/chinese-honorific-for-work-mail/%E5%BF%AB%E9%9B%AA%E6%99%82%E6%99%B4%E5%B8%96.jpg\" alt=\"快雪时晴帖\"></p>\n<p>取其中一种断句如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">羲之頓首/快雪時晴/佳/想安善/未果為結/力不次/王羲之頓首/山陰張侯</span><br></pre></td></tr></table></figure>\n\n<p>用白话文可以略译如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">羲之顿首。下了一场雪，很舒爽，停得也是时候，很不错。想来你应该都平安健康。没能照心意把信写完，体力不继，表达难以得体，就此停笔。王羲之顿首。</span><br></pre></td></tr></table></figure>\n\n<p>（注：译文参考<a href=\"http://blog.udn.com/Mandulover/5585178\" target=\"_blank\" rel=\"noopener\"><em>《為王羲之快雪時晴帖解碼 – Mandulover 的部落格》</em></a>。此外，「山阴张侯」应该是写在信封上的收件人，因此不写入书信内容）</p>\n<h2 id=\"中文电子邮件敬语分析\"><a href=\"#中文电子邮件敬语分析\" class=\"headerlink\" title=\"中文电子邮件敬语分析\"></a>中文电子邮件敬语分析</h2><p>中文邮件分公函和私函两大类，公函结构简单不累赘，私函有应酬语体现书写者的情真意切。香港有个站点甚佳，叫 <a href=\"http://203.198.171.19/teaching/program/tongqingdayi/index.htm\" target=\"_blank\" rel=\"noopener\"><em>中小學中文實用寫作學習軟件（測試版）</em></a>，在<a href=\"http://203.198.171.19/teaching/program/tongqingdayi/letter/letter-format02a.htm\" target=\"_blank\" rel=\"noopener\"><em>書信</em></a> 栏目，可以看到有两种公函格式。这两种都是正式的写法，不过公函一应用较广。现根据电子邮件特点稍改格式如下：</p>\n<p><img src=\"/2020/10/04/language/han/writing/chinese-honorific-for-work-mail/%E7%8E%B0%E4%BB%A3%E7%94%B5%E5%AD%90%E9%82%AE%E4%BB%B6%E5%85%AC%E5%87%BD%E6%A0%BC%E5%BC%8F.jpg\" alt=\"现代电子邮件公函格式\"></p>\n<p>这么改有什么案例可以支撑吗？有，请看下文。</p>\n<p>第一封邮件是 Apple 发送的安全提醒：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">◎◎，您好：</span><br><span class=\"line\"></span><br><span class=\"line\">您的 Apple ID **@**.com 刚刚在一台以前未与此 Apple ID 相关联的电脑或设备上从 Mac App Store 下载了 QQ。如果您自上次购买后重设过您的密码，您可能也会收到此邮件。</span><br><span class=\"line\"></span><br><span class=\"line\">如果是您本人启始了此项下载，请忽略此邮件。发送此邮件只是为了提醒您注意，以防此下载非您本人所为。</span><br><span class=\"line\"></span><br><span class=\"line\">如果此下载不是由您启始的，我们建议你前往 iforgot.apple.com 更改您的密码，然后查看 Apple ID：安全性和 Apple ID获取更多帮助。</span><br><span class=\"line\"></span><br><span class=\"line\">谨上</span><br><span class=\"line\">Apple</span><br></pre></td></tr></table></figure>\n\n<p>第二封是 Google 发送的账户验证：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">尊敬的◎◎，您好！</span><br><span class=\"line\"></span><br><span class=\"line\">我们收到了一项要求将 **@**.com 添加到您的 Google 帐户的请求。请点击下面的链接验证此请求。</span><br><span class=\"line\"></span><br><span class=\"line\">https://accounts.google.com/VA?c=****=zh-CN</span><br><span class=\"line\"></span><br><span class=\"line\">如果点击以上链接无法访问相关内容，请将该网址复制并粘贴至新的浏览器窗口中。</span><br><span class=\"line\"></span><br><span class=\"line\">您不该收到这封电子邮件？</span><br><span class=\"line\">请忽略这封邮件，并且不要点击上方的链接。可能是有人输错了电子邮件地址，并无意中试图添加您的电子邮件地址。如果您没有点击上方的链接，您的电子邮件地址就不会被添加到其他帐户。</span><br><span class=\"line\"></span><br><span class=\"line\">此致</span><br><span class=\"line\">Google 帐户小组敬上</span><br></pre></td></tr></table></figure>\n\n<p>第三封是七牛云的账户绑定安全提醒：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">尊敬的◎◎：</span><br><span class=\"line\"></span><br><span class=\"line\">您的账号 **@**.com 于 2017-04-03 17:24:26 成功绑定了 Github 账号 **@**.com (登录IP：*.*.*.*)。若非您本人操作，请尽快 解绑此账号 ，同时 修改您的密码 或 联系我们。</span><br><span class=\"line\"></span><br><span class=\"line\">此致</span><br><span class=\"line\">七牛云团队</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"称谓语分析\"><a href=\"#称谓语分析\" class=\"headerlink\" title=\"称谓语分析\"></a>称谓语分析</h3><h3 id=\"敬启语分析\"><a href=\"#敬启语分析\" class=\"headerlink\" title=\"敬启语分析\"></a>敬启语分析</h3><h3 id=\"祝颂语分析\"><a href=\"#祝颂语分析\" class=\"headerlink\" title=\"祝颂语分析\"></a>祝颂语分析</h3><p><img src=\"/2020/10/04/language/han/writing/chinese-honorific-for-work-mail/%E4%B8%AD%E6%96%87%E7%A5%9D%E9%A2%82%E8%AF%8D%E5%88%86%E6%9E%90.jpg\" alt=\"中文祝颂词分析\"></p>"},{"title":"JS 入门","p":"dev/lang/js/js-startup","_content":"\nJS (JavaScript) 是一门解释型或者即时编译型 (JIT, Just-In-Time) 编程语言，创造者为 Netscape 公司。它的标准由 Ecma International  发布，称之为 ECMAScript，早期采用小数进行发布版本，ECMAScript 6.0 (ES6, ES2015) 开始使用年份发布版本，目前 ECMAScript 2020 正处于草案阶段。\n\n<!--more-->\n\n> 注：\n>\n>  [Ecma International](https://en.wikipedia.org/wiki/Ecma_International) 保留了早期的名称 European Computer Manufacturers Association，欧洲计算机厂商协会。其口号是 “**European association for standardizing information and communication systems**”（专注于标准化信息和通信系统的欧洲协会）。该组织的普通会员（具有投票权）有 Google、PayPal、IBM、Intel、Microsoft 等等。其产生的标准不限于 ECMAScript，还有 Dart 语言规范、C# 语言规范，还有不限于编程语言的规范，详细的规范列表可以参阅[这里](https://www.ecma-international.org/publications/standards/Stnindex.htm)。\n\nJS 是 ECMAScript 标准的一种实现，其它实现还有 JScript、ActionScript。JScript 是微软开发用于 IE 浏览器内核的 ECMAScript 方言，而 ActionScript 是 Macromedia 公司开发用于 Flash 动画，后被 Adobe 收购。\n\n或者你还耳闻过 TypeScript，它跟 JS 是什么关系呢？是不是也是同父异母的兄弟呢？\n\n \n\nJS 的常见运行环境有两个：\n\n1. 浏览器环境；\n2. Node.js 环境。\n\n## 参考\n\n1. [JavaScript - MDN web docs](https://developer.mozilla.org/en-US/docs/Web/JavaScript)\n2. [ECMAScript 6 入门 - ruanyifeng.com](https://es6.ruanyifeng.com/)\n3. [nodejs docs - nodejs.org](https://nodejs.org/en/docs/)\n\n","source":"_drafts/program/dev/lang/js/js-startup.md","raw":"---\ntitle: JS 入门\np: dev/lang/js/js-startup\ntags:\n- JS\n---\n\nJS (JavaScript) 是一门解释型或者即时编译型 (JIT, Just-In-Time) 编程语言，创造者为 Netscape 公司。它的标准由 Ecma International  发布，称之为 ECMAScript，早期采用小数进行发布版本，ECMAScript 6.0 (ES6, ES2015) 开始使用年份发布版本，目前 ECMAScript 2020 正处于草案阶段。\n\n<!--more-->\n\n> 注：\n>\n>  [Ecma International](https://en.wikipedia.org/wiki/Ecma_International) 保留了早期的名称 European Computer Manufacturers Association，欧洲计算机厂商协会。其口号是 “**European association for standardizing information and communication systems**”（专注于标准化信息和通信系统的欧洲协会）。该组织的普通会员（具有投票权）有 Google、PayPal、IBM、Intel、Microsoft 等等。其产生的标准不限于 ECMAScript，还有 Dart 语言规范、C# 语言规范，还有不限于编程语言的规范，详细的规范列表可以参阅[这里](https://www.ecma-international.org/publications/standards/Stnindex.htm)。\n\nJS 是 ECMAScript 标准的一种实现，其它实现还有 JScript、ActionScript。JScript 是微软开发用于 IE 浏览器内核的 ECMAScript 方言，而 ActionScript 是 Macromedia 公司开发用于 Flash 动画，后被 Adobe 收购。\n\n或者你还耳闻过 TypeScript，它跟 JS 是什么关系呢？是不是也是同父异母的兄弟呢？\n\n \n\nJS 的常见运行环境有两个：\n\n1. 浏览器环境；\n2. Node.js 环境。\n\n## 参考\n\n1. [JavaScript - MDN web docs](https://developer.mozilla.org/en-US/docs/Web/JavaScript)\n2. [ECMAScript 6 入门 - ruanyifeng.com](https://es6.ruanyifeng.com/)\n3. [nodejs docs - nodejs.org](https://nodejs.org/en/docs/)\n\n","slug":"program/dev/lang/js/js-startup","published":0,"date":"2020-10-04T07:48:34.828Z","updated":"2020-10-04T07:48:34.828Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cki7m45md001d86w8g1fd1ooa","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css\"><p>JS (JavaScript) 是一门解释型或者即时编译型 (JIT, Just-In-Time) 编程语言，创造者为 Netscape 公司。它的标准由 Ecma International  发布，称之为 ECMAScript，早期采用小数进行发布版本，ECMAScript 6.0 (ES6, ES2015) 开始使用年份发布版本，目前 ECMAScript 2020 正处于草案阶段。</p>\n<a id=\"more\"></a>\n\n<blockquote>\n<p>注：</p>\n<p> <a href=\"https://en.wikipedia.org/wiki/Ecma_International\" target=\"_blank\" rel=\"noopener\">Ecma International</a> 保留了早期的名称 European Computer Manufacturers Association，欧洲计算机厂商协会。其口号是 “<strong>European association for standardizing information and communication systems</strong>”（专注于标准化信息和通信系统的欧洲协会）。该组织的普通会员（具有投票权）有 Google、PayPal、IBM、Intel、Microsoft 等等。其产生的标准不限于 ECMAScript，还有 Dart 语言规范、C# 语言规范，还有不限于编程语言的规范，详细的规范列表可以参阅<a href=\"https://www.ecma-international.org/publications/standards/Stnindex.htm\" target=\"_blank\" rel=\"noopener\">这里</a>。</p>\n</blockquote>\n<p>JS 是 ECMAScript 标准的一种实现，其它实现还有 JScript、ActionScript。JScript 是微软开发用于 IE 浏览器内核的 ECMAScript 方言，而 ActionScript 是 Macromedia 公司开发用于 Flash 动画，后被 Adobe 收购。</p>\n<p>或者你还耳闻过 TypeScript，它跟 JS 是什么关系呢？是不是也是同父异母的兄弟呢？</p>\n<p>JS 的常见运行环境有两个：</p>\n<ol>\n<li>浏览器环境；</li>\n<li>Node.js 环境。</li>\n</ol>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ol>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript\" target=\"_blank\" rel=\"noopener\">JavaScript - MDN web docs</a></li>\n<li><a href=\"https://es6.ruanyifeng.com/\" target=\"_blank\" rel=\"noopener\">ECMAScript 6 入门 - ruanyifeng.com</a></li>\n<li><a href=\"https://nodejs.org/en/docs/\" target=\"_blank\" rel=\"noopener\">nodejs docs - nodejs.org</a></li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>JS (JavaScript) 是一门解释型或者即时编译型 (JIT, Just-In-Time) 编程语言，创造者为 Netscape 公司。它的标准由 Ecma International  发布，称之为 ECMAScript，早期采用小数进行发布版本，ECMAScript 6.0 (ES6, ES2015) 开始使用年份发布版本，目前 ECMAScript 2020 正处于草案阶段。</p>","more":"<blockquote>\n<p>注：</p>\n<p> <a href=\"https://en.wikipedia.org/wiki/Ecma_International\" target=\"_blank\" rel=\"noopener\">Ecma International</a> 保留了早期的名称 European Computer Manufacturers Association，欧洲计算机厂商协会。其口号是 “<strong>European association for standardizing information and communication systems</strong>”（专注于标准化信息和通信系统的欧洲协会）。该组织的普通会员（具有投票权）有 Google、PayPal、IBM、Intel、Microsoft 等等。其产生的标准不限于 ECMAScript，还有 Dart 语言规范、C# 语言规范，还有不限于编程语言的规范，详细的规范列表可以参阅<a href=\"https://www.ecma-international.org/publications/standards/Stnindex.htm\" target=\"_blank\" rel=\"noopener\">这里</a>。</p>\n</blockquote>\n<p>JS 是 ECMAScript 标准的一种实现，其它实现还有 JScript、ActionScript。JScript 是微软开发用于 IE 浏览器内核的 ECMAScript 方言，而 ActionScript 是 Macromedia 公司开发用于 Flash 动画，后被 Adobe 收购。</p>\n<p>或者你还耳闻过 TypeScript，它跟 JS 是什么关系呢？是不是也是同父异母的兄弟呢？</p>\n<p>JS 的常见运行环境有两个：</p>\n<ol>\n<li>浏览器环境；</li>\n<li>Node.js 环境。</li>\n</ol>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ol>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript\" target=\"_blank\" rel=\"noopener\">JavaScript - MDN web docs</a></li>\n<li><a href=\"https://es6.ruanyifeng.com/\" target=\"_blank\" rel=\"noopener\">ECMAScript 6 入门 - ruanyifeng.com</a></li>\n<li><a href=\"https://nodejs.org/en/docs/\" target=\"_blank\" rel=\"noopener\">nodejs docs - nodejs.org</a></li>\n</ol>"}],"PostAsset":[{"_id":"source/_posts/it/java/java-basic/Untitled 1.png","slug":"Untitled 1.png","post":"cki7m45kd000b86w8m68y82vr","modified":0,"renderable":0},{"_id":"source/_posts/it/java/java-basic/20201202_24328.png","slug":"20201202_24328.png","post":"cki7m45kd000b86w8m68y82vr","modified":0,"renderable":0},{"_id":"source/_posts/language/min/sigêng-giamgia/蒹葭.m4a","slug":"蒹葭.m4a","post":"cki7m45kb000986w8j8rlhcvj","modified":0,"renderable":0},{"_id":"source/_posts/music/listen-chopin-raindrop/cdefgab.jpg","slug":"cdefgab.jpg","post":"cki7m45im000386w8o36pogdc","modified":0,"renderable":0},{"_id":"source/_posts/music/listen-chopin-raindrop/piano-keys.gif","slug":"piano-keys.gif","post":"cki7m45im000386w8o36pogdc","modified":0,"renderable":0},{"_id":"source/_posts/it/java/java-basic/Untitled.png","slug":"Untitled.png","post":"cki7m45kd000b86w8m68y82vr","modified":0,"renderable":0},{"_id":"source/_drafts/language/han/writing/chinese-honorific-for-work-mail/快雪時晴帖.jpg","slug":"快雪時晴帖.jpg","post":"cki7m45ll001086w8bpnsjdpi","modified":0,"renderable":0},{"_id":"source/_posts/it/java/java-basic/Untitled 4.png","slug":"Untitled 4.png","post":"cki7m45kd000b86w8m68y82vr","modified":0,"renderable":0},{"_id":"source/_posts/language/min/teochew-kahtsi-vowel/202010042112.png","slug":"202010042112.png","post":"cki7m45kc000a86w8gslxrua7","modified":0,"renderable":0},{"_id":"source/_posts/language/min/sigêng-giamgia/202010060948.jpg","slug":"202010060948.jpg","post":"cki7m45kb000986w8j8rlhcvj","modified":0,"renderable":0},{"_id":"source/_posts/language/min/teochew-opera-ghêgdengcung/2020-10-14-12.41.34.png","slug":"2020-10-14-12.41.34.png","post":"cki7m45ke000e86w8zh7ztng4","modified":0,"renderable":0},{"_id":"source/_posts/language/min/teochew-opera-ghêgdengcung/2020-10-15-1.10.20.png","slug":"2020-10-15-1.10.20.png","post":"cki7m45ke000e86w8zh7ztng4","modified":0,"renderable":0},{"_id":"source/_posts/language/min/teochew-opera-ghêgdengcung/2020-10-15-1.11.30.png","slug":"2020-10-15-1.11.30.png","post":"cki7m45ke000e86w8zh7ztng4","modified":0,"renderable":0},{"_id":"source/_posts/language/min/teochew-opera-ghêgdengcung/2020-10-15-1.12.28.png","slug":"2020-10-15-1.12.28.png","post":"cki7m45ke000e86w8zh7ztng4","modified":0,"renderable":0},{"_id":"source/_posts/it/java/java-basic/20201114_101407.png","slug":"20201114_101407.png","post":"cki7m45kd000b86w8m68y82vr","modified":0,"renderable":0},{"_id":"source/_posts/it/java/java-basic/Untitled 2.png","slug":"Untitled 2.png","post":"cki7m45kd000b86w8m68y82vr","modified":0,"renderable":0},{"_id":"source/_posts/it/java/java-basic/Untitled 3.png","slug":"Untitled 3.png","post":"cki7m45kd000b86w8m68y82vr","modified":0,"renderable":0},{"_id":"source/_posts/it/java/java-collection/Untitled 1.png","slug":"Untitled 1.png","post":"cki7m45kb000786w87o2e1g1b","modified":0,"renderable":0},{"_id":"source/_posts/it/java/java-collection/Untitled 2.png","slug":"Untitled 2.png","post":"cki7m45kb000786w87o2e1g1b","modified":0,"renderable":0},{"_id":"source/_posts/it/java/java-collection/Untitled 3.png","slug":"Untitled 3.png","post":"cki7m45kb000786w87o2e1g1b","modified":0,"renderable":0},{"_id":"source/_posts/it/java/java-collection/Untitled 4.png","slug":"Untitled 4.png","post":"cki7m45kb000786w87o2e1g1b","modified":0,"renderable":0},{"_id":"source/_posts/it/java/java-collection/Untitled 5.png","slug":"Untitled 5.png","post":"cki7m45kb000786w87o2e1g1b","modified":0,"renderable":0},{"_id":"source/_posts/it/java/java-collection/Untitled 6.png","slug":"Untitled 6.png","post":"cki7m45kb000786w87o2e1g1b","modified":0,"renderable":0},{"_id":"source/_posts/it/java/java-collection/Untitled.png","slug":"Untitled.png","post":"cki7m45kb000786w87o2e1g1b","modified":0,"renderable":0},{"_id":"source/_drafts/language/han/writing/chinese-honorific-for-work-mail/陈寅恪致函傅斯年.jpg","slug":"陈寅恪致函傅斯年.jpg","post":"cki7m45ll001086w8bpnsjdpi","modified":0,"renderable":0},{"_id":"source/_drafts/language/han/writing/chinese-honorific-for-work-mail/中文祝颂词分析.jpg","slug":"中文祝颂词分析.jpg","post":"cki7m45ll001086w8bpnsjdpi","modified":0,"renderable":0},{"_id":"source/_drafts/language/han/writing/chinese-honorific-for-work-mail/english-mail-example.jpg","slug":"english-mail-example.jpg","post":"cki7m45ll001086w8bpnsjdpi","modified":0,"renderable":0},{"_id":"source/_drafts/language/han/writing/chinese-honorific-for-work-mail/jp-mail-example.jpg","slug":"jp-mail-example.jpg","post":"cki7m45ll001086w8bpnsjdpi","modified":0,"renderable":0},{"_id":"source/_drafts/language/han/writing/chinese-honorific-for-work-mail/公函一.jpg","slug":"公函一.jpg","post":"cki7m45ll001086w8bpnsjdpi","modified":0,"renderable":0},{"_id":"source/_drafts/language/han/writing/chinese-honorific-for-work-mail/公函二.jpg","slug":"公函二.jpg","post":"cki7m45ll001086w8bpnsjdpi","modified":0,"renderable":0},{"_id":"source/_drafts/language/han/writing/chinese-honorific-for-work-mail/现代电子邮件公函格式.jpg","slug":"现代电子邮件公函格式.jpg","post":"cki7m45ll001086w8bpnsjdpi","modified":0,"renderable":0}],"PostCategory":[],"PostTag":[{"post_id":"cki7m45ef000086w858txruhy","tag_id":"cki7m45ej000186w8e620ctu3","_id":"cki7m45ek000286w85aqbgyv3"},{"post_id":"cki7m45im000386w8o36pogdc","tag_id":"cki7m45in000486w8bg21xezq","_id":"cki7m45io000586w830568q8r"},{"post_id":"cki7m45ka000686w8576suewn","tag_id":"cki7m45kb000886w8hl5eqld1","_id":"cki7m45ke000d86w8ojuzbmia"},{"post_id":"cki7m45kb000786w87o2e1g1b","tag_id":"cki7m45ke000c86w8j9ovrwdo","_id":"cki7m45kf000g86w8l6j428hx"},{"post_id":"cki7m45kb000986w8j8rlhcvj","tag_id":"cki7m45kf000f86w8udevjq40","_id":"cki7m45kh000k86w82axoextr"},{"post_id":"cki7m45kb000986w8j8rlhcvj","tag_id":"cki7m45kf000h86w8e7e8txmy","_id":"cki7m45kh000l86w8lzwuox33"},{"post_id":"cki7m45kb000986w8j8rlhcvj","tag_id":"cki7m45kg000i86w8zswc9ovo","_id":"cki7m45ki000n86w8ct9mwell"},{"post_id":"cki7m45kc000a86w8gslxrua7","tag_id":"cki7m45kg000i86w8zswc9ovo","_id":"cki7m45kj000q86w8kr9dwoge"},{"post_id":"cki7m45kc000a86w8gslxrua7","tag_id":"cki7m45kh000m86w8gpnjzf3p","_id":"cki7m45kj000r86w8zdonlb99"},{"post_id":"cki7m45kc000a86w8gslxrua7","tag_id":"cki7m45kf000h86w8e7e8txmy","_id":"cki7m45kj000t86w8u502m10d"},{"post_id":"cki7m45kd000b86w8m68y82vr","tag_id":"cki7m45ke000c86w8j9ovrwdo","_id":"cki7m45kj000u86w8w9vmaq5b"},{"post_id":"cki7m45ke000e86w8zh7ztng4","tag_id":"cki7m45kj000s86w8fzv9heed","_id":"cki7m45kk000x86w81ktg0lg8"},{"post_id":"cki7m45ke000e86w8zh7ztng4","tag_id":"cki7m45kh000m86w8gpnjzf3p","_id":"cki7m45kk000y86w81kosqduf"},{"post_id":"cki7m45ke000e86w8zh7ztng4","tag_id":"cki7m45kg000i86w8zswc9ovo","_id":"cki7m45kl000z86w8b27d5mo6"},{"post_id":"cki7m45ll001086w8bpnsjdpi","tag_id":"cki7m45ln001186w8o372er9t","_id":"cki7m45lo001786w8xbr7lbk2"},{"post_id":"cki7m45ll001086w8bpnsjdpi","tag_id":"cki7m45ln001286w8u99cc9a6","_id":"cki7m45lo001886w89ozh26zu"},{"post_id":"cki7m45ll001086w8bpnsjdpi","tag_id":"cki7m45ln001386w8o0c0qrnv","_id":"cki7m45lo001986w89fbtaqj5"},{"post_id":"cki7m45ll001086w8bpnsjdpi","tag_id":"cki7m45ln001486w89xbewyr2","_id":"cki7m45lo001a86w81cbpxcjr"},{"post_id":"cki7m45ll001086w8bpnsjdpi","tag_id":"cki7m45lo001586w8gssybd1v","_id":"cki7m45lp001b86w8obfoxzbx"},{"post_id":"cki7m45ll001086w8bpnsjdpi","tag_id":"cki7m45lo001686w8458ue9uu","_id":"cki7m45lp001c86w8ndueohfa"},{"post_id":"cki7m45md001d86w8g1fd1ooa","tag_id":"cki7m45me001e86w8bjn49u39","_id":"cki7m45me001f86w8g1c2zrwj"}],"Tag":[{"name":"Hello","_id":"cki7m45ej000186w8e620ctu3"},{"name":"聆聽音樂","_id":"cki7m45in000486w8bg21xezq"},{"name":"日本語","_id":"cki7m45kb000886w8hl5eqld1"},{"name":"Java","_id":"cki7m45ke000c86w8j9ovrwdo"},{"name":"詩經","_id":"cki7m45kf000f86w8udevjq40"},{"name":"甲子話","_id":"cki7m45kf000h86w8e7e8txmy"},{"name":"閩南語","_id":"cki7m45kg000i86w8zswc9ovo"},{"name":"潮州話","_id":"cki7m45kh000m86w8gpnjzf3p"},{"name":"潮劇","_id":"cki7m45kj000s86w8fzv9heed"},{"name":"Chinese","_id":"cki7m45ln001186w8o372er9t"},{"name":"Hhonorific","_id":"cki7m45ln001286w8u99cc9a6"},{"name":"Mail","_id":"cki7m45ln001386w8o0c0qrnv"},{"name":"中文","_id":"cki7m45ln001486w89xbewyr2"},{"name":"敬语","_id":"cki7m45lo001586w8gssybd1v"},{"name":"邮件","_id":"cki7m45lo001686w8458ue9uu"},{"name":"JS","_id":"cki7m45me001e86w8bjn49u39"}]}}